Index.PACKAGES = {"cats.effect.internals" : [{"name" : "cats.effect.internals.TracingPlatform", "shortDescription" : "Holds platform-specific flags that control tracing behavior.", "members_class" : [{"member" : "cats.effect.internals.TracingPlatform#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/internals\/TracingPlatform.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/internals\/TracingPlatform.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/internals\/TracingPlatform.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/internals\/TracingPlatform.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/internals\/TracingPlatform.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/internals\/TracingPlatform.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/internals\/TracingPlatform.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/internals\/TracingPlatform.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/internals\/TracingPlatform.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/internals\/TracingPlatform.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/internals\/TracingPlatform.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/internals\/TracingPlatform.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/internals\/TracingPlatform.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/internals\/TracingPlatform.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/internals\/TracingPlatform.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/internals\/TracingPlatform.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/internals\/TracingPlatform.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/internals\/TracingPlatform.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/internals\/TracingPlatform.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/internals\/TracingPlatform.html", "kind" : "class"}], "cats.effect.tracing" : [{"name" : "cats.effect.tracing.IOEvent", "shortDescription" : "", "object" : "cats\/effect\/tracing\/IOEvent$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/tracing\/IOEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/tracing\/IOEvent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/tracing\/IOEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/tracing\/IOEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/tracing\/IOEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/tracing\/IOEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/tracing\/IOEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/tracing\/IOEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/tracing\/IOEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/tracing\/IOEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/tracing\/IOEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/tracing\/IOEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/tracing\/IOEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/tracing\/IOEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/tracing\/IOEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/tracing\/IOEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "StackTrace", "tail" : "", "member" : "cats.effect.tracing.IOEvent.StackTrace", "link" : "cats\/effect\/tracing\/IOEvent$.html#StackTraceextendsIOEventwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/tracing\/IOEvent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/tracing\/IOEvent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/tracing\/IOEvent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/tracing\/IOEvent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/tracing\/IOEvent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/tracing\/IOEvent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/tracing\/IOEvent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOEvent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOEvent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOEvent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/tracing\/IOEvent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/tracing\/IOEvent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/tracing\/IOEvent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/tracing\/IOEvent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/tracing\/IOEvent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/tracing\/IOEvent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/tracing\/IOEvent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/tracing\/IOEvent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/tracing\/IOEvent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/tracing\/IOEvent.html", "kind" : "class"}, {"name" : "cats.effect.tracing.IOTrace", "shortDescription" : "", "members_case class" : [{"label" : "showFiberTrace", "tail" : "(options: PrintingOptions): String", "member" : "cats.effect.tracing.IOTrace.showFiberTrace", "link" : "cats\/effect\/tracing\/IOTrace.html#showFiberTrace(options:cats.effect.tracing.PrintingOptions):String", "kind" : "def"}, {"label" : "printFiberTrace", "tail" : "(options: PrintingOptions): IO[Unit]", "member" : "cats.effect.tracing.IOTrace.printFiberTrace", "link" : "cats\/effect\/tracing\/IOTrace.html#printFiberTrace(options:cats.effect.tracing.PrintingOptions):cats.effect.IO[Unit]", "kind" : "def"}, {"member" : "cats.effect.tracing.IOTrace#<init>", "error" : "unsupported entity"}, {"label" : "omitted", "tail" : ": Int", "member" : "cats.effect.tracing.IOTrace.omitted", "link" : "cats\/effect\/tracing\/IOTrace.html#omitted:Int", "kind" : "val"}, {"label" : "captured", "tail" : ": Int", "member" : "cats.effect.tracing.IOTrace.captured", "link" : "cats\/effect\/tracing\/IOTrace.html#captured:Int", "kind" : "val"}, {"label" : "events", "tail" : ": List[IOEvent]", "member" : "cats.effect.tracing.IOTrace.events", "link" : "cats\/effect\/tracing\/IOTrace.html#events:List[cats.effect.tracing.IOEvent]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "cats\/effect\/tracing\/IOTrace.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/tracing\/IOTrace.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/tracing\/IOTrace.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/tracing\/IOTrace.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/tracing\/IOTrace.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/tracing\/IOTrace.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/tracing\/IOTrace.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/tracing\/IOTrace.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOTrace.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOTrace.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/IOTrace.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/tracing\/IOTrace.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/tracing\/IOTrace.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/tracing\/IOTrace.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/tracing\/IOTrace.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/tracing\/IOTrace.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/tracing\/IOTrace.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cats\/effect\/tracing\/IOTrace.html", "kind" : "case class"}, {"name" : "cats.effect.tracing.PrintingOptions", "shortDescription" : "", "object" : "cats\/effect\/tracing\/PrintingOptions$.html", "members_object" : [{"label" : "apply", "tail" : "(): PrintingOptions", "member" : "cats.effect.tracing.PrintingOptions.apply", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#apply():cats.effect.tracing.PrintingOptions", "kind" : "def"}, {"label" : "Default", "tail" : ": PrintingOptions", "member" : "cats.effect.tracing.PrintingOptions.Default", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#Default:cats.effect.tracing.PrintingOptions", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/tracing\/PrintingOptions$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/tracing\/PrintingOptions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "withIgnoreStackTraceLines", "tail" : "(ignoreStackTraceLines: Int): PrintingOptions", "member" : "cats.effect.tracing.PrintingOptions.withIgnoreStackTraceLines", "link" : "cats\/effect\/tracing\/PrintingOptions.html#withIgnoreStackTraceLines(ignoreStackTraceLines:Int):cats.effect.tracing.PrintingOptions", "kind" : "def"}, {"label" : "withMaxStackTraceLines", "tail" : "(maxStackTraceLines: Int): PrintingOptions", "member" : "cats.effect.tracing.PrintingOptions.withMaxStackTraceLines", "link" : "cats\/effect\/tracing\/PrintingOptions.html#withMaxStackTraceLines(maxStackTraceLines:Int):cats.effect.tracing.PrintingOptions", "kind" : "def"}, {"label" : "withShowFullStackTraces", "tail" : "(showFullStackTraces: Boolean): PrintingOptions", "member" : "cats.effect.tracing.PrintingOptions.withShowFullStackTraces", "link" : "cats\/effect\/tracing\/PrintingOptions.html#withShowFullStackTraces(showFullStackTraces:Boolean):cats.effect.tracing.PrintingOptions", "kind" : "def"}, {"label" : "ignoreStackTraceLines", "tail" : ": Int", "member" : "cats.effect.tracing.PrintingOptions.ignoreStackTraceLines", "link" : "cats\/effect\/tracing\/PrintingOptions.html#ignoreStackTraceLines:Int", "kind" : "val"}, {"label" : "maxStackTraceLines", "tail" : ": Int", "member" : "cats.effect.tracing.PrintingOptions.maxStackTraceLines", "link" : "cats\/effect\/tracing\/PrintingOptions.html#maxStackTraceLines:Int", "kind" : "val"}, {"label" : "showFullStackTraces", "tail" : ": Boolean", "member" : "cats.effect.tracing.PrintingOptions.showFullStackTraces", "link" : "cats\/effect\/tracing\/PrintingOptions.html#showFullStackTraces:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "cats\/effect\/tracing\/PrintingOptions.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/tracing\/PrintingOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/tracing\/PrintingOptions.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/tracing\/PrintingOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/tracing\/PrintingOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/tracing\/PrintingOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/tracing\/PrintingOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/tracing\/PrintingOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/PrintingOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/PrintingOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/tracing\/PrintingOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/tracing\/PrintingOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/tracing\/PrintingOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/tracing\/PrintingOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/tracing\/PrintingOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/tracing\/PrintingOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/tracing\/PrintingOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cats\/effect\/tracing\/PrintingOptions.html", "kind" : "case class"}], "cats.effect.util" : [{"name" : "cats.effect.util.CompositeException", "shortDescription" : "A composite exception represents a list of exceptionscaught from evaluating multiple independent actionsand that need to be signaled together.", "object" : "cats\/effect\/util\/CompositeException$.html", "members_class" : [{"label" : "all", "tail" : "(): NonEmptyList[Throwable]", "member" : "cats.effect.util.CompositeException.all", "link" : "cats\/effect\/util\/CompositeException.html#all:cats.data.NonEmptyList[Throwable]", "kind" : "def"}, {"member" : "cats.effect.util.CompositeException#<init>", "error" : "unsupported entity"}, {"label" : "tail", "tail" : ": NonEmptyList[Throwable]", "member" : "cats.effect.util.CompositeException.tail", "link" : "cats\/effect\/util\/CompositeException.html#tail:cats.data.NonEmptyList[Throwable]", "kind" : "val"}, {"label" : "head", "tail" : ": Throwable", "member" : "cats.effect.util.CompositeException.head", "link" : "cats\/effect\/util\/CompositeException.html#head:Throwable", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "cats\/effect\/util\/CompositeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "cats\/effect\/util\/CompositeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "cats\/effect\/util\/CompositeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "cats\/effect\/util\/CompositeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "cats\/effect\/util\/CompositeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "cats\/effect\/util\/CompositeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "cats\/effect\/util\/CompositeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "cats\/effect\/util\/CompositeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "cats\/effect\/util\/CompositeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "cats\/effect\/util\/CompositeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "cats\/effect\/util\/CompositeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "cats\/effect\/util\/CompositeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "cats\/effect\/util\/CompositeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/util\/CompositeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/util\/CompositeException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/util\/CompositeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/util\/CompositeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/util\/CompositeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/util\/CompositeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/util\/CompositeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/util\/CompositeException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/util\/CompositeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/util\/CompositeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/util\/CompositeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/util\/CompositeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/util\/CompositeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/util\/CompositeException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/util\/CompositeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/util\/CompositeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/util\/CompositeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/util\/CompositeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapplySeq", "tail" : "(ref: CompositeException): Option[Seq[Throwable]]", "member" : "cats.effect.util.CompositeException.unapplySeq", "link" : "cats\/effect\/util\/CompositeException$.html#unapplySeq(ref:cats.effect.util.CompositeException):Option[Seq[Throwable]]", "kind" : "def"}, {"label" : "apply", "tail" : "(first: Throwable, second: Throwable, rest: List[Throwable]): CompositeException", "member" : "cats.effect.util.CompositeException.apply", "link" : "cats\/effect\/util\/CompositeException$.html#apply(first:Throwable,second:Throwable,rest:List[Throwable]):cats.effect.util.CompositeException", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/util\/CompositeException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/util\/CompositeException$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/util\/CompositeException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/util\/CompositeException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/util\/CompositeException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/util\/CompositeException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/util\/CompositeException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/util\/CompositeException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/util\/CompositeException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/util\/CompositeException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/util\/CompositeException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/util\/CompositeException$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/util\/CompositeException$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/util\/CompositeException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/util\/CompositeException$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/util\/CompositeException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/util\/CompositeException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/util\/CompositeException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/util\/CompositeException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/util\/CompositeException.html", "kind" : "class"}], "cats" : [], "cats.effect" : [{"name" : "cats.effect.Async", "object" : "cats\/effect\/Async$.html", "members_object" : [{"label" : "ops", "tail" : ": ops$", "member" : "cats.effect.Async.ops", "link" : "cats\/effect\/Async$.html#ops:cats.effect.Async.ops$", "kind" : "val"}, {"label" : "ops$", "tail" : "", "member" : "cats.effect.Async.ops$", "link" : "cats\/effect\/Async$.html#ops$extendsAnyRef", "kind" : "class"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.Async.nonInheritedOps", "link" : "cats\/effect\/Async$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToAsyncOps", "tail" : "", "member" : "cats.effect.Async.ToAsyncOps", "link" : "cats\/effect\/Async$.html#ToAsyncOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.Async.AllOps", "link" : "cats\/effect\/Async$.html#AllOps[F[_],A]extendsAsync.Ops[F,A]withSync.AllOps[F,A]withLiftIO.AllOps[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.Async.Ops", "link" : "cats\/effect\/Async$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: Async[F]): Async[F]", "member" : "cats.effect.Async.apply", "link" : "cats\/effect\/Async$.html#apply[F[_]](implicitinstance:cats.effect.Async[F]):cats.effect.Async[F]", "kind" : "def"}, {"label" : "ReaderWriterStateTAsync", "tail" : "(arg0: Async[F], arg1: Monoid[L]): Async[[ε$6$]IndexedReaderWriterStateT[F, E, L, S, S, ε$6$]]", "member" : "cats.effect.Async.ReaderWriterStateTAsync", "link" : "cats\/effect\/Async$.html#ReaderWriterStateTAsync[F[_],E,L,S](implicitevidence$11:cats.effect.Async[F],implicitevidence$12:cats.Monoid[L]):cats.effect.Async[[ε$6$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$6$]]", "kind" : "implicit def"}, {"label" : "catsIorTAsync", "tail" : "(arg0: Async[F], arg1: Semigroup[L]): Async[[γ$5$]IorT[F, L, γ$5$]]", "member" : "cats.effect.Async.catsIorTAsync", "link" : "cats\/effect\/Async$.html#catsIorTAsync[F[_],L](implicitevidence$9:cats.effect.Async[F],implicitevidence$10:cats.Semigroup[L]):cats.effect.Async[[γ$5$]cats.data.IorT[F,L,γ$5$]]", "kind" : "implicit def"}, {"label" : "catsKleisliAsync", "tail" : "(arg0: Async[F]): Async[[γ$4$]Kleisli[F, R, γ$4$]]", "member" : "cats.effect.Async.catsKleisliAsync", "link" : "cats\/effect\/Async$.html#catsKleisliAsync[F[_],R](implicitevidence$8:cats.effect.Async[F]):cats.effect.Async[[γ$4$]cats.data.Kleisli[F,R,γ$4$]]", "kind" : "implicit def"}, {"label" : "catsWriterTAsync", "tail" : "(arg0: Async[F], arg1: Monoid[L]): Async[[γ$3$]WriterT[F, L, γ$3$]]", "member" : "cats.effect.Async.catsWriterTAsync", "link" : "cats\/effect\/Async$.html#catsWriterTAsync[F[_],L](implicitevidence$6:cats.effect.Async[F],implicitevidence$7:cats.Monoid[L]):cats.effect.Async[[γ$3$]cats.data.WriterT[F,L,γ$3$]]", "kind" : "implicit def"}, {"label" : "catsStateTAsync", "tail" : "(arg0: Async[F]): Async[[γ$2$]IndexedStateT[F, S, S, γ$2$]]", "member" : "cats.effect.Async.catsStateTAsync", "link" : "cats\/effect\/Async$.html#catsStateTAsync[F[_],S](implicitevidence$5:cats.effect.Async[F]):cats.effect.Async[[γ$2$]cats.data.IndexedStateT[F,S,S,γ$2$]]", "kind" : "implicit def"}, {"label" : "catsOptionTAsync", "tail" : "(arg0: Async[F]): Async[[β$1$]OptionT[F, β$1$]]", "member" : "cats.effect.Async.catsOptionTAsync", "link" : "cats\/effect\/Async$.html#catsOptionTAsync[F[_]](implicitevidence$4:cats.effect.Async[F]):cats.effect.Async[[β$1$]cats.data.OptionT[F,β$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTAsync", "tail" : "(arg0: Async[F]): Async[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.Async.catsEitherTAsync", "link" : "cats\/effect\/Async$.html#catsEitherTAsync[F[_],L](implicitevidence$3:cats.effect.Async[F]):cats.effect.Async[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "parSequenceN", "tail" : "(n: Long)(tma: T[M[A]])(arg0: Traverse[T], M: Async[M], P: Parallel[M]): M[T[A]]", "member" : "cats.effect.Async.parSequenceN", "link" : "cats\/effect\/Async$.html#parSequenceN[T[_],M[_],A](n:Long)(tma:T[M[A]])(implicitevidence$2:cats.Traverse[T],implicitM:cats.effect.Async[M],implicitP:cats.Parallel[M]):M[T[A]]", "kind" : "def"}, {"label" : "parTraverseN", "tail" : "(n: Long)(ta: T[A])(f: (A) => M[B])(arg0: Traverse[T], M: Async[M], P: Parallel[M]): M[T[B]]", "member" : "cats.effect.Async.parTraverseN", "link" : "cats\/effect\/Async$.html#parTraverseN[T[_],M[_],A,B](n:Long)(ta:T[A])(f:A=>M[B])(implicitevidence$1:cats.Traverse[T],implicitM:cats.effect.Async[M],implicitP:cats.Parallel[M]):M[T[B]]", "kind" : "def"}, {"label" : "memoize", "tail" : "(f: F[A])(F: Async[F]): F[F[A]]", "member" : "cats.effect.Async.memoize", "link" : "cats\/effect\/Async$.html#memoize[F[_],A](f:F[A])(implicitF:cats.effect.Async[F]):F[F[A]]", "kind" : "def"}, {"label" : "liftIO", "tail" : "(io: IO[A])(F: Async[F]): F[A]", "member" : "cats.effect.Async.liftIO", "link" : "cats\/effect\/Async$.html#liftIO[F[_],A](io:cats.effect.IO[A])(implicitF:cats.effect.Async[F]):F[A]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(fa: F[Future[A]])(F: Async[F], cs: ContextShift[F]): F[A]", "member" : "cats.effect.Async.fromFuture", "link" : "cats\/effect\/Async$.html#fromFuture[F[_],A](fa:F[scala.concurrent.Future[A]])(implicitF:cats.effect.Async[F],implicitcs:cats.effect.ContextShift[F]):F[A]", "kind" : "def"}, {"label" : "shift", "tail" : "(ec: ExecutionContext)(F: Async[F]): F[Unit]", "member" : "cats.effect.Async.shift", "link" : "cats\/effect\/Async$.html#shift[F[_]](ec:scala.concurrent.ExecutionContext)(implicitF:cats.effect.Async[F]):F[Unit]", "kind" : "def"}, {"label" : "never", "tail" : "(F: Async[F]): F[A]", "member" : "cats.effect.Async.never", "link" : "cats\/effect\/Async$.html#never[F[_],A](implicitF:cats.effect.Async[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Async$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Async$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Async$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Async$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Async$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Async$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Async$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Async$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Async$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Async$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Async$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Async$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Async$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Async$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Async$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Async$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Async$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Async$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Async$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Async.html", "kind" : "trait", "members_trait" : [{"label" : "never", "tail" : "(): F[A]", "member" : "cats.effect.Async.never", "link" : "cats\/effect\/Async.html#never[A]:F[A]", "kind" : "def"}, {"label" : "liftIO", "tail" : "(ioa: IO[A]): F[A]", "member" : "cats.effect.Async.liftIO", "link" : "cats\/effect\/Async.html#liftIO[A](ioa:cats.effect.IO[A]):F[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(thunk: => A): F[A]", "member" : "cats.effect.Sync.delay", "link" : "cats\/effect\/Async.html#delay[A](thunk:=>A):F[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: => F[A]): F[A]", "member" : "cats.effect.Sync.defer", "link" : "cats\/effect\/Async.html#defer[A](fa:=>F[A]):F[A]", "kind" : "final def"}, {"label" : "fix", "tail" : "(fn: (F[A]) => F[A]): F[A]", "member" : "cats.Defer.fix", "link" : "cats\/effect\/Async.html#fix[A](fn:F[A]=>F[A]):F[A]", "kind" : "def"}, {"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/Async.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[Throwable]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/Async.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/Async.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/Async.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/Async.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, Throwable]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/Async.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/Async.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (Throwable) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/Async.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/Async.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/Async.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/Async.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/Async.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/Async.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/Async.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/Async.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/Async.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/Async.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/Async.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/Async.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/Async.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/Async.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/Async.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/Async.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/Async.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/Async.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/Async.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/Async.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/Async.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/Async.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/Async.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/Async.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/Async.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/Async.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/Async.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/Async.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/Async.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/Async.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => Throwable): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/Async.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/Async.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/Async.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, Throwable]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/Async.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/Async.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/Async.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/Async.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (Throwable) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/Async.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/Async.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/Async.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, Throwable]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/Async.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, Throwable, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/Async.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[Throwable, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/Async.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (Throwable) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/Async.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/Async.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/Async.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/Async.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/Async.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/Async.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/Async.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/Async.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/Async.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/Async.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/Async.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/Async.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/Async.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/Async.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/Async.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/Async.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/Async.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/Async.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/Async.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/Async.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/Async.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/Async.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/Async.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/Async.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/Async.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/Async.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/Async.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/Async.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/Async.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/Async.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/Async.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/Async.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/Async.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/Async.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/Async.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/Async.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/Async.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/Async.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/Async.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/Async.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/Async.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/Async.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/Async.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/Async.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/Async.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/Async.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/Async.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/Async.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/Async.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/Async.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/Async.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/Async.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/Async.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/Async.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/Async.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/Async.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/Async.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/Async.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/Async.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/Async.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/Async.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/Async.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/Async.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/Async.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/Async.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/Async.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/Async.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/Async.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/Async.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/Async.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/Async.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/Async.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/Async.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/Async.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/Async.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/Async.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/Async.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/Async.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/Async.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/Async.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/Async.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/Async.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/Async.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/Async.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/Async.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/Async.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/Async.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/Async.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/Async.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/Async.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/Async.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/Async.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Async.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Async.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Async.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Async.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Async.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Async.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Async.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Async.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Async.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Async.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Async.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Async.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Async.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Async.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Async.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Async.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Async.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Async.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Async.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "asyncF", "tail" : "(k: ((Either[Throwable, A]) => Unit) => F[Unit]): F[A]", "member" : "cats.effect.Async.asyncF", "link" : "cats\/effect\/Async.html#asyncF[A](k:(scala.util.Either[Throwable,A]=>Unit)=>F[Unit]):F[A]", "kind" : "abstract def"}, {"label" : "async", "tail" : "(k: ((Either[Throwable, A]) => Unit) => Unit): F[A]", "member" : "cats.effect.Async.async", "link" : "cats\/effect\/Async.html#async[A](k:(scala.util.Either[Throwable,A]=>Unit)=>Unit):F[A]", "kind" : "abstract def"}, {"label" : "suspend", "tail" : "(thunk: => F[A]): F[A]", "member" : "cats.effect.Sync.suspend", "link" : "cats\/effect\/Async.html#suspend[A](thunk:=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[Throwable]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/Async.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/Async.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/Async.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (Throwable) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/Async.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: Throwable): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/Async.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/Async.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "A monad that can describe asynchronous or synchronous computationsthat produce exactly one result."}, {"name" : "cats.effect.Blocker", "shortDescription" : "An execution context that is safe to use for blocking operations.", "object" : "cats\/effect\/Blocker$.html", "members_class" : [{"label" : "blockOnK", "tail" : "(cs: ContextShift[F]): ~>[F, F]", "member" : "cats.effect.Blocker.blockOnK", "link" : "cats\/effect\/Blocker.html#blockOnK[F[_]](implicitcs:cats.effect.ContextShift[F]):F~>F", "kind" : "def"}, {"label" : "blockOn", "tail" : "(fa: F[A])(cs: ContextShift[F]): F[A]", "member" : "cats.effect.Blocker.blockOn", "link" : "cats\/effect\/Blocker.html#blockOn[F[_],A](fa:F[A])(implicitcs:cats.effect.ContextShift[F]):F[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(thunk: => A)(F: Sync[F], cs: ContextShift[F]): F[A]", "member" : "cats.effect.Blocker.delay", "link" : "cats\/effect\/Blocker.html#delay[F[_],A](thunk:=>A)(implicitF:cats.effect.Sync[F],implicitcs:cats.effect.ContextShift[F]):F[A]", "kind" : "def"}, {"label" : "blockingContext", "tail" : ": ExecutionContext", "member" : "cats.effect.Blocker.blockingContext", "link" : "cats\/effect\/Blocker.html#blockingContext:scala.concurrent.ExecutionContext", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/Blocker.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/Blocker.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Blocker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Blocker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/Blocker.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/Blocker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/Blocker.html#==(x$1:Any):Boolean", "kind" : "final def"}], "members_object" : [{"label" : "OutstandingTasksAtShutdown", "tail" : "", "member" : "cats.effect.internals.BlockerPlatform.OutstandingTasksAtShutdown", "link" : "cats\/effect\/Blocker$.html#OutstandingTasksAtShutdownextendsIllegalStateException", "kind" : "final class"}, {"label" : "liftExecutionContext", "tail" : "(ec: ExecutionContext): Blocker", "member" : "cats.effect.Blocker.liftExecutionContext", "link" : "cats\/effect\/Blocker$.html#liftExecutionContext(ec:scala.concurrent.ExecutionContext):cats.effect.Blocker", "kind" : "def"}, {"label" : "liftExecutorService", "tail" : "(es: ExecutorService): Blocker", "member" : "cats.effect.internals.BlockerPlatform.liftExecutorService", "link" : "cats\/effect\/Blocker$.html#liftExecutorService(es:java.util.concurrent.ExecutorService):cats.effect.Blocker", "kind" : "def"}, {"label" : "fromExecutorService", "tail" : "(makeExecutorService: F[ExecutorService])(F: Sync[F]): Resource[F, Blocker]", "member" : "cats.effect.internals.BlockerPlatform.fromExecutorService", "link" : "cats\/effect\/Blocker$.html#fromExecutorService[F[_]](makeExecutorService:F[java.util.concurrent.ExecutorService])(implicitF:cats.effect.Sync[F]):cats.effect.Resource[F,cats.effect.Blocker]", "kind" : "def"}, {"label" : "apply", "tail" : "(F: Sync[F]): Resource[F, Blocker]", "member" : "cats.effect.internals.BlockerPlatform.apply", "link" : "cats\/effect\/Blocker$.html#apply[F[_]](implicitF:cats.effect.Sync[F]):cats.effect.Resource[F,cats.effect.Blocker]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Blocker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Blocker$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Blocker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Blocker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Blocker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Blocker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Blocker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Blocker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Blocker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Blocker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Blocker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Blocker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Blocker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Blocker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Blocker$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Blocker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Blocker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Blocker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Blocker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/Blocker.html", "kind" : "class"}, {"name" : "cats.effect.Bracket", "object" : "cats\/effect\/Bracket$.html", "members_object" : [{"label" : "catsReaderWriterStateTBracketFromSync", "tail" : "(arg0: Sync[F], arg1: Monoid[L]): BracketThrow[[ε$6$]IndexedReaderWriterStateT[F, E, L, S, S, ε$6$]]", "member" : "cats.effect.Bracket.catsReaderWriterStateTBracketFromSync", "link" : "cats\/effect\/Bracket$.html#catsReaderWriterStateTBracketFromSync[F[_],E,L,S](implicitevidence$8:cats.effect.Sync[F],implicitevidence$9:cats.Monoid[L]):cats.effect.BracketThrow[[ε$6$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$6$]]", "kind" : "implicit def"}, {"label" : "catsIorTBracketFromSync", "tail" : "(arg0: Sync[F], arg1: Semigroup[L]): BracketThrow[[γ$5$]IorT[F, L, γ$5$]]", "member" : "cats.effect.Bracket.catsIorTBracketFromSync", "link" : "cats\/effect\/Bracket$.html#catsIorTBracketFromSync[F[_],L](implicitevidence$6:cats.effect.Sync[F],implicitevidence$7:cats.Semigroup[L]):cats.effect.BracketThrow[[γ$5$]cats.data.IorT[F,L,γ$5$]]", "kind" : "implicit def"}, {"label" : "catsWriterTBracketFromSync", "tail" : "(arg0: Sync[F], arg1: Monoid[L]): BracketThrow[[γ$4$]WriterT[F, L, γ$4$]]", "member" : "cats.effect.Bracket.catsWriterTBracketFromSync", "link" : "cats\/effect\/Bracket$.html#catsWriterTBracketFromSync[F[_],L](implicitevidence$4:cats.effect.Sync[F],implicitevidence$5:cats.Monoid[L]):cats.effect.BracketThrow[[γ$4$]cats.data.WriterT[F,L,γ$4$]]", "kind" : "implicit def"}, {"label" : "catsStateTBracketFromSync", "tail" : "(arg0: Sync[F]): BracketThrow[[γ$3$]IndexedStateT[F, S, S, γ$3$]]", "member" : "cats.effect.Bracket.catsStateTBracketFromSync", "link" : "cats\/effect\/Bracket$.html#catsStateTBracketFromSync[F[_],S](implicitevidence$3:cats.effect.Sync[F]):cats.effect.BracketThrow[[γ$3$]cats.data.IndexedStateT[F,S,S,γ$3$]]", "kind" : "implicit def"}, {"label" : "catsOptionTBracketFromSync", "tail" : "(arg0: Sync[F]): BracketThrow[[β$2$]OptionT[F, β$2$]]", "member" : "cats.effect.Bracket.catsOptionTBracketFromSync", "link" : "cats\/effect\/Bracket$.html#catsOptionTBracketFromSync[F[_]](implicitevidence$2:cats.effect.Sync[F]):cats.effect.BracketThrow[[β$2$]cats.data.OptionT[F,β$2$]]", "kind" : "implicit def"}, {"label" : "catsEitherTBracketFromSync", "tail" : "(arg0: Sync[F]): BracketThrow[[γ$1$]EitherT[F, L, γ$1$]]", "member" : "cats.effect.Bracket.catsEitherTBracketFromSync", "link" : "cats\/effect\/Bracket$.html#catsEitherTBracketFromSync[F[_],L](implicitevidence$1:cats.effect.Sync[F]):cats.effect.BracketThrow[[γ$1$]cats.data.EitherT[F,L,γ$1$]]", "kind" : "implicit def"}, {"label" : "catsKleisliBracket", "tail" : "(ev: Bracket[F, E]): Bracket[[γ$0$]Kleisli[F, R, γ$0$], E]", "member" : "cats.effect.Bracket.catsKleisliBracket", "link" : "cats\/effect\/Bracket$.html#catsKleisliBracket[F[_],R,E](implicitev:cats.effect.Bracket[F,E]):cats.effect.Bracket[[γ$0$]cats.data.Kleisli[F,R,γ$0$],E]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(ev: Bracket[F, E]): Bracket[F, E]", "member" : "cats.effect.Bracket.apply", "link" : "cats\/effect\/Bracket$.html#apply[F[_],E](implicitev:cats.effect.Bracket[F,E]):cats.effect.Bracket[F,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Bracket$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Bracket$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Bracket$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Bracket$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Bracket$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Bracket$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Bracket$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Bracket$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Bracket$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Bracket$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Bracket$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Bracket$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Bracket$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Bracket$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Bracket$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Bracket$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Bracket$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Bracket$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Bracket$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Bracket.html", "kind" : "trait", "members_trait" : [{"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/Bracket.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[E]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/Bracket.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/Bracket.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/Bracket.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/Bracket.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[E, E]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/Bracket.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[E, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/Bracket.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (E) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/Bracket.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/Bracket.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => E)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/Bracket.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => E)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/Bracket.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/Bracket.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/Bracket.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/Bracket.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/Bracket.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/Bracket.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/Bracket.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/Bracket.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/Bracket.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/Bracket.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/Bracket.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/Bracket.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/Bracket.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/Bracket.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/Bracket.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/Bracket.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/Bracket.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/Bracket.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/Bracket.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/Bracket.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/Bracket.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/Bracket.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/Bracket.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/Bracket.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/Bracket.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/Bracket.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[E, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/Bracket.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => E): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/Bracket.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[E, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/Bracket.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, E]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/Bracket.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, E]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/Bracket.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, E]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/Bracket.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, E]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/Bracket.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[E, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/Bracket.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (E) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/Bracket.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[E, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/Bracket.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[E, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/Bracket.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, E]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/Bracket.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, E, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/Bracket.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[E, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/Bracket.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (E) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/Bracket.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/Bracket.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/Bracket.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/Bracket.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/Bracket.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/Bracket.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/Bracket.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/Bracket.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/Bracket.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/Bracket.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/Bracket.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/Bracket.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/Bracket.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/Bracket.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/Bracket.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/Bracket.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/Bracket.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/Bracket.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/Bracket.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/Bracket.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/Bracket.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/Bracket.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/Bracket.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/Bracket.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/Bracket.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/Bracket.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/Bracket.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/Bracket.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/Bracket.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/Bracket.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/Bracket.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/Bracket.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/Bracket.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/Bracket.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/Bracket.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/Bracket.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/Bracket.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/Bracket.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/Bracket.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/Bracket.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/Bracket.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/Bracket.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/Bracket.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/Bracket.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/Bracket.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/Bracket.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/Bracket.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/Bracket.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/Bracket.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/Bracket.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/Bracket.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/Bracket.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/Bracket.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/Bracket.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/Bracket.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/Bracket.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/Bracket.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/Bracket.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/Bracket.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/Bracket.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/Bracket.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/Bracket.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/Bracket.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/Bracket.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/Bracket.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/Bracket.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/Bracket.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/Bracket.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/Bracket.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/Bracket.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/Bracket.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/Bracket.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/Bracket.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/Bracket.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/Bracket.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/Bracket.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/Bracket.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/Bracket.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/Bracket.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/Bracket.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/Bracket.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/Bracket.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/Bracket.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/Bracket.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/Bracket.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/Bracket.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/Bracket.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/Bracket.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/Bracket.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/Bracket.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/Bracket.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/Bracket.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Bracket.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Bracket.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Bracket.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Bracket.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Bracket.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Bracket.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Bracket.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Bracket.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Bracket.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Bracket.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Bracket.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Bracket.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Bracket.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Bracket.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Bracket.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Bracket.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Bracket.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Bracket.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Bracket.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[E]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/Bracket.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/Bracket.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/Bracket.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (E) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/Bracket.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: E): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/Bracket.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/Bracket.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "An extension of MonadError exposing the bracket operation,a generalized abstracted pattern of safe resource acquisition andrelease in the face of errors or interruption."}, {"name" : "cats.effect.Clock", "object" : "cats\/effect\/Clock$.html", "members_object" : [{"label" : "JvmClockOps", "tail" : "", "member" : "cats.effect.internals.ClockPlatform.JvmClockOps", "link" : "cats\/effect\/Clock$.html#JvmClockOps[F[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "ClockOps", "tail" : "", "member" : "cats.effect.Clock.ClockOps", "link" : "cats\/effect\/Clock$.html#ClockOps[F[_]]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "create", "tail" : "(F: Sync[F]): Clock[F]", "member" : "cats.effect.Clock.create", "link" : "cats\/effect\/Clock$.html#create[F[_]](implicitF:cats.effect.Sync[F]):cats.effect.Clock[F]", "kind" : "def"}, {"label" : "apply", "tail" : "(ev: Clock[F]): Clock[F]", "member" : "cats.effect.Clock.apply", "link" : "cats\/effect\/Clock$.html#apply[F[_]](implicitev:cats.effect.Clock[F]):cats.effect.Clock[F]", "kind" : "def"}, {"label" : "deriveResource", "tail" : "(F: Applicative[F], clock: Clock[F]): Clock[[β$12$]Resource[F, β$12$]]", "member" : "cats.effect.LowPriorityImplicits.deriveResource", "link" : "cats\/effect\/Clock$.html#deriveResource[F[_]](implicitF:cats.Applicative[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[β$12$]cats.effect.Resource[F,β$12$]]", "kind" : "implicit def"}, {"label" : "deriveIorT", "tail" : "(F: Applicative[F], clock: Clock[F]): Clock[[γ$10$]IorT[F, L, γ$10$]]", "member" : "cats.effect.LowPriorityImplicits.deriveIorT", "link" : "cats\/effect\/Clock$.html#deriveIorT[F[_],L](implicitF:cats.Applicative[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$10$]cats.data.IorT[F,L,γ$10$]]", "kind" : "implicit def"}, {"label" : "deriveKleisli", "tail" : "(clock: Clock[F]): Clock[[γ$8$]Kleisli[F, R, γ$8$]]", "member" : "cats.effect.LowPriorityImplicits.deriveKleisli", "link" : "cats\/effect\/Clock$.html#deriveKleisli[F[_],R](implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$8$]cats.data.Kleisli[F,R,γ$8$]]", "kind" : "implicit def"}, {"label" : "deriveWriterT", "tail" : "(F: Applicative[F], L: Monoid[L], clock: Clock[F]): Clock[[γ$6$]WriterT[F, L, γ$6$]]", "member" : "cats.effect.LowPriorityImplicits.deriveWriterT", "link" : "cats\/effect\/Clock$.html#deriveWriterT[F[_],L](implicitF:cats.Applicative[F],implicitL:cats.Monoid[L],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$6$]cats.data.WriterT[F,L,γ$6$]]", "kind" : "implicit def"}, {"label" : "deriveStateT", "tail" : "(F: Applicative[F], clock: Clock[F]): Clock[[γ$4$]IndexedStateT[F, S, S, γ$4$]]", "member" : "cats.effect.LowPriorityImplicits.deriveStateT", "link" : "cats\/effect\/Clock$.html#deriveStateT[F[_],S](implicitF:cats.Applicative[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$4$]cats.data.IndexedStateT[F,S,S,γ$4$]]", "kind" : "implicit def"}, {"label" : "deriveOptionT", "tail" : "(F: Functor[F], clock: Clock[F]): Clock[[β$2$]OptionT[F, β$2$]]", "member" : "cats.effect.LowPriorityImplicits.deriveOptionT", "link" : "cats\/effect\/Clock$.html#deriveOptionT[F[_]](implicitF:cats.Functor[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[β$2$]cats.data.OptionT[F,β$2$]]", "kind" : "implicit def"}, {"label" : "deriveEitherT", "tail" : "(F: Functor[F], clock: Clock[F]): Clock[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.LowPriorityImplicits.deriveEitherT", "link" : "cats\/effect\/Clock$.html#deriveEitherT[F[_],L](implicitF:cats.Functor[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "extractFromTimer", "tail" : "(timer: Timer[F]): Clock[F]", "member" : "cats.effect.LowerPriorityImplicits.extractFromTimer", "link" : "cats\/effect\/Clock$.html#extractFromTimer[F[_]](implicittimer:cats.effect.Timer[F]):cats.effect.Clock[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Clock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Clock$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Clock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Clock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Clock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Clock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Clock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Clock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Clock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Clock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Clock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Clock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Clock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Clock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Clock$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Clock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Clock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Clock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Clock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Clock.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Clock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Clock.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Clock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Clock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Clock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Clock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Clock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Clock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Clock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Clock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Clock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Clock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Clock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Clock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Clock.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Clock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Clock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Clock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Clock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "monotonic", "tail" : "(unit: TimeUnit): F[Long]", "member" : "cats.effect.Clock.monotonic", "link" : "cats\/effect\/Clock.html#monotonic(unit:concurrent.duration.TimeUnit):F[Long]", "kind" : "abstract def"}, {"label" : "realTime", "tail" : "(unit: TimeUnit): F[Long]", "member" : "cats.effect.Clock.realTime", "link" : "cats\/effect\/Clock.html#realTime(unit:concurrent.duration.TimeUnit):F[Long]", "kind" : "abstract def"}], "shortDescription" : "Clock provides the current time, as a pure alternative to:"}, {"name" : "cats.effect.Concurrent", "object" : "cats\/effect\/Concurrent$.html", "members_object" : [{"label" : "ops", "tail" : ": ops$", "member" : "cats.effect.Concurrent.ops", "link" : "cats\/effect\/Concurrent$.html#ops:cats.effect.Concurrent.ops$", "kind" : "val"}, {"label" : "ops$", "tail" : "", "member" : "cats.effect.Concurrent.ops$", "link" : "cats\/effect\/Concurrent$.html#ops$extendsAnyRef", "kind" : "class"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.Concurrent.nonInheritedOps", "link" : "cats\/effect\/Concurrent$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToConcurrentOps", "tail" : "", "member" : "cats.effect.Concurrent.ToConcurrentOps", "link" : "cats\/effect\/Concurrent$.html#ToConcurrentOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.Concurrent.AllOps", "link" : "cats\/effect\/Concurrent$.html#AllOps[F[_],A]extendsConcurrent.Ops[F,A]withAsync.AllOps[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.Concurrent.Ops", "link" : "cats\/effect\/Concurrent$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: Concurrent[F]): Concurrent[F]", "member" : "cats.effect.Concurrent.apply", "link" : "cats\/effect\/Concurrent$.html#apply[F[_]](implicitinstance:cats.effect.Concurrent[F]):cats.effect.Concurrent[F]", "kind" : "def"}, {"label" : "catsIorTConcurrent", "tail" : "(arg0: Concurrent[F], arg1: Semigroup[L]): Concurrent[[γ$4$]IorT[F, L, γ$4$]]", "member" : "cats.effect.Concurrent.catsIorTConcurrent", "link" : "cats\/effect\/Concurrent$.html#catsIorTConcurrent[F[_],L](implicitevidence$8:cats.effect.Concurrent[F],implicitevidence$9:cats.Semigroup[L]):cats.effect.Concurrent[[γ$4$]cats.data.IorT[F,L,γ$4$]]", "kind" : "implicit def"}, {"label" : "catsWriterTConcurrent", "tail" : "(arg0: Concurrent[F], arg1: Monoid[L]): Concurrent[[γ$3$]WriterT[F, L, γ$3$]]", "member" : "cats.effect.Concurrent.catsWriterTConcurrent", "link" : "cats\/effect\/Concurrent$.html#catsWriterTConcurrent[F[_],L](implicitevidence$6:cats.effect.Concurrent[F],implicitevidence$7:cats.Monoid[L]):cats.effect.Concurrent[[γ$3$]cats.data.WriterT[F,L,γ$3$]]", "kind" : "implicit def"}, {"label" : "catsKleisliConcurrent", "tail" : "(arg0: Concurrent[F]): Concurrent[[γ$2$]Kleisli[F, R, γ$2$]]", "member" : "cats.effect.Concurrent.catsKleisliConcurrent", "link" : "cats\/effect\/Concurrent$.html#catsKleisliConcurrent[F[_],R](implicitevidence$5:cats.effect.Concurrent[F]):cats.effect.Concurrent[[γ$2$]cats.data.Kleisli[F,R,γ$2$]]", "kind" : "implicit def"}, {"label" : "catsOptionTConcurrent", "tail" : "(arg0: Concurrent[F]): Concurrent[[β$1$]OptionT[F, β$1$]]", "member" : "cats.effect.Concurrent.catsOptionTConcurrent", "link" : "cats\/effect\/Concurrent$.html#catsOptionTConcurrent[F[_]](implicitevidence$4:cats.effect.Concurrent[F]):cats.effect.Concurrent[[β$1$]cats.data.OptionT[F,β$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTConcurrent", "tail" : "(arg0: Concurrent[F]): Concurrent[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.Concurrent.catsEitherTConcurrent", "link" : "cats\/effect\/Concurrent$.html#catsEitherTConcurrent[F[_],L](implicitevidence$3:cats.effect.Concurrent[F]):cats.effect.Concurrent[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "parSequenceN", "tail" : "(n: Long)(tma: T[M[A]])(arg0: Traverse[T], M: Concurrent[M], P: Parallel[M]): M[T[A]]", "member" : "cats.effect.Concurrent.parSequenceN", "link" : "cats\/effect\/Concurrent$.html#parSequenceN[T[_],M[_],A](n:Long)(tma:T[M[A]])(implicitevidence$2:cats.Traverse[T],implicitM:cats.effect.Concurrent[M],implicitP:cats.Parallel[M]):M[T[A]]", "kind" : "def"}, {"label" : "parTraverseN", "tail" : "(n: Long)(ta: T[A])(f: (A) => M[B])(arg0: Traverse[T], M: Concurrent[M], P: Parallel[M]): M[T[B]]", "member" : "cats.effect.Concurrent.parTraverseN", "link" : "cats\/effect\/Concurrent$.html#parTraverseN[T[_],M[_],A,B](n:Long)(ta:T[A])(f:A=>M[B])(implicitevidence$1:cats.Traverse[T],implicitM:cats.effect.Concurrent[M],implicitP:cats.Parallel[M]):M[T[B]]", "kind" : "def"}, {"label" : "continual", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B])(F: Concurrent[F]): F[B]", "member" : "cats.effect.Concurrent.continual", "link" : "cats\/effect\/Concurrent$.html#continual[F[_],A,B](fa:F[A])(f:scala.util.Either[Throwable,A]=>F[B])(implicitF:cats.effect.Concurrent[F]):F[B]", "kind" : "def"}, {"label" : "cancelableF", "tail" : "(k: ((Either[Throwable, A]) => Unit) => F[CancelToken[F]])(F: Concurrent[F]): F[A]", "member" : "cats.effect.Concurrent.cancelableF", "link" : "cats\/effect\/Concurrent$.html#cancelableF[F[_],A](k:(scala.util.Either[Throwable,A]=>Unit)=>F[cats.effect.CancelToken[F]])(implicitF:cats.effect.Concurrent[F]):F[A]", "kind" : "def"}, {"label" : "timeout", "tail" : "(fa: F[A], duration: FiniteDuration)(F: Concurrent[F], timer: Timer[F]): F[A]", "member" : "cats.effect.Concurrent.timeout", "link" : "cats\/effect\/Concurrent$.html#timeout[F[_],A](fa:F[A],duration:scala.concurrent.duration.FiniteDuration)(implicitF:cats.effect.Concurrent[F],implicittimer:cats.effect.Timer[F]):F[A]", "kind" : "def"}, {"label" : "memoize", "tail" : "(f: F[A])(F: Concurrent[F]): F[F[A]]", "member" : "cats.effect.Concurrent.memoize", "link" : "cats\/effect\/Concurrent$.html#memoize[F[_],A](f:F[A])(implicitF:cats.effect.Concurrent[F]):F[F[A]]", "kind" : "def"}, {"label" : "timeoutTo", "tail" : "(fa: F[A], duration: FiniteDuration, fallback: F[A])(F: Concurrent[F], timer: Timer[F]): F[A]", "member" : "cats.effect.Concurrent.timeoutTo", "link" : "cats\/effect\/Concurrent$.html#timeoutTo[F[_],A](fa:F[A],duration:scala.concurrent.duration.FiniteDuration,fallback:F[A])(implicitF:cats.effect.Concurrent[F],implicittimer:cats.effect.Timer[F]):F[A]", "kind" : "def"}, {"label" : "liftIO", "tail" : "(ioa: IO[A])(F: Concurrent[F]): F[A]", "member" : "cats.effect.Concurrent.liftIO", "link" : "cats\/effect\/Concurrent$.html#liftIO[F[_],A](ioa:cats.effect.IO[A])(implicitF:cats.effect.Concurrent[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Concurrent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Concurrent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Concurrent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Concurrent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Concurrent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Concurrent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Concurrent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Concurrent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Concurrent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Concurrent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Concurrent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Concurrent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Concurrent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Concurrent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Concurrent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Concurrent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Concurrent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Concurrent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Concurrent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Concurrent.html", "kind" : "trait", "members_trait" : [{"label" : "continual", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[B]", "member" : "cats.effect.Concurrent.continual", "link" : "cats\/effect\/Concurrent.html#continual[A,B](fa:F[A])(f:scala.util.Either[Throwable,A]=>F[B]):F[B]", "kind" : "def"}, {"label" : "liftIO", "tail" : "(ioa: IO[A]): F[A]", "member" : "cats.effect.Concurrent.liftIO", "link" : "cats\/effect\/Concurrent.html#liftIO[A](ioa:cats.effect.IO[A]):F[A]", "kind" : "def"}, {"label" : "cancelable", "tail" : "(k: ((Either[Throwable, A]) => Unit) => CancelToken[F]): F[A]", "member" : "cats.effect.Concurrent.cancelable", "link" : "cats\/effect\/Concurrent.html#cancelable[A](k:(scala.util.Either[Throwable,A]=>Unit)=>cats.effect.CancelToken[F]):F[A]", "kind" : "def"}, {"label" : "race", "tail" : "(fa: F[A], fb: F[B]): F[Either[A, B]]", "member" : "cats.effect.Concurrent.race", "link" : "cats\/effect\/Concurrent.html#race[A,B](fa:F[A],fb:F[B]):F[scala.util.Either[A,B]]", "kind" : "def"}, {"label" : "background", "tail" : "(fa: F[A]): Resource[F, F[A]]", "member" : "cats.effect.Concurrent.background", "link" : "cats\/effect\/Concurrent.html#background[A](fa:F[A]):cats.effect.Resource[F,F[A]]", "kind" : "def"}, {"label" : "never", "tail" : "(): F[A]", "member" : "cats.effect.Async.never", "link" : "cats\/effect\/Concurrent.html#never[A]:F[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(thunk: => A): F[A]", "member" : "cats.effect.Sync.delay", "link" : "cats\/effect\/Concurrent.html#delay[A](thunk:=>A):F[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: => F[A]): F[A]", "member" : "cats.effect.Sync.defer", "link" : "cats\/effect\/Concurrent.html#defer[A](fa:=>F[A]):F[A]", "kind" : "final def"}, {"label" : "fix", "tail" : "(fn: (F[A]) => F[A]): F[A]", "member" : "cats.Defer.fix", "link" : "cats\/effect\/Concurrent.html#fix[A](fn:F[A]=>F[A]):F[A]", "kind" : "def"}, {"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/Concurrent.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[Throwable]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/Concurrent.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/Concurrent.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/Concurrent.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/Concurrent.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, Throwable]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/Concurrent.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/Concurrent.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (Throwable) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/Concurrent.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/Concurrent.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/Concurrent.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/Concurrent.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/Concurrent.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/Concurrent.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/Concurrent.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/Concurrent.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/Concurrent.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/Concurrent.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/Concurrent.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/Concurrent.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/Concurrent.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/Concurrent.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/Concurrent.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/Concurrent.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/Concurrent.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/Concurrent.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/Concurrent.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/Concurrent.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/Concurrent.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/Concurrent.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/Concurrent.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/Concurrent.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/Concurrent.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/Concurrent.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/Concurrent.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/Concurrent.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/Concurrent.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/Concurrent.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => Throwable): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/Concurrent.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/Concurrent.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/Concurrent.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, Throwable]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/Concurrent.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/Concurrent.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/Concurrent.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/Concurrent.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (Throwable) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/Concurrent.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/Concurrent.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/Concurrent.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, Throwable]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/Concurrent.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, Throwable, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/Concurrent.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[Throwable, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/Concurrent.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (Throwable) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/Concurrent.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/Concurrent.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/Concurrent.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/Concurrent.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/Concurrent.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/Concurrent.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/Concurrent.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/Concurrent.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/Concurrent.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/Concurrent.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/Concurrent.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/Concurrent.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/Concurrent.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/Concurrent.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/Concurrent.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/Concurrent.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/Concurrent.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/Concurrent.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/Concurrent.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/Concurrent.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/Concurrent.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/Concurrent.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/Concurrent.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/Concurrent.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/Concurrent.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/Concurrent.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/Concurrent.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/Concurrent.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/Concurrent.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/Concurrent.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/Concurrent.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/Concurrent.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/Concurrent.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/Concurrent.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/Concurrent.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/Concurrent.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/Concurrent.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/Concurrent.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/Concurrent.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/Concurrent.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/Concurrent.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/Concurrent.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/Concurrent.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/Concurrent.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/Concurrent.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/Concurrent.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/Concurrent.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/Concurrent.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/Concurrent.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/Concurrent.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/Concurrent.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/Concurrent.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/Concurrent.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/Concurrent.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/Concurrent.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/Concurrent.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/Concurrent.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/Concurrent.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/Concurrent.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/Concurrent.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/Concurrent.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/Concurrent.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/Concurrent.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/Concurrent.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/Concurrent.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/Concurrent.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/Concurrent.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/Concurrent.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/Concurrent.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/Concurrent.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/Concurrent.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/Concurrent.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/Concurrent.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/Concurrent.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/Concurrent.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/Concurrent.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/Concurrent.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/Concurrent.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/Concurrent.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/Concurrent.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/Concurrent.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/Concurrent.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/Concurrent.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/Concurrent.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/Concurrent.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/Concurrent.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/Concurrent.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/Concurrent.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/Concurrent.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/Concurrent.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/Concurrent.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/Concurrent.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Concurrent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Concurrent.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Concurrent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Concurrent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Concurrent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Concurrent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Concurrent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Concurrent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Concurrent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Concurrent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Concurrent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Concurrent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Concurrent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Concurrent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Concurrent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Concurrent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Concurrent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Concurrent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Concurrent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "racePair", "tail" : "(fa: F[A], fb: F[B]): F[Either[(A, Fiber[F, B]), (Fiber[F, A], B)]]", "member" : "cats.effect.Concurrent.racePair", "link" : "cats\/effect\/Concurrent.html#racePair[A,B](fa:F[A],fb:F[B]):F[scala.util.Either[(A,cats.effect.Fiber[F,B]),(cats.effect.Fiber[F,A],B)]]", "kind" : "abstract def"}, {"label" : "start", "tail" : "(fa: F[A]): F[Fiber[F, A]]", "member" : "cats.effect.Concurrent.start", "link" : "cats\/effect\/Concurrent.html#start[A](fa:F[A]):F[cats.effect.Fiber[F,A]]", "kind" : "abstract def"}, {"label" : "asyncF", "tail" : "(k: ((Either[Throwable, A]) => Unit) => F[Unit]): F[A]", "member" : "cats.effect.Async.asyncF", "link" : "cats\/effect\/Concurrent.html#asyncF[A](k:(scala.util.Either[Throwable,A]=>Unit)=>F[Unit]):F[A]", "kind" : "abstract def"}, {"label" : "async", "tail" : "(k: ((Either[Throwable, A]) => Unit) => Unit): F[A]", "member" : "cats.effect.Async.async", "link" : "cats\/effect\/Concurrent.html#async[A](k:(scala.util.Either[Throwable,A]=>Unit)=>Unit):F[A]", "kind" : "abstract def"}, {"label" : "suspend", "tail" : "(thunk: => F[A]): F[A]", "member" : "cats.effect.Sync.suspend", "link" : "cats\/effect\/Concurrent.html#suspend[A](thunk:=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[Throwable]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/Concurrent.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/Concurrent.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/Concurrent.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (Throwable) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/Concurrent.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: Throwable): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/Concurrent.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/Concurrent.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "Type class for Async data types that are cancelable andcan be started concurrently."}, {"name" : "cats.effect.ConcurrentEffect", "object" : "cats\/effect\/ConcurrentEffect$.html", "members_object" : [{"label" : "ops", "tail" : ": ops$", "member" : "cats.effect.ConcurrentEffect.ops", "link" : "cats\/effect\/ConcurrentEffect$.html#ops:cats.effect.ConcurrentEffect.ops$", "kind" : "val"}, {"label" : "ops$", "tail" : "", "member" : "cats.effect.ConcurrentEffect.ops$", "link" : "cats\/effect\/ConcurrentEffect$.html#ops$extendsAnyRef", "kind" : "class"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.ConcurrentEffect.nonInheritedOps", "link" : "cats\/effect\/ConcurrentEffect$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToConcurrentEffectOps", "tail" : "", "member" : "cats.effect.ConcurrentEffect.ToConcurrentEffectOps", "link" : "cats\/effect\/ConcurrentEffect$.html#ToConcurrentEffectOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.ConcurrentEffect.AllOps", "link" : "cats\/effect\/ConcurrentEffect$.html#AllOps[F[_],A]extendsConcurrentEffect.Ops[F,A]withConcurrent.AllOps[F,A]withEffect.AllOps[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.ConcurrentEffect.Ops", "link" : "cats\/effect\/ConcurrentEffect$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: ConcurrentEffect[F]): ConcurrentEffect[F]", "member" : "cats.effect.ConcurrentEffect.apply", "link" : "cats\/effect\/ConcurrentEffect$.html#apply[F[_]](implicitinstance:cats.effect.ConcurrentEffect[F]):cats.effect.ConcurrentEffect[F]", "kind" : "def"}, {"label" : "catsWriterTConcurrentEffect", "tail" : "(arg0: ConcurrentEffect[F], arg1: Monoid[L]): ConcurrentEffect[[γ$1$]WriterT[F, L, γ$1$]]", "member" : "cats.effect.ConcurrentEffect.catsWriterTConcurrentEffect", "link" : "cats\/effect\/ConcurrentEffect$.html#catsWriterTConcurrentEffect[F[_],L](implicitevidence$2:cats.effect.ConcurrentEffect[F],implicitevidence$3:cats.Monoid[L]):cats.effect.ConcurrentEffect[[γ$1$]cats.data.WriterT[F,L,γ$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTConcurrentEffect", "tail" : "(arg0: ConcurrentEffect[F]): ConcurrentEffect[[γ$0$]EitherT[F, Throwable, γ$0$]]", "member" : "cats.effect.ConcurrentEffect.catsEitherTConcurrentEffect", "link" : "cats\/effect\/ConcurrentEffect$.html#catsEitherTConcurrentEffect[F[_]](implicitevidence$1:cats.effect.ConcurrentEffect[F]):cats.effect.ConcurrentEffect[[γ$0$]cats.data.EitherT[F,Throwable,γ$0$]]", "kind" : "implicit def"}, {"label" : "toIOFromRunCancelable", "tail" : "(fa: F[A])(F: ConcurrentEffect[F]): IO[A]", "member" : "cats.effect.ConcurrentEffect.toIOFromRunCancelable", "link" : "cats\/effect\/ConcurrentEffect$.html#toIOFromRunCancelable[F[_],A](fa:F[A])(implicitF:cats.effect.ConcurrentEffect[F]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ConcurrentEffect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ConcurrentEffect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ConcurrentEffect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ConcurrentEffect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ConcurrentEffect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ConcurrentEffect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ConcurrentEffect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ConcurrentEffect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ConcurrentEffect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ConcurrentEffect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ConcurrentEffect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ConcurrentEffect$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ConcurrentEffect$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ConcurrentEffect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ConcurrentEffect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ConcurrentEffect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ConcurrentEffect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ConcurrentEffect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ConcurrentEffect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/ConcurrentEffect.html", "kind" : "trait", "members_trait" : [{"label" : "toIO", "tail" : "(fa: F[A]): IO[A]", "member" : "cats.effect.ConcurrentEffect.toIO", "link" : "cats\/effect\/ConcurrentEffect.html#toIO[A](fa:F[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "continual", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[B]", "member" : "cats.effect.Concurrent.continual", "link" : "cats\/effect\/ConcurrentEffect.html#continual[A,B](fa:F[A])(f:scala.util.Either[Throwable,A]=>F[B]):F[B]", "kind" : "def"}, {"label" : "liftIO", "tail" : "(ioa: IO[A]): F[A]", "member" : "cats.effect.Concurrent.liftIO", "link" : "cats\/effect\/ConcurrentEffect.html#liftIO[A](ioa:cats.effect.IO[A]):F[A]", "kind" : "def"}, {"label" : "cancelable", "tail" : "(k: ((Either[Throwable, A]) => Unit) => CancelToken[F]): F[A]", "member" : "cats.effect.Concurrent.cancelable", "link" : "cats\/effect\/ConcurrentEffect.html#cancelable[A](k:(scala.util.Either[Throwable,A]=>Unit)=>cats.effect.CancelToken[F]):F[A]", "kind" : "def"}, {"label" : "race", "tail" : "(fa: F[A], fb: F[B]): F[Either[A, B]]", "member" : "cats.effect.Concurrent.race", "link" : "cats\/effect\/ConcurrentEffect.html#race[A,B](fa:F[A],fb:F[B]):F[scala.util.Either[A,B]]", "kind" : "def"}, {"label" : "background", "tail" : "(fa: F[A]): Resource[F, F[A]]", "member" : "cats.effect.Concurrent.background", "link" : "cats\/effect\/ConcurrentEffect.html#background[A](fa:F[A]):cats.effect.Resource[F,F[A]]", "kind" : "def"}, {"label" : "never", "tail" : "(): F[A]", "member" : "cats.effect.Async.never", "link" : "cats\/effect\/ConcurrentEffect.html#never[A]:F[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(thunk: => A): F[A]", "member" : "cats.effect.Sync.delay", "link" : "cats\/effect\/ConcurrentEffect.html#delay[A](thunk:=>A):F[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: => F[A]): F[A]", "member" : "cats.effect.Sync.defer", "link" : "cats\/effect\/ConcurrentEffect.html#defer[A](fa:=>F[A]):F[A]", "kind" : "final def"}, {"label" : "fix", "tail" : "(fn: (F[A]) => F[A]): F[A]", "member" : "cats.Defer.fix", "link" : "cats\/effect\/ConcurrentEffect.html#fix[A](fn:F[A]=>F[A]):F[A]", "kind" : "def"}, {"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/ConcurrentEffect.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[Throwable]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/ConcurrentEffect.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/ConcurrentEffect.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/ConcurrentEffect.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/ConcurrentEffect.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, Throwable]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/ConcurrentEffect.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/ConcurrentEffect.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (Throwable) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/ConcurrentEffect.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/ConcurrentEffect.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/ConcurrentEffect.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/ConcurrentEffect.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/ConcurrentEffect.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/ConcurrentEffect.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/ConcurrentEffect.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/ConcurrentEffect.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/ConcurrentEffect.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/ConcurrentEffect.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/ConcurrentEffect.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/ConcurrentEffect.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/ConcurrentEffect.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/ConcurrentEffect.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/ConcurrentEffect.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/ConcurrentEffect.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/ConcurrentEffect.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/ConcurrentEffect.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/ConcurrentEffect.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/ConcurrentEffect.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/ConcurrentEffect.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/ConcurrentEffect.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/ConcurrentEffect.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/ConcurrentEffect.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/ConcurrentEffect.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/ConcurrentEffect.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/ConcurrentEffect.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/ConcurrentEffect.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/ConcurrentEffect.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/ConcurrentEffect.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => Throwable): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/ConcurrentEffect.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/ConcurrentEffect.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/ConcurrentEffect.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, Throwable]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/ConcurrentEffect.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/ConcurrentEffect.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/ConcurrentEffect.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/ConcurrentEffect.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (Throwable) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/ConcurrentEffect.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/ConcurrentEffect.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/ConcurrentEffect.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, Throwable]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/ConcurrentEffect.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, Throwable, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/ConcurrentEffect.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[Throwable, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/ConcurrentEffect.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (Throwable) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/ConcurrentEffect.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/ConcurrentEffect.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/ConcurrentEffect.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/ConcurrentEffect.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/ConcurrentEffect.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/ConcurrentEffect.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/ConcurrentEffect.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/ConcurrentEffect.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/ConcurrentEffect.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/ConcurrentEffect.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/ConcurrentEffect.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/ConcurrentEffect.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/ConcurrentEffect.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/ConcurrentEffect.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/ConcurrentEffect.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/ConcurrentEffect.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/ConcurrentEffect.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/ConcurrentEffect.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/ConcurrentEffect.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/ConcurrentEffect.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/ConcurrentEffect.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/ConcurrentEffect.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/ConcurrentEffect.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/ConcurrentEffect.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/ConcurrentEffect.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/ConcurrentEffect.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/ConcurrentEffect.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/ConcurrentEffect.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/ConcurrentEffect.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/ConcurrentEffect.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/ConcurrentEffect.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/ConcurrentEffect.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/ConcurrentEffect.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/ConcurrentEffect.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/ConcurrentEffect.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/ConcurrentEffect.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/ConcurrentEffect.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/ConcurrentEffect.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/ConcurrentEffect.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/ConcurrentEffect.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/ConcurrentEffect.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/ConcurrentEffect.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/ConcurrentEffect.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/ConcurrentEffect.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/ConcurrentEffect.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/ConcurrentEffect.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/ConcurrentEffect.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/ConcurrentEffect.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/ConcurrentEffect.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/ConcurrentEffect.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/ConcurrentEffect.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/ConcurrentEffect.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/ConcurrentEffect.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/ConcurrentEffect.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/ConcurrentEffect.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/ConcurrentEffect.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/ConcurrentEffect.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/ConcurrentEffect.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/ConcurrentEffect.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/ConcurrentEffect.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/ConcurrentEffect.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/ConcurrentEffect.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/ConcurrentEffect.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/ConcurrentEffect.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/ConcurrentEffect.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/ConcurrentEffect.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/ConcurrentEffect.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/ConcurrentEffect.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/ConcurrentEffect.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/ConcurrentEffect.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/ConcurrentEffect.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/ConcurrentEffect.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/ConcurrentEffect.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/ConcurrentEffect.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/ConcurrentEffect.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/ConcurrentEffect.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/ConcurrentEffect.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/ConcurrentEffect.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/ConcurrentEffect.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/ConcurrentEffect.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/ConcurrentEffect.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/ConcurrentEffect.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/ConcurrentEffect.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/ConcurrentEffect.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/ConcurrentEffect.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/ConcurrentEffect.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/ConcurrentEffect.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/ConcurrentEffect.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/ConcurrentEffect.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/ConcurrentEffect.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/ConcurrentEffect.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/ConcurrentEffect.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ConcurrentEffect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ConcurrentEffect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ConcurrentEffect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ConcurrentEffect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ConcurrentEffect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ConcurrentEffect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ConcurrentEffect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ConcurrentEffect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ConcurrentEffect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ConcurrentEffect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ConcurrentEffect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ConcurrentEffect.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ConcurrentEffect.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ConcurrentEffect.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ConcurrentEffect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ConcurrentEffect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ConcurrentEffect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ConcurrentEffect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ConcurrentEffect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runCancelable", "tail" : "(fa: F[A])(cb: (Either[Throwable, A]) => IO[Unit]): SyncIO[CancelToken[F]]", "member" : "cats.effect.ConcurrentEffect.runCancelable", "link" : "cats\/effect\/ConcurrentEffect.html#runCancelable[A](fa:F[A])(cb:scala.util.Either[Throwable,A]=>cats.effect.IO[Unit]):cats.effect.SyncIO[cats.effect.CancelToken[F]]", "kind" : "abstract def"}, {"label" : "runAsync", "tail" : "(fa: F[A])(cb: (Either[Throwable, A]) => IO[Unit]): SyncIO[Unit]", "member" : "cats.effect.Effect.runAsync", "link" : "cats\/effect\/ConcurrentEffect.html#runAsync[A](fa:F[A])(cb:scala.util.Either[Throwable,A]=>cats.effect.IO[Unit]):cats.effect.SyncIO[Unit]", "kind" : "abstract def"}, {"label" : "racePair", "tail" : "(fa: F[A], fb: F[B]): F[Either[(A, Fiber[F, B]), (Fiber[F, A], B)]]", "member" : "cats.effect.Concurrent.racePair", "link" : "cats\/effect\/ConcurrentEffect.html#racePair[A,B](fa:F[A],fb:F[B]):F[scala.util.Either[(A,cats.effect.Fiber[F,B]),(cats.effect.Fiber[F,A],B)]]", "kind" : "abstract def"}, {"label" : "start", "tail" : "(fa: F[A]): F[Fiber[F, A]]", "member" : "cats.effect.Concurrent.start", "link" : "cats\/effect\/ConcurrentEffect.html#start[A](fa:F[A]):F[cats.effect.Fiber[F,A]]", "kind" : "abstract def"}, {"label" : "asyncF", "tail" : "(k: ((Either[Throwable, A]) => Unit) => F[Unit]): F[A]", "member" : "cats.effect.Async.asyncF", "link" : "cats\/effect\/ConcurrentEffect.html#asyncF[A](k:(scala.util.Either[Throwable,A]=>Unit)=>F[Unit]):F[A]", "kind" : "abstract def"}, {"label" : "async", "tail" : "(k: ((Either[Throwable, A]) => Unit) => Unit): F[A]", "member" : "cats.effect.Async.async", "link" : "cats\/effect\/ConcurrentEffect.html#async[A](k:(scala.util.Either[Throwable,A]=>Unit)=>Unit):F[A]", "kind" : "abstract def"}, {"label" : "suspend", "tail" : "(thunk: => F[A]): F[A]", "member" : "cats.effect.Sync.suspend", "link" : "cats\/effect\/ConcurrentEffect.html#suspend[A](thunk:=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[Throwable]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/ConcurrentEffect.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/ConcurrentEffect.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/ConcurrentEffect.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (Throwable) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/ConcurrentEffect.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: Throwable): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/ConcurrentEffect.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/ConcurrentEffect.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "Type class describing effect data types that are cancelable."}, {"name" : "cats.effect.ContextShift", "object" : "cats\/effect\/ContextShift$.html", "members_object" : [{"label" : "deriveIorT", "tail" : "(F: Applicative[F], cs: ContextShift[F]): ContextShift[[γ$10$]IorT[F, L, γ$10$]]", "member" : "cats.effect.ContextShift.deriveIorT", "link" : "cats\/effect\/ContextShift$.html#deriveIorT[F[_],L](implicitF:cats.Applicative[F],implicitcs:cats.effect.ContextShift[F]):cats.effect.ContextShift[[γ$10$]cats.data.IorT[F,L,γ$10$]]", "kind" : "implicit def"}, {"label" : "deriveKleisli", "tail" : "(cs: ContextShift[F]): ContextShift[[γ$8$]Kleisli[F, R, γ$8$]]", "member" : "cats.effect.ContextShift.deriveKleisli", "link" : "cats\/effect\/ContextShift$.html#deriveKleisli[F[_],R](implicitcs:cats.effect.ContextShift[F]):cats.effect.ContextShift[[γ$8$]cats.data.Kleisli[F,R,γ$8$]]", "kind" : "implicit def"}, {"label" : "deriveStateT", "tail" : "(F: Monad[F], cs: ContextShift[F]): ContextShift[[γ$6$]IndexedStateT[F, L, L, γ$6$]]", "member" : "cats.effect.ContextShift.deriveStateT", "link" : "cats\/effect\/ContextShift$.html#deriveStateT[F[_],L](implicitF:cats.Monad[F],implicitcs:cats.effect.ContextShift[F]):cats.effect.ContextShift[[γ$6$]cats.data.IndexedStateT[F,L,L,γ$6$]]", "kind" : "implicit def"}, {"label" : "deriveWriterT", "tail" : "(F: Applicative[F], L: Monoid[L], cs: ContextShift[F]): ContextShift[[γ$4$]WriterT[F, L, γ$4$]]", "member" : "cats.effect.ContextShift.deriveWriterT", "link" : "cats\/effect\/ContextShift$.html#deriveWriterT[F[_],L](implicitF:cats.Applicative[F],implicitL:cats.Monoid[L],implicitcs:cats.effect.ContextShift[F]):cats.effect.ContextShift[[γ$4$]cats.data.WriterT[F,L,γ$4$]]", "kind" : "implicit def"}, {"label" : "deriveOptionT", "tail" : "(F: Functor[F], cs: ContextShift[F]): ContextShift[[β$2$]OptionT[F, β$2$]]", "member" : "cats.effect.ContextShift.deriveOptionT", "link" : "cats\/effect\/ContextShift$.html#deriveOptionT[F[_]](implicitF:cats.Functor[F],implicitcs:cats.effect.ContextShift[F]):cats.effect.ContextShift[[β$2$]cats.data.OptionT[F,β$2$]]", "kind" : "implicit def"}, {"label" : "deriveEitherT", "tail" : "(F: Functor[F], cs: ContextShift[F]): ContextShift[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.ContextShift.deriveEitherT", "link" : "cats\/effect\/ContextShift$.html#deriveEitherT[F[_],L](implicitF:cats.Functor[F],implicitcs:cats.effect.ContextShift[F]):cats.effect.ContextShift[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "evalOnK", "tail" : "(ec: ExecutionContext)(cs: ContextShift[F]): ~>[F, F]", "member" : "cats.effect.ContextShift.evalOnK", "link" : "cats\/effect\/ContextShift$.html#evalOnK[F[_]](ec:scala.concurrent.ExecutionContext)(implicitcs:cats.effect.ContextShift[F]):F~>F", "kind" : "def"}, {"label" : "apply", "tail" : "(ev: ContextShift[F]): ContextShift[F]", "member" : "cats.effect.ContextShift.apply", "link" : "cats\/effect\/ContextShift$.html#apply[F[_]](implicitev:cats.effect.ContextShift[F]):cats.effect.ContextShift[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ContextShift$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ContextShift$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ContextShift$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ContextShift$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ContextShift$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ContextShift$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ContextShift$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ContextShift$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ContextShift$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ContextShift$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ContextShift$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ContextShift$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ContextShift$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ContextShift$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ContextShift$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ContextShift$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ContextShift$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ContextShift$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ContextShift$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/ContextShift.html", "kind" : "trait", "members_trait" : [{"label" : "blockOn", "tail" : "(blocker: Blocker)(fa: F[A]): F[A]", "member" : "cats.effect.ContextShift.blockOn", "link" : "cats\/effect\/ContextShift.html#blockOn[A](blocker:cats.effect.Blocker)(fa:F[A]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ContextShift.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ContextShift.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ContextShift.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ContextShift.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ContextShift.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ContextShift.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ContextShift.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ContextShift.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ContextShift.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ContextShift.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ContextShift.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ContextShift.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ContextShift.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ContextShift.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ContextShift.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ContextShift.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ContextShift.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ContextShift.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ContextShift.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evalOn", "tail" : "(ec: ExecutionContext)(fa: F[A]): F[A]", "member" : "cats.effect.ContextShift.evalOn", "link" : "cats\/effect\/ContextShift.html#evalOn[A](ec:scala.concurrent.ExecutionContext)(fa:F[A]):F[A]", "kind" : "abstract def"}, {"label" : "shift", "tail" : "(): F[Unit]", "member" : "cats.effect.ContextShift.shift", "link" : "cats\/effect\/ContextShift.html#shift:F[Unit]", "kind" : "abstract def"}], "shortDescription" : "ContextShift provides support for shifting execution."}, {"name" : "cats.effect.Effect", "object" : "cats\/effect\/Effect$.html", "members_object" : [{"label" : "ops", "tail" : ": ops$", "member" : "cats.effect.Effect.ops", "link" : "cats\/effect\/Effect$.html#ops:cats.effect.Effect.ops$", "kind" : "val"}, {"label" : "ops$", "tail" : "", "member" : "cats.effect.Effect.ops$", "link" : "cats\/effect\/Effect$.html#ops$extendsAnyRef", "kind" : "class"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.Effect.nonInheritedOps", "link" : "cats\/effect\/Effect$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToEffectOps", "tail" : "", "member" : "cats.effect.Effect.ToEffectOps", "link" : "cats\/effect\/Effect$.html#ToEffectOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.Effect.AllOps", "link" : "cats\/effect\/Effect$.html#AllOps[F[_],A]extendsEffect.Ops[F,A]withAsync.AllOps[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.Effect.Ops", "link" : "cats\/effect\/Effect$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: Effect[F]): Effect[F]", "member" : "cats.effect.Effect.apply", "link" : "cats\/effect\/Effect$.html#apply[F[_]](implicitinstance:cats.effect.Effect[F]):cats.effect.Effect[F]", "kind" : "def"}, {"label" : "catsWriterTEffect", "tail" : "(arg0: Effect[F], arg1: Monoid[L]): Effect[[γ$1$]WriterT[F, L, γ$1$]]", "member" : "cats.effect.Effect.catsWriterTEffect", "link" : "cats\/effect\/Effect$.html#catsWriterTEffect[F[_],L](implicitevidence$2:cats.effect.Effect[F],implicitevidence$3:cats.Monoid[L]):cats.effect.Effect[[γ$1$]cats.data.WriterT[F,L,γ$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTEffect", "tail" : "(arg0: Effect[F]): Effect[[γ$0$]EitherT[F, Throwable, γ$0$]]", "member" : "cats.effect.Effect.catsEitherTEffect", "link" : "cats\/effect\/Effect$.html#catsEitherTEffect[F[_]](implicitevidence$1:cats.effect.Effect[F]):cats.effect.Effect[[γ$0$]cats.data.EitherT[F,Throwable,γ$0$]]", "kind" : "implicit def"}, {"label" : "toIOK", "tail" : "(F: Effect[F]): ~>[F, IO]", "member" : "cats.effect.Effect.toIOK", "link" : "cats\/effect\/Effect$.html#toIOK[F[_]](implicitF:cats.effect.Effect[F]):F~>cats.effect.IO", "kind" : "def"}, {"label" : "toIOFromRunAsync", "tail" : "(f: F[A])(F: Effect[F]): IO[A]", "member" : "cats.effect.Effect.toIOFromRunAsync", "link" : "cats\/effect\/Effect$.html#toIOFromRunAsync[F[_],A](f:F[A])(implicitF:cats.effect.Effect[F]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Effect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Effect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Effect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Effect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Effect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Effect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Effect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Effect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Effect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Effect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Effect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Effect$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Effect$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Effect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Effect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Effect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Effect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Effect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Effect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Effect.html", "kind" : "trait", "members_trait" : [{"label" : "toIO", "tail" : "(fa: F[A]): IO[A]", "member" : "cats.effect.Effect.toIO", "link" : "cats\/effect\/Effect.html#toIO[A](fa:F[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "never", "tail" : "(): F[A]", "member" : "cats.effect.Async.never", "link" : "cats\/effect\/Effect.html#never[A]:F[A]", "kind" : "def"}, {"label" : "liftIO", "tail" : "(ioa: IO[A]): F[A]", "member" : "cats.effect.Async.liftIO", "link" : "cats\/effect\/Effect.html#liftIO[A](ioa:cats.effect.IO[A]):F[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(thunk: => A): F[A]", "member" : "cats.effect.Sync.delay", "link" : "cats\/effect\/Effect.html#delay[A](thunk:=>A):F[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: => F[A]): F[A]", "member" : "cats.effect.Sync.defer", "link" : "cats\/effect\/Effect.html#defer[A](fa:=>F[A]):F[A]", "kind" : "final def"}, {"label" : "fix", "tail" : "(fn: (F[A]) => F[A]): F[A]", "member" : "cats.Defer.fix", "link" : "cats\/effect\/Effect.html#fix[A](fn:F[A]=>F[A]):F[A]", "kind" : "def"}, {"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/Effect.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[Throwable]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/Effect.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/Effect.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/Effect.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/Effect.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, Throwable]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/Effect.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/Effect.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (Throwable) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/Effect.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/Effect.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/Effect.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/Effect.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/Effect.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/Effect.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/Effect.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/Effect.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/Effect.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/Effect.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/Effect.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/Effect.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/Effect.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/Effect.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/Effect.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/Effect.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/Effect.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/Effect.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/Effect.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/Effect.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/Effect.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/Effect.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/Effect.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/Effect.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/Effect.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/Effect.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/Effect.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/Effect.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/Effect.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/Effect.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => Throwable): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/Effect.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/Effect.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/Effect.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, Throwable]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/Effect.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/Effect.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/Effect.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/Effect.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (Throwable) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/Effect.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/Effect.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/Effect.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, Throwable]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/Effect.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, Throwable, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/Effect.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[Throwable, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/Effect.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (Throwable) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/Effect.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/Effect.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/Effect.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/Effect.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/Effect.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/Effect.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/Effect.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/Effect.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/Effect.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/Effect.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/Effect.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/Effect.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/Effect.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/Effect.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/Effect.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/Effect.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/Effect.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/Effect.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/Effect.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/Effect.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/Effect.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/Effect.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/Effect.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/Effect.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/Effect.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/Effect.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/Effect.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/Effect.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/Effect.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/Effect.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/Effect.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/Effect.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/Effect.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/Effect.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/Effect.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/Effect.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/Effect.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/Effect.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/Effect.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/Effect.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/Effect.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/Effect.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/Effect.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/Effect.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/Effect.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/Effect.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/Effect.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/Effect.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/Effect.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/Effect.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/Effect.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/Effect.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/Effect.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/Effect.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/Effect.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/Effect.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/Effect.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/Effect.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/Effect.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/Effect.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/Effect.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/Effect.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/Effect.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/Effect.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/Effect.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/Effect.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/Effect.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/Effect.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/Effect.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/Effect.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/Effect.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/Effect.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/Effect.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/Effect.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/Effect.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/Effect.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/Effect.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/Effect.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/Effect.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/Effect.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/Effect.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/Effect.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/Effect.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/Effect.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/Effect.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/Effect.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/Effect.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/Effect.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/Effect.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/Effect.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/Effect.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/Effect.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Effect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Effect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Effect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Effect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Effect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Effect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Effect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Effect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Effect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Effect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Effect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Effect.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Effect.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Effect.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Effect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Effect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Effect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Effect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Effect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runAsync", "tail" : "(fa: F[A])(cb: (Either[Throwable, A]) => IO[Unit]): SyncIO[Unit]", "member" : "cats.effect.Effect.runAsync", "link" : "cats\/effect\/Effect.html#runAsync[A](fa:F[A])(cb:scala.util.Either[Throwable,A]=>cats.effect.IO[Unit]):cats.effect.SyncIO[Unit]", "kind" : "abstract def"}, {"label" : "asyncF", "tail" : "(k: ((Either[Throwable, A]) => Unit) => F[Unit]): F[A]", "member" : "cats.effect.Async.asyncF", "link" : "cats\/effect\/Effect.html#asyncF[A](k:(scala.util.Either[Throwable,A]=>Unit)=>F[Unit]):F[A]", "kind" : "abstract def"}, {"label" : "async", "tail" : "(k: ((Either[Throwable, A]) => Unit) => Unit): F[A]", "member" : "cats.effect.Async.async", "link" : "cats\/effect\/Effect.html#async[A](k:(scala.util.Either[Throwable,A]=>Unit)=>Unit):F[A]", "kind" : "abstract def"}, {"label" : "suspend", "tail" : "(thunk: => F[A]): F[A]", "member" : "cats.effect.Sync.suspend", "link" : "cats\/effect\/Effect.html#suspend[A](thunk:=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[Throwable]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/Effect.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/Effect.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/Effect.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (Throwable) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/Effect.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: Throwable): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/Effect.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/Effect.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "A monad that can suspend side effects into the F context andthat supports lazy and potentially asynchronous evaluation."}, {"name" : "cats.effect.ExitCase", "shortDescription" : "Type for signaling the exit condition of an effectfulcomputation, that may either succeed, fail with an error orget canceled.", "object" : "cats\/effect\/ExitCase$.html", "members_class" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "cats\/effect\/ExitCase.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "cats\/effect\/ExitCase.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "cats\/effect\/ExitCase.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "cats\/effect\/ExitCase.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ExitCase.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ExitCase.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ExitCase.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ExitCase.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ExitCase.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ExitCase.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ExitCase.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCase.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCase.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCase.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ExitCase.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ExitCase.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ExitCase.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ExitCase.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ExitCase.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ExitCase.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ExitCase.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ExitCase.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ExitCase.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "cats\/effect\/ExitCase.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "cats\/effect\/ExitCase.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "cats\/effect\/ExitCase.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "attempt", "tail" : "(value: Either[E, A]): ExitCase[E]", "member" : "cats.effect.ExitCase.attempt", "link" : "cats\/effect\/ExitCase$.html#attempt[E,A](value:Either[E,A]):cats.effect.ExitCase[E]", "kind" : "def"}, {"label" : "canceled", "tail" : "(): ExitCase[E]", "member" : "cats.effect.ExitCase.canceled", "link" : "cats\/effect\/ExitCase$.html#canceled[E]:cats.effect.ExitCase[E]", "kind" : "def"}, {"label" : "error", "tail" : "(e: E): ExitCase[E]", "member" : "cats.effect.ExitCase.error", "link" : "cats\/effect\/ExitCase$.html#error[E](e:E):cats.effect.ExitCase[E]", "kind" : "def"}, {"label" : "complete", "tail" : "(): ExitCase[E]", "member" : "cats.effect.ExitCase.complete", "link" : "cats\/effect\/ExitCase$.html#complete[E]:cats.effect.ExitCase[E]", "kind" : "def"}, {"label" : "Canceled", "tail" : "", "member" : "cats.effect.ExitCase.Canceled", "link" : "cats\/effect\/ExitCase$.html#Canceled", "kind" : "case object"}, {"label" : "Error", "tail" : "", "member" : "cats.effect.ExitCase.Error", "link" : "cats\/effect\/ExitCase$.html#Error[+E]extendsExitCase[E]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Completed", "tail" : "", "member" : "cats.effect.ExitCase.Completed", "link" : "cats\/effect\/ExitCase$.html#Completed", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ExitCase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ExitCase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ExitCase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ExitCase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ExitCase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ExitCase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ExitCase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ExitCase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ExitCase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ExitCase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ExitCase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ExitCase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ExitCase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ExitCase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ExitCase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ExitCase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/ExitCase.html", "kind" : "class"}, {"name" : "cats.effect.ExitCode", "shortDescription" : "Represents the exit code of an application.", "object" : "cats\/effect\/ExitCode$.html", "members_object" : [{"label" : "Error", "tail" : ": ExitCode", "member" : "cats.effect.ExitCode.Error", "link" : "cats\/effect\/ExitCode$.html#Error:cats.effect.ExitCode", "kind" : "val"}, {"label" : "Success", "tail" : ": ExitCode", "member" : "cats.effect.ExitCode.Success", "link" : "cats\/effect\/ExitCode$.html#Success:cats.effect.ExitCode", "kind" : "val"}, {"label" : "apply", "tail" : "(i: Int): ExitCode", "member" : "cats.effect.ExitCode.apply", "link" : "cats\/effect\/ExitCode$.html#apply(i:Int):cats.effect.ExitCode", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ExitCode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ExitCode$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ExitCode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ExitCode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ExitCode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ExitCode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ExitCode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ExitCode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ExitCode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/ExitCode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ExitCode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/ExitCode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/ExitCode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ExitCode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ExitCode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ExitCode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "code", "tail" : ": Int", "member" : "cats.effect.ExitCode.code", "link" : "cats\/effect\/ExitCode.html#code:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "cats\/effect\/ExitCode.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/ExitCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/ExitCode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/ExitCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/ExitCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/ExitCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/ExitCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/ExitCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/ExitCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/ExitCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/ExitCode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/ExitCode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/ExitCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/ExitCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/ExitCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "cats\/effect\/ExitCode.html", "kind" : "case class"}, {"name" : "cats.effect.Fiber", "object" : "cats\/effect\/Fiber$.html", "members_object" : [{"label" : "FiberOps", "tail" : "", "member" : "cats.effect.Fiber.FiberOps", "link" : "cats\/effect\/Fiber$.html#FiberOps[F[_],A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "apply", "tail" : "(join: F[A], cancel: CancelToken[F]): Fiber[F, A]", "member" : "cats.effect.Fiber.apply", "link" : "cats\/effect\/Fiber$.html#apply[F[_],A](join:F[A],cancel:cats.effect.CancelToken[F]):cats.effect.Fiber[F,A]", "kind" : "def"}, {"label" : "fiberMonoid", "tail" : "(arg0: Concurrent[F], arg1: Monoid[A]): Monoid[Fiber[F, A]]", "member" : "cats.effect.FiberInstances.fiberMonoid", "link" : "cats\/effect\/Fiber$.html#fiberMonoid[F[_],M[_],A](implicitevidence$1:cats.effect.Concurrent[F],implicitevidence$2:cats.Monoid[A]):cats.Monoid[cats.effect.Fiber[F,A]]", "kind" : "implicit def"}, {"label" : "fiberApplicative", "tail" : "(F: Concurrent[F]): Applicative[[β$0$]Fiber[F, β$0$]]", "member" : "cats.effect.FiberInstances.fiberApplicative", "link" : "cats\/effect\/Fiber$.html#fiberApplicative[F[_]](implicitF:cats.effect.Concurrent[F]):cats.Applicative[[β$0$]cats.effect.Fiber[F,β$0$]]", "kind" : "implicit def"}, {"label" : "fiberSemigroup", "tail" : "(arg0: Concurrent[F], arg1: Semigroup[A]): Semigroup[Fiber[F, A]]", "member" : "cats.effect.FiberLowPriorityInstances.fiberSemigroup", "link" : "cats\/effect\/Fiber$.html#fiberSemigroup[F[_],A](implicitevidence$3:cats.effect.Concurrent[F],implicitevidence$4:cats.Semigroup[A]):cats.Semigroup[cats.effect.Fiber[F,A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Fiber$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Fiber$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Fiber$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Fiber$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Fiber$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Fiber$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Fiber$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Fiber$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Fiber$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Fiber$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Fiber$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Fiber$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Fiber$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Fiber$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Fiber$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Fiber$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Fiber$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Fiber$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Fiber$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Fiber.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Fiber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Fiber.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Fiber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Fiber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Fiber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Fiber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Fiber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Fiber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Fiber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Fiber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Fiber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Fiber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Fiber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Fiber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Fiber.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Fiber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Fiber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Fiber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Fiber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "join", "tail" : "(): F[A]", "member" : "cats.effect.Fiber.join", "link" : "cats\/effect\/Fiber.html#join:F[A]", "kind" : "abstract def"}, {"label" : "cancel", "tail" : "(): CancelToken[F]", "member" : "cats.effect.Fiber.cancel", "link" : "cats\/effect\/Fiber.html#cancel:cats.effect.CancelToken[F]", "kind" : "abstract def"}], "shortDescription" : "Fiber represents the (pure) result of a Concurrent data type (e.g."}, {"name" : "cats.effect.IO", "shortDescription" : "A pure abstraction representing the intention to perform aside effect, where the result of that side effect may be obtainedsynchronously (via return) or asynchronously (via callback).", "object" : "cats\/effect\/IO$.html", "members_class" : [{"label" : "<&", "tail" : "(another: IO[B])(p: NonEmptyParallel[IO]): IO[A]", "member" : "cats.effect.IO.<&", "link" : "cats\/effect\/IO.html#<&[B](another:cats.effect.IO[B])(implicitp:cats.NonEmptyParallel[cats.effect.IO]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "&>", "tail" : "(another: IO[B])(p: NonEmptyParallel[IO]): IO[B]", "member" : "cats.effect.IO.&>", "link" : "cats\/effect\/IO.html#&>[B](another:cats.effect.IO[B])(implicitp:cats.NonEmptyParallel[cats.effect.IO]):cats.effect.IO[B]", "kind" : "def"}, {"label" : "<*", "tail" : "(another: IO[B]): IO[A]", "member" : "cats.effect.IO.<*", "link" : "cats\/effect\/IO.html#<*[B](another:cats.effect.IO[B]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "*>", "tail" : "(another: IO[B]): IO[B]", "member" : "cats.effect.IO.*>", "link" : "cats\/effect\/IO.html#*>[B](another:cats.effect.IO[B]):cats.effect.IO[B]", "kind" : "def"}, {"label" : "void", "tail" : "(): IO[Unit]", "member" : "cats.effect.IO.void", "link" : "cats\/effect\/IO.html#void:cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "cats.effect.IO.toString", "link" : "cats\/effect\/IO.html#toString():String", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(recover: (Throwable) => IO[B], bind: (A) => IO[B]): IO[B]", "member" : "cats.effect.IO.redeemWith", "link" : "cats\/effect\/IO.html#redeemWith[B](recover:Throwable=>cats.effect.IO[B],bind:A=>cats.effect.IO[B]):cats.effect.IO[B]", "kind" : "def"}, {"label" : "redeem", "tail" : "(recover: (Throwable) => B, map: (A) => B): IO[B]", "member" : "cats.effect.IO.redeem", "link" : "cats\/effect\/IO.html#redeem[B](recover:Throwable=>B,map:A=>B):cats.effect.IO[B]", "kind" : "def"}, {"label" : "parProduct", "tail" : "(another: IO[B])(p: NonEmptyParallel[IO]): IO[(A, B)]", "member" : "cats.effect.IO.parProduct", "link" : "cats\/effect\/IO.html#parProduct[B](another:cats.effect.IO[B])(implicitp:cats.NonEmptyParallel[cats.effect.IO]):cats.effect.IO[(A,B)]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Throwable) => IO[AA]): IO[AA]", "member" : "cats.effect.IO.handleErrorWith", "link" : "cats\/effect\/IO.html#handleErrorWith[AA>:A](f:Throwable=>cats.effect.IO[AA]):cats.effect.IO[AA]", "kind" : "def"}, {"label" : "option", "tail" : "(): IO[Option[A]]", "member" : "cats.effect.IO.option", "link" : "cats\/effect\/IO.html#option:cats.effect.IO[Option[A]]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(finalizer: (ExitCase[Throwable]) => IO[Unit]): IO[A]", "member" : "cats.effect.IO.guaranteeCase", "link" : "cats\/effect\/IO.html#guaranteeCase(finalizer:cats.effect.ExitCase[Throwable]=>cats.effect.IO[Unit]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(finalizer: IO[Unit]): IO[A]", "member" : "cats.effect.IO.guarantee", "link" : "cats\/effect\/IO.html#guarantee(finalizer:cats.effect.IO[Unit]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "bracketCase", "tail" : "(use: (A) => IO[B])(release: (A, ExitCase[Throwable]) => IO[Unit]): IO[B]", "member" : "cats.effect.IO.bracketCase", "link" : "cats\/effect\/IO.html#bracketCase[B](use:A=>cats.effect.IO[B])(release:(A,cats.effect.ExitCase[Throwable])=>cats.effect.IO[Unit]):cats.effect.IO[B]", "kind" : "def"}, {"label" : "bracket", "tail" : "(use: (A) => IO[B])(release: (A) => IO[Unit]): IO[B]", "member" : "cats.effect.IO.bracket", "link" : "cats\/effect\/IO.html#bracket[B](use:A=>cats.effect.IO[B])(release:A=>cats.effect.IO[Unit]):cats.effect.IO[B]", "kind" : "final def"}, {"label" : "delayBy", "tail" : "(duration: FiniteDuration)(timer: Timer[IO]): IO[A]", "member" : "cats.effect.IO.delayBy", "link" : "cats\/effect\/IO.html#delayBy(duration:scala.concurrent.duration.FiniteDuration)(implicittimer:cats.effect.Timer[cats.effect.IO]):cats.effect.IO[A]", "kind" : "final def"}, {"label" : "timeout", "tail" : "(duration: FiniteDuration)(timer: Timer[IO], cs: ContextShift[IO]): IO[A]", "member" : "cats.effect.IO.timeout", "link" : "cats\/effect\/IO.html#timeout(duration:scala.concurrent.duration.FiniteDuration)(implicittimer:cats.effect.Timer[cats.effect.IO],implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[A]", "kind" : "final def"}, {"label" : "timeoutTo", "tail" : "(duration: FiniteDuration, fallback: IO[A2])(timer: Timer[IO], cs: ContextShift[IO]): IO[A2]", "member" : "cats.effect.IO.timeoutTo", "link" : "cats\/effect\/IO.html#timeoutTo[A2>:A](duration:scala.concurrent.duration.FiniteDuration,fallback:cats.effect.IO[A2])(implicittimer:cats.effect.Timer[cats.effect.IO],implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[A2]", "kind" : "final def"}, {"label" : "to", "tail" : "(F: LiftIO[F]): F[A]", "member" : "cats.effect.IO.to", "link" : "cats\/effect\/IO.html#to[F[_]](implicitF:cats.effect.LiftIO[F]):F[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "final def"}, {"label" : "uncancelable", "tail" : "(): IO[A]", "member" : "cats.effect.IO.uncancelable", "link" : "cats\/effect\/IO.html#uncancelable:cats.effect.IO[A]", "kind" : "final def"}, {"label" : "background", "tail" : "(cs: ContextShift[IO]): Resource[IO, IO[A]]", "member" : "cats.effect.IO.background", "link" : "cats\/effect\/IO.html#background(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.Resource[cats.effect.IO,cats.effect.IO[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "final def"}, {"label" : "start", "tail" : "(cs: ContextShift[IO]): IO[Fiber[IO, A]]", "member" : "cats.effect.IO.start", "link" : "cats\/effect\/IO.html#start(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[cats.effect.Fiber[cats.effect.IO,A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "final def"}, {"label" : "unsafeToFuture", "tail" : "(): Future[A]", "member" : "cats.effect.IO.unsafeToFuture", "link" : "cats\/effect\/IO.html#unsafeToFuture():scala.concurrent.Future[A]", "kind" : "final def"}, {"label" : "unsafeRunTimed", "tail" : "(limit: Duration): Option[A]", "member" : "cats.effect.IO.unsafeRunTimed", "link" : "cats\/effect\/IO.html#unsafeRunTimed(limit:scala.concurrent.duration.Duration):Option[A]", "kind" : "final def"}, {"label" : "unsafeRunCancelable", "tail" : "(cb: (Either[Throwable, A]) => Unit): CancelToken[IO]", "member" : "cats.effect.IO.unsafeRunCancelable", "link" : "cats\/effect\/IO.html#unsafeRunCancelable(cb:Either[Throwable,A]=>Unit):cats.effect.CancelToken[cats.effect.IO]", "kind" : "final def"}, {"label" : "unsafeRunAsyncAndForget", "tail" : "(): Unit", "member" : "cats.effect.IO.unsafeRunAsyncAndForget", "link" : "cats\/effect\/IO.html#unsafeRunAsyncAndForget():Unit", "kind" : "final def"}, {"label" : "unsafeRunAsync", "tail" : "(cb: (Either[Throwable, A]) => Unit): Unit", "member" : "cats.effect.IO.unsafeRunAsync", "link" : "cats\/effect\/IO.html#unsafeRunAsync(cb:Either[Throwable,A]=>Unit):Unit", "kind" : "final def"}, {"label" : "unsafeRunSync", "tail" : "(): A", "member" : "cats.effect.IO.unsafeRunSync", "link" : "cats\/effect\/IO.html#unsafeRunSync():A", "kind" : "final def"}, {"label" : "runCancelable", "tail" : "(cb: (Either[Throwable, A]) => IO[Unit]): SyncIO[CancelToken[IO]]", "member" : "cats.effect.IO.runCancelable", "link" : "cats\/effect\/IO.html#runCancelable(cb:Either[Throwable,A]=>cats.effect.IO[Unit]):cats.effect.SyncIO[cats.effect.CancelToken[cats.effect.IO]]", "kind" : "final def"}, {"label" : "runAsync", "tail" : "(cb: (Either[Throwable, A]) => IO[Unit]): SyncIO[Unit]", "member" : "cats.effect.IO.runAsync", "link" : "cats\/effect\/IO.html#runAsync(cb:Either[Throwable,A]=>cats.effect.IO[Unit]):cats.effect.SyncIO[Unit]", "kind" : "final def"}, {"label" : "attempt", "tail" : "(): IO[Either[Throwable, A]]", "member" : "cats.effect.IO.attempt", "link" : "cats\/effect\/IO.html#attempt:cats.effect.IO[Either[Throwable,A]]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => IO[B]): IO[B]", "member" : "cats.effect.IO.flatMap", "link" : "cats\/effect\/IO.html#flatMap[B](f:A=>cats.effect.IO[B]):cats.effect.IO[B]", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (A) => B): IO[B]", "member" : "cats.effect.IO.map", "link" : "cats\/effect\/IO.html#map[B](f:A=>B):cats.effect.IO[B]", "kind" : "final def"}, {"label" : "as", "tail" : "(newValue: => B): IO[B]", "member" : "cats.effect.IO.as", "link" : "cats\/effect\/IO.html#as[B](newValue:=>B):cats.effect.IO[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/IO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/IO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/IO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/IO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/IO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/IO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/IO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/IO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/IO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/IO.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/IO.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/IO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/IO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/IO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/IO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Par", "tail" : "", "member" : "cats.effect.IOParallelNewtype.Par", "link" : "cats\/effect\/IO$.html#Par", "kind" : "object"}, {"label" : "raiseUnless", "tail" : "(cond: Boolean)(e: => Throwable): IO[Unit]", "member" : "cats.effect.IO.raiseUnless", "link" : "cats\/effect\/IO$.html#raiseUnless(cond:Boolean)(e:=>Throwable):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "raiseWhen", "tail" : "(cond: Boolean)(e: => Throwable): IO[Unit]", "member" : "cats.effect.IO.raiseWhen", "link" : "cats\/effect\/IO$.html#raiseWhen(cond:Boolean)(e:=>Throwable):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(action: => IO[Unit]): IO[Unit]", "member" : "cats.effect.IO.unlessA", "link" : "cats\/effect\/IO$.html#unlessA(cond:Boolean)(action:=>cats.effect.IO[Unit]):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(action: => IO[Unit]): IO[Unit]", "member" : "cats.effect.IO.whenA", "link" : "cats\/effect\/IO$.html#whenA(cond:Boolean)(action:=>cats.effect.IO[Unit]):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "trace", "tail" : ": IO[IOTrace]", "member" : "cats.effect.IO.trace", "link" : "cats\/effect\/IO$.html#trace:cats.effect.IO[cats.effect.tracing.IOTrace]", "kind" : "val"}, {"label" : "contextShift", "tail" : "(ec: ExecutionContext): ContextShift[IO]", "member" : "cats.effect.IO.contextShift", "link" : "cats\/effect\/IO$.html#contextShift(ec:scala.concurrent.ExecutionContext):cats.effect.ContextShift[cats.effect.IO]", "kind" : "def"}, {"label" : "racePair", "tail" : "(lh: IO[A], rh: IO[B])(cs: ContextShift[IO]): IO[Either[(A, Fiber[IO, B]), (Fiber[IO, A], B)]]", "member" : "cats.effect.IO.racePair", "link" : "cats\/effect\/IO$.html#racePair[A,B](lh:cats.effect.IO[A],rh:cats.effect.IO[B])(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[Either[(A,cats.effect.Fiber[cats.effect.IO,B]),(cats.effect.Fiber[cats.effect.IO,A],B)]]", "kind" : "def"}, {"label" : "race", "tail" : "(lh: IO[A], rh: IO[B])(cs: ContextShift[IO]): IO[Either[A, B]]", "member" : "cats.effect.IO.race", "link" : "cats\/effect\/IO$.html#race[A,B](lh:cats.effect.IO[A],rh:cats.effect.IO[B])(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[Either[A,B]]", "kind" : "def"}, {"label" : "cancelBoundary", "tail" : ": IO[Unit]", "member" : "cats.effect.IO.cancelBoundary", "link" : "cats\/effect\/IO$.html#cancelBoundary:cats.effect.IO[Unit]", "kind" : "val"}, {"label" : "sleep", "tail" : "(duration: FiniteDuration)(timer: Timer[IO]): IO[Unit]", "member" : "cats.effect.IO.sleep", "link" : "cats\/effect\/IO$.html#sleep(duration:scala.concurrent.duration.FiniteDuration)(implicittimer:cats.effect.Timer[cats.effect.IO]):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "shift", "tail" : "(ec: ExecutionContext): IO[Unit]", "member" : "cats.effect.IO.shift", "link" : "cats\/effect\/IO$.html#shift(ec:scala.concurrent.ExecutionContext):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "shift", "tail" : "(cs: ContextShift[IO]): IO[Unit]", "member" : "cats.effect.IO.shift", "link" : "cats\/effect\/IO$.html#shift(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[Unit]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A]): IO[A]", "member" : "cats.effect.IO.fromTry", "link" : "cats\/effect\/IO$.html#fromTry[A](t:scala.util.Try[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(option: Option[A])(orElse: => Throwable): IO[A]", "member" : "cats.effect.IO.fromOption", "link" : "cats\/effect\/IO$.html#fromOption[A](option:Option[A])(orElse:=>Throwable):cats.effect.IO[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(e: Either[Throwable, A]): IO[A]", "member" : "cats.effect.IO.fromEither", "link" : "cats\/effect\/IO$.html#fromEither[A](e:Either[Throwable,A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "fromFuture", "tail" : "(iof: IO[Future[A]])(cs: ContextShift[IO]): IO[A]", "member" : "cats.effect.IO.fromFuture", "link" : "cats\/effect\/IO$.html#fromFuture[A](iof:cats.effect.IO[scala.concurrent.Future[A]])(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "raiseError", "tail" : "(e: Throwable): IO[A]", "member" : "cats.effect.IO.raiseError", "link" : "cats\/effect\/IO$.html#raiseError[A](e:Throwable):cats.effect.IO[A]", "kind" : "def"}, {"label" : "cancelable", "tail" : "(k: ((Either[Throwable, A]) => Unit) => CancelToken[IO]): IO[A]", "member" : "cats.effect.IO.cancelable", "link" : "cats\/effect\/IO$.html#cancelable[A](k:(Either[Throwable,A]=>Unit)=>cats.effect.CancelToken[cats.effect.IO]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "asyncF", "tail" : "(k: ((Either[Throwable, A]) => Unit) => IO[Unit]): IO[A]", "member" : "cats.effect.IO.asyncF", "link" : "cats\/effect\/IO$.html#asyncF[A](k:(Either[Throwable,A]=>Unit)=>cats.effect.IO[Unit]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "async", "tail" : "(k: ((Either[Throwable, A]) => Unit) => Unit): IO[A]", "member" : "cats.effect.IO.async", "link" : "cats\/effect\/IO$.html#async[A](k:(Either[Throwable,A]=>Unit)=>Unit):cats.effect.IO[A]", "kind" : "def"}, {"label" : "eval", "tail" : "(fa: Eval[A]): IO[A]", "member" : "cats.effect.IO.eval", "link" : "cats\/effect\/IO$.html#eval[A](fa:cats.Eval[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "none", "tail" : "(): IO[Option[A]]", "member" : "cats.effect.IO.none", "link" : "cats\/effect\/IO$.html#none[A]:cats.effect.IO[Option[A]]", "kind" : "def"}, {"label" : "never", "tail" : ": IO[Nothing]", "member" : "cats.effect.IO.never", "link" : "cats\/effect\/IO$.html#never:cats.effect.IO[Nothing]", "kind" : "val"}, {"label" : "unit", "tail" : ": IO[Unit]", "member" : "cats.effect.IO.unit", "link" : "cats\/effect\/IO$.html#unit:cats.effect.IO[Unit]", "kind" : "val"}, {"label" : "pure", "tail" : "(a: A): IO[A]", "member" : "cats.effect.IO.pure", "link" : "cats\/effect\/IO$.html#pure[A](a:A):cats.effect.IO[A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(thunk: => IO[A]): IO[A]", "member" : "cats.effect.IO.suspend", "link" : "cats\/effect\/IO$.html#suspend[A](thunk:=>cats.effect.IO[A]):cats.effect.IO[A]", "kind" : "def"}, {"label" : "delay", "tail" : "(body: => A): IO[A]", "member" : "cats.effect.IO.delay", "link" : "cats\/effect\/IO$.html#delay[A](body:=>A):cats.effect.IO[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(body: => A): IO[A]", "member" : "cats.effect.IO.apply", "link" : "cats\/effect\/IO$.html#apply[A](body:=>A):cats.effect.IO[A]", "kind" : "def"}, {"label" : "ioSemigroupK", "tail" : ": SemigroupK[IO]", "member" : "cats.effect.IOInstances.ioSemigroupK", "link" : "cats\/effect\/IO$.html#ioSemigroupK:cats.SemigroupK[cats.effect.IO]", "kind" : "implicit val"}, {"label" : "ioMonoid", "tail" : "(arg0: Monoid[A]): Monoid[IO[A]]", "member" : "cats.effect.IOInstances.ioMonoid", "link" : "cats\/effect\/IO$.html#ioMonoid[A](implicitevidence$3:cats.Monoid[A]):cats.Monoid[cats.effect.IO[A]]", "kind" : "implicit def"}, {"label" : "ioParallel", "tail" : "(cs: ContextShift[IO]): Aux[IO, Par]", "member" : "cats.effect.IOInstances.ioParallel", "link" : "cats\/effect\/IO$.html#ioParallel(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.Parallel.Aux[cats.effect.IO,cats.effect.IO.Par]", "kind" : "implicit def"}, {"label" : "ioAlign", "tail" : ": Align[IO]", "member" : "cats.effect.IOInstances.ioAlign", "link" : "cats\/effect\/IO$.html#ioAlign:cats.Align[cats.effect.IO]", "kind" : "implicit val"}, {"label" : "ioConcurrentEffect", "tail" : "(cs: ContextShift[IO]): ConcurrentEffect[IO]", "member" : "cats.effect.IOInstances.ioConcurrentEffect", "link" : "cats\/effect\/IO$.html#ioConcurrentEffect(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.effect.ConcurrentEffect[cats.effect.IO]", "kind" : "implicit def"}, {"label" : "parAlign", "tail" : "(cs: ContextShift[IO]): Align[Par]", "member" : "cats.effect.IOInstances.parAlign", "link" : "cats\/effect\/IO$.html#parAlign(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.Align[cats.effect.IO.Par]", "kind" : "implicit def"}, {"label" : "parCommutativeApplicative", "tail" : "(cs: ContextShift[IO]): CommutativeApplicative[Par]", "member" : "cats.effect.IOInstances.parCommutativeApplicative", "link" : "cats\/effect\/IO$.html#parCommutativeApplicative(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.CommutativeApplicative[cats.effect.IO.Par]", "kind" : "implicit def"}, {"label" : "ioEffect", "tail" : ": Effect[IO]", "member" : "cats.effect.IOLowPriorityInstances.ioEffect", "link" : "cats\/effect\/IO$.html#ioEffect:cats.effect.Effect[cats.effect.IO]", "kind" : "implicit val"}, {"label" : "ioSemigroup", "tail" : "(arg0: Semigroup[A]): Semigroup[IO[A]]", "member" : "cats.effect.IOLowPriorityInstances.ioSemigroup", "link" : "cats\/effect\/IO$.html#ioSemigroup[A](implicitevidence$2:cats.Semigroup[A]):cats.Semigroup[cats.effect.IO[A]]", "kind" : "implicit def"}, {"label" : "parApplicative", "tail" : "(cs: ContextShift[IO]): Applicative[Par]", "member" : "cats.effect.IOLowPriorityInstances.parApplicative", "link" : "cats\/effect\/IO$.html#parApplicative(implicitcs:cats.effect.ContextShift[cats.effect.IO]):cats.Applicative[cats.effect.IO.Par]", "kind" : "implicit def"}, {"label" : "Par", "tail" : "", "member" : "cats.effect.IOParallelNewtype.Par", "link" : "cats\/effect\/IO$.html#Par[+A]=IOParallelNewtype.this.Par.Type[A]", "kind" : "type"}, {"label" : "timer", "tail" : "(ec: ExecutionContext, sc: ScheduledExecutorService): Timer[IO]", "member" : "cats.effect.internals.IOTimerRef.timer", "link" : "cats\/effect\/IO$.html#timer(ec:scala.concurrent.ExecutionContext,sc:java.util.concurrent.ScheduledExecutorService):cats.effect.Timer[cats.effect.IO]", "kind" : "def"}, {"label" : "timer", "tail" : "(ec: ExecutionContext): Timer[IO]", "member" : "cats.effect.internals.IOTimerRef.timer", "link" : "cats\/effect\/IO$.html#timer(ec:scala.concurrent.ExecutionContext):cats.effect.Timer[cats.effect.IO]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/IO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/IO$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/IO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/IO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/IO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/IO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/IO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/IO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/IO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/IO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/IO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/IO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/IO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/IO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/IO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/IO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/IO.html", "kind" : "class"}, {"name" : "cats.effect.IOApp", "object" : "cats\/effect\/IOApp$.html", "members_object" : [{"label" : "WithContext", "tail" : "", "member" : "cats.effect.internals.IOAppCompanionPlatform.WithContext", "link" : "cats\/effect\/IOApp$.html#WithContextextendsIOApp", "kind" : "trait"}, {"label" : "Simple", "tail" : "", "member" : "cats.effect.IOApp.Simple", "link" : "cats\/effect\/IOApp$.html#SimpleextendsIOApp", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/IOApp$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/IOApp$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/IOApp$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/IOApp$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/IOApp$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/IOApp$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/IOApp$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IOApp$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IOApp$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IOApp$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/IOApp$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/IOApp$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/IOApp$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/IOApp$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/IOApp$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/IOApp$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/IOApp$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/IOApp$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/IOApp$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/IOApp.html", "kind" : "trait", "members_trait" : [{"label" : "executionContext", "tail" : "(): ExecutionContext", "member" : "cats.effect.IOApp.executionContext", "link" : "cats\/effect\/IOApp.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "def"}, {"label" : "timer", "tail" : "(): Timer[IO]", "member" : "cats.effect.IOApp.timer", "link" : "cats\/effect\/IOApp.html#timer:cats.effect.Timer[cats.effect.IO]", "kind" : "implicit def"}, {"label" : "contextShift", "tail" : "(): ContextShift[IO]", "member" : "cats.effect.IOApp.contextShift", "link" : "cats\/effect\/IOApp.html#contextShift:cats.effect.ContextShift[cats.effect.IO]", "kind" : "implicit def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "cats.effect.IOApp.main", "link" : "cats\/effect\/IOApp.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/IOApp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/IOApp.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/IOApp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/IOApp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/IOApp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/IOApp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/IOApp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IOApp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IOApp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/IOApp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/IOApp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/IOApp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/IOApp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/IOApp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/IOApp.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/IOApp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/IOApp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/IOApp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/IOApp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(args: List[String]): IO[ExitCode]", "member" : "cats.effect.IOApp.run", "link" : "cats\/effect\/IOApp.html#run(args:List[String]):cats.effect.IO[cats.effect.ExitCode]", "kind" : "abstract def"}], "shortDescription" : "App type that runs a cats.effect.IO."}, {"name" : "cats.effect.LiftIO", "object" : "cats\/effect\/LiftIO$.html", "members_object" : [{"label" : "ops", "tail" : "", "member" : "cats.effect.LiftIO.ops", "link" : "cats\/effect\/LiftIO$.html#ops", "kind" : "object"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.LiftIO.nonInheritedOps", "link" : "cats\/effect\/LiftIO$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToLiftIOOps", "tail" : "", "member" : "cats.effect.LiftIO.ToLiftIOOps", "link" : "cats\/effect\/LiftIO$.html#ToLiftIOOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.LiftIO.AllOps", "link" : "cats\/effect\/LiftIO$.html#AllOps[F[_],A]extendsLiftIO.Ops[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.LiftIO.Ops", "link" : "cats\/effect\/LiftIO$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: LiftIO[F]): LiftIO[F]", "member" : "cats.effect.LiftIO.apply", "link" : "cats\/effect\/LiftIO$.html#apply[F[_]](implicitinstance:cats.effect.LiftIO[F]):cats.effect.LiftIO[F]", "kind" : "def"}, {"label" : "catsReaderWriterStateTLiftIO", "tail" : "(arg0: LiftIO[F], arg1: Applicative[F], arg2: Monoid[L]): LiftIO[[ε$6$]IndexedReaderWriterStateT[F, E, L, S, S, ε$6$]]", "member" : "cats.effect.LiftIO.catsReaderWriterStateTLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsReaderWriterStateTLiftIO[F[_],E,L,S](implicitevidence$14:cats.effect.LiftIO[F],implicitevidence$15:cats.Applicative[F],implicitevidence$16:cats.Monoid[L]):cats.effect.LiftIO[[ε$6$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$6$]]", "kind" : "implicit def"}, {"label" : "catsIorTLiftIO", "tail" : "(arg0: LiftIO[F], arg1: Applicative[F]): LiftIO[[γ$5$]IorT[F, L, γ$5$]]", "member" : "cats.effect.LiftIO.catsIorTLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsIorTLiftIO[F[_],L](implicitevidence$12:cats.effect.LiftIO[F],implicitevidence$13:cats.Applicative[F]):cats.effect.LiftIO[[γ$5$]cats.data.IorT[F,L,γ$5$]]", "kind" : "implicit def"}, {"label" : "catsWriterTLiftIO", "tail" : "(arg0: LiftIO[F], arg1: Applicative[F], arg2: Monoid[L]): LiftIO[[γ$4$]WriterT[F, L, γ$4$]]", "member" : "cats.effect.LiftIO.catsWriterTLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsWriterTLiftIO[F[_],L](implicitevidence$9:cats.effect.LiftIO[F],implicitevidence$10:cats.Applicative[F],implicitevidence$11:cats.Monoid[L]):cats.effect.LiftIO[[γ$4$]cats.data.WriterT[F,L,γ$4$]]", "kind" : "implicit def"}, {"label" : "catsStateTLiftIO", "tail" : "(arg0: LiftIO[F], arg1: Applicative[F]): LiftIO[[γ$3$]IndexedStateT[F, S, S, γ$3$]]", "member" : "cats.effect.LiftIO.catsStateTLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsStateTLiftIO[F[_],S](implicitevidence$7:cats.effect.LiftIO[F],implicitevidence$8:cats.Applicative[F]):cats.effect.LiftIO[[γ$3$]cats.data.IndexedStateT[F,S,S,γ$3$]]", "kind" : "implicit def"}, {"label" : "catsOptionTLiftIO", "tail" : "(arg0: LiftIO[F], arg1: Functor[F]): LiftIO[[β$2$]OptionT[F, β$2$]]", "member" : "cats.effect.LiftIO.catsOptionTLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsOptionTLiftIO[F[_]](implicitevidence$5:cats.effect.LiftIO[F],implicitevidence$6:cats.Functor[F]):cats.effect.LiftIO[[β$2$]cats.data.OptionT[F,β$2$]]", "kind" : "implicit def"}, {"label" : "catsKleisliLiftIO", "tail" : "(arg0: LiftIO[F]): LiftIO[[γ$1$]Kleisli[F, R, γ$1$]]", "member" : "cats.effect.LiftIO.catsKleisliLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsKleisliLiftIO[F[_],R](implicitevidence$4:cats.effect.LiftIO[F]):cats.effect.LiftIO[[γ$1$]cats.data.Kleisli[F,R,γ$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTLiftIO", "tail" : "(arg0: LiftIO[F], arg1: Functor[F]): LiftIO[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.LiftIO.catsEitherTLiftIO", "link" : "cats\/effect\/LiftIO$.html#catsEitherTLiftIO[F[_],L](implicitevidence$2:cats.effect.LiftIO[F],implicitevidence$3:cats.Functor[F]):cats.effect.LiftIO[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "liftK", "tail" : "(arg0: LiftIO[F]): ~>[IO, F]", "member" : "cats.effect.LiftIO.liftK", "link" : "cats\/effect\/LiftIO$.html#liftK[F[_]](implicitevidence$1:cats.effect.LiftIO[F]):cats.effect.IO~>F", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/LiftIO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/LiftIO$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/LiftIO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/LiftIO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/LiftIO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/LiftIO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/LiftIO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LiftIO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LiftIO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LiftIO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/LiftIO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/LiftIO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/LiftIO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/LiftIO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/LiftIO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/LiftIO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/LiftIO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/LiftIO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/LiftIO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/LiftIO.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/LiftIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/LiftIO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/LiftIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/LiftIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/LiftIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/LiftIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/LiftIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LiftIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LiftIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LiftIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/LiftIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/LiftIO.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/LiftIO.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/LiftIO.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/LiftIO.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/LiftIO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/LiftIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/LiftIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/LiftIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "liftIO", "tail" : "(ioa: IO[A]): F[A]", "member" : "cats.effect.LiftIO.liftIO", "link" : "cats\/effect\/LiftIO.html#liftIO[A](ioa:cats.effect.IO[A]):F[A]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "cats.effect.LowerPriorityImplicits", "trait" : "cats\/effect\/LowerPriorityImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "extractFromTimer", "tail" : "(timer: Timer[F]): Clock[F]", "member" : "cats.effect.LowerPriorityImplicits.extractFromTimer", "link" : "cats\/effect\/LowerPriorityImplicits.html#extractFromTimer[F[_]](implicittimer:cats.effect.Timer[F]):cats.effect.Clock[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/LowerPriorityImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/LowerPriorityImplicits.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/LowerPriorityImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/LowerPriorityImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/LowerPriorityImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/LowerPriorityImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/LowerPriorityImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LowerPriorityImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LowerPriorityImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LowerPriorityImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/LowerPriorityImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/LowerPriorityImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/LowerPriorityImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/LowerPriorityImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/LowerPriorityImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/LowerPriorityImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/LowerPriorityImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/LowerPriorityImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/LowerPriorityImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.LowPriorityImplicits", "trait" : "cats\/effect\/LowPriorityImplicits.html", "kind" : "trait", "members_trait" : [{"label" : "deriveResource", "tail" : "(F: Applicative[F], clock: Clock[F]): Clock[[β$12$]Resource[F, β$12$]]", "member" : "cats.effect.LowPriorityImplicits.deriveResource", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveResource[F[_]](implicitF:cats.Applicative[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[β$12$]cats.effect.Resource[F,β$12$]]", "kind" : "implicit def"}, {"label" : "deriveIorT", "tail" : "(F: Applicative[F], clock: Clock[F]): Clock[[γ$10$]IorT[F, L, γ$10$]]", "member" : "cats.effect.LowPriorityImplicits.deriveIorT", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveIorT[F[_],L](implicitF:cats.Applicative[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$10$]cats.data.IorT[F,L,γ$10$]]", "kind" : "implicit def"}, {"label" : "deriveKleisli", "tail" : "(clock: Clock[F]): Clock[[γ$8$]Kleisli[F, R, γ$8$]]", "member" : "cats.effect.LowPriorityImplicits.deriveKleisli", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveKleisli[F[_],R](implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$8$]cats.data.Kleisli[F,R,γ$8$]]", "kind" : "implicit def"}, {"label" : "deriveWriterT", "tail" : "(F: Applicative[F], L: Monoid[L], clock: Clock[F]): Clock[[γ$6$]WriterT[F, L, γ$6$]]", "member" : "cats.effect.LowPriorityImplicits.deriveWriterT", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveWriterT[F[_],L](implicitF:cats.Applicative[F],implicitL:cats.Monoid[L],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$6$]cats.data.WriterT[F,L,γ$6$]]", "kind" : "implicit def"}, {"label" : "deriveStateT", "tail" : "(F: Applicative[F], clock: Clock[F]): Clock[[γ$4$]IndexedStateT[F, S, S, γ$4$]]", "member" : "cats.effect.LowPriorityImplicits.deriveStateT", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveStateT[F[_],S](implicitF:cats.Applicative[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$4$]cats.data.IndexedStateT[F,S,S,γ$4$]]", "kind" : "implicit def"}, {"label" : "deriveOptionT", "tail" : "(F: Functor[F], clock: Clock[F]): Clock[[β$2$]OptionT[F, β$2$]]", "member" : "cats.effect.LowPriorityImplicits.deriveOptionT", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveOptionT[F[_]](implicitF:cats.Functor[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[β$2$]cats.data.OptionT[F,β$2$]]", "kind" : "implicit def"}, {"label" : "deriveEitherT", "tail" : "(F: Functor[F], clock: Clock[F]): Clock[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.LowPriorityImplicits.deriveEitherT", "link" : "cats\/effect\/LowPriorityImplicits.html#deriveEitherT[F[_],L](implicitF:cats.Functor[F],implicitclock:cats.effect.Clock[F]):cats.effect.Clock[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "extractFromTimer", "tail" : "(timer: Timer[F]): Clock[F]", "member" : "cats.effect.LowerPriorityImplicits.extractFromTimer", "link" : "cats\/effect\/LowPriorityImplicits.html#extractFromTimer[F[_]](implicittimer:cats.effect.Timer[F]):cats.effect.Clock[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/LowPriorityImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/LowPriorityImplicits.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/LowPriorityImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/LowPriorityImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/LowPriorityImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/LowPriorityImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/LowPriorityImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LowPriorityImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LowPriorityImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/LowPriorityImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/LowPriorityImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/LowPriorityImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/LowPriorityImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/LowPriorityImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/LowPriorityImplicits.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/LowPriorityImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/LowPriorityImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/LowPriorityImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/LowPriorityImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.Resource", "shortDescription" : "The Resource is a data structure that captures the effectfulallocation of a resource, along with its finalizer.", "object" : "cats\/effect\/Resource$.html", "members_class" : [{"label" : "combineK", "tail" : "(that: Resource[G, B])(F: Sync[G], K: SemigroupK[G]): Resource[G, B]", "member" : "cats.effect.Resource.combineK", "link" : "cats\/effect\/Resource.html#combineK[G[x]>:F[x],B>:A](that:cats.effect.Resource[G,B])(implicitF:cats.effect.Sync[G],implicitK:cats.SemigroupK[G]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "evalTap_", "tail" : "(f: (A) => G[B])(F: Applicative[G]): Resource[G, A]", "member" : "cats.effect.Resource.evalTap_", "link" : "cats\/effect\/Resource.html#evalTap_[G[x]>:F[x],B](f:A=>G[B])(implicitF:cats.Applicative[G]):cats.effect.Resource[G,A]", "kind" : "def"}, {"label" : "evalMap_", "tail" : "(f: (A) => G[B])(F: Applicative[G]): Resource[G, B]", "member" : "cats.effect.Resource.evalMap_", "link" : "cats\/effect\/Resource.html#evalMap_[G[x]>:F[x],B](f:A=>G[B])(implicitF:cats.Applicative[G]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "allocated_", "tail" : "(F: BracketThrow[G]): G[(B, G[Unit])]", "member" : "cats.effect.Resource.allocated_", "link" : "cats\/effect\/Resource.html#allocated_[G[x]>:F[x],B>:A](implicitF:cats.effect.BracketThrow[G]):G[(B,G[Unit])]", "kind" : "def"}, {"label" : "mapK", "tail" : "(f: ~>[G, H])(D: Defer[H], G: Applicative[H]): Resource[H, A]", "member" : "cats.effect.Resource.mapK", "link" : "cats\/effect\/Resource.html#mapK[G[x]>:F[x],H[_]](f:G~>H)(implicitD:cats.Defer[H],implicitG:cats.Applicative[H]):cats.effect.Resource[H,A]", "kind" : "def"}, {"label" : "onFinalizeCase", "tail" : "(f: (ExitCase[Throwable]) => G[Unit])(F: Applicative[G]): Resource[G, A]", "member" : "cats.effect.Resource.onFinalizeCase", "link" : "cats\/effect\/Resource.html#onFinalizeCase[G[x]>:F[x]](f:cats.effect.ExitCase[Throwable]=>G[Unit])(implicitF:cats.Applicative[G]):cats.effect.Resource[G,A]", "kind" : "def"}, {"label" : "onFinalize", "tail" : "(finalizer: G[Unit])(F: Applicative[G]): Resource[G, A]", "member" : "cats.effect.Resource.onFinalize", "link" : "cats\/effect\/Resource.html#onFinalize[G[x]>:F[x]](finalizer:G[Unit])(implicitF:cats.Applicative[G]):cats.effect.Resource[G,A]", "kind" : "def"}, {"label" : "map_", "tail" : "(f: (A) => B)(F: Applicative[G]): Resource[G, B]", "member" : "cats.effect.Resource.map_", "link" : "cats\/effect\/Resource.html#map_[G[x]>:F[x],B](f:A=>B)(implicitF:cats.Applicative[G]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "flatMap_", "tail" : "(f: (A) => Resource[G, B]): Resource[G, B]", "member" : "cats.effect.Resource.flatMap_", "link" : "cats\/effect\/Resource.html#flatMap_[G[x]>:F[x],B](f:A=>cats.effect.Resource[G,B]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "parZip_", "tail" : "(that: Resource[G, B])(arg0: Sync[G], arg1: Parallel[G]): Resource[G, (A, B)]", "member" : "cats.effect.Resource.parZip_", "link" : "cats\/effect\/Resource.html#parZip_[G[x]>:F[x],B](that:cats.effect.Resource[G,B])(implicitevidence$1:cats.effect.Sync[G],implicitevidence$2:cats.Parallel[G]):cats.effect.Resource[G,(A,B)]", "kind" : "def"}, {"label" : "use_", "tail" : "(f: (A) => G[B])(F: BracketThrow[G]): G[B]", "member" : "cats.effect.Resource.use_", "link" : "cats\/effect\/Resource.html#use_[G[x]>:F[x],B](f:A=>G[B])(implicitF:cats.effect.BracketThrow[G]):G[B]", "kind" : "def"}, {"label" : "evalTap", "tail" : "(f: (A) => G[B])(F: Applicative[G]): Resource[G, A]", "member" : "cats.effect.ResourceLike.evalTap", "link" : "cats\/effect\/Resource.html#evalTap[G[x]>:F[x],B](f:A=>G[B])(implicitF:cats.Applicative[G]):cats.effect.Resource[G,A]", "kind" : "def"}, {"label" : "evalMap", "tail" : "(f: (A) => G[B])(F: Applicative[G]): Resource[G, B]", "member" : "cats.effect.ResourceLike.evalMap", "link" : "cats\/effect\/Resource.html#evalMap[G[x]>:F[x],B](f:A=>G[B])(implicitF:cats.Applicative[G]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "allocated", "tail" : "(F: BracketThrow[G]): G[(B, G[Unit])]", "member" : "cats.effect.ResourceLike.allocated", "link" : "cats\/effect\/Resource.html#allocated[G[x]>:F[x],B>:A](implicitF:cats.effect.BracketThrow[G]):G[(B,G[Unit])]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B)(F: Applicative[G]): Resource[G, B]", "member" : "cats.effect.ResourceLike.map", "link" : "cats\/effect\/Resource.html#map[G[x]>:F[x],B](f:A=>B)(implicitF:cats.Applicative[G]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => Resource[G, B]): Resource[G, B]", "member" : "cats.effect.ResourceLike.flatMap", "link" : "cats\/effect\/Resource.html#flatMap[G[x]>:F[x],B](f:A=>cats.effect.Resource[G,B]):cats.effect.Resource[G,B]", "kind" : "def"}, {"label" : "parZip", "tail" : "(that: Resource[G, B])(arg0: Sync[G], arg1: Parallel[G]): Resource[G, (A, B)]", "member" : "cats.effect.ResourceLike.parZip", "link" : "cats\/effect\/Resource.html#parZip[G[x]>:F[x],B](that:cats.effect.Resource[G,B])(implicitevidence$1:cats.effect.Sync[G],implicitevidence$2:cats.Parallel[G]):cats.effect.Resource[G,(A,B)]", "kind" : "def"}, {"label" : "use", "tail" : "(f: (A) => G[B])(F: BracketThrow[G]): G[B]", "member" : "cats.effect.ResourceLike.use", "link" : "cats\/effect\/Resource.html#use[G[x]>:F[x],B](f:A=>G[B])(implicitF:cats.effect.BracketThrow[G]):G[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Resource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Resource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Resource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Resource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Resource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Resource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Resource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Resource.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Resource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Resource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Resource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Resource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Resource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Resource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Resource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Resource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Resource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Resource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Resource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Par", "tail" : "", "member" : "cats.effect.Resource.Par", "link" : "cats\/effect\/Resource$.html#Par", "kind" : "object"}, {"label" : "Par", "tail" : "", "member" : "cats.effect.Resource.Par", "link" : "cats\/effect\/Resource$.html#Par[+F[_],+A]=cats.effect.Resource.Par.Type[F,A]", "kind" : "type"}, {"label" : "Suspend", "tail" : "", "member" : "cats.effect.Resource.Suspend", "link" : "cats\/effect\/Resource$.html#Suspend[F[_],A]extendsResource[F,A]withResource.InvariantResource[F,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Bind", "tail" : "", "member" : "cats.effect.Resource.Bind", "link" : "cats\/effect\/Resource$.html#Bind[F[_],S,+A]extendsResource[F,A]withResource.InvariantResource[F,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Allocate", "tail" : "", "member" : "cats.effect.Resource.Allocate", "link" : "cats\/effect\/Resource$.html#Allocate[F[_],A]extendsResource[F,A]withResource.InvariantResource[F,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => Resource[F, Either[A, B]])(F: Monad[F]): Resource[F, B]", "member" : "cats.effect.Resource.tailRecM", "link" : "cats\/effect\/Resource$.html#tailRecM[F[_],A,B](a:A)(f:A=>cats.effect.Resource[F,Either[A,B]])(implicitF:cats.Monad[F]):cats.effect.Resource[F,B]", "kind" : "def"}, {"label" : "fromAutoCloseableBlocking", "tail" : "(blocker: Blocker)(acquire: F[A])(arg0: Sync[F], arg1: ContextShift[F]): Resource[F, A]", "member" : "cats.effect.Resource.fromAutoCloseableBlocking", "link" : "cats\/effect\/Resource$.html#fromAutoCloseableBlocking[F[_],A<:AutoCloseable](blocker:cats.effect.Blocker)(acquire:F[A])(implicitevidence$3:cats.effect.Sync[F],implicitevidence$4:cats.effect.ContextShift[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "fromAutoCloseable", "tail" : "(acquire: F[A])(F: Sync[F]): Resource[F, A]", "member" : "cats.effect.Resource.fromAutoCloseable", "link" : "cats\/effect\/Resource$.html#fromAutoCloseable[F[_],A<:AutoCloseable](acquire:F[A])(implicitF:cats.effect.Sync[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "liftK", "tail" : "(F: Applicative[F]): ~>[F, [β$0$]Resource[F, β$0$]]", "member" : "cats.effect.Resource.liftK", "link" : "cats\/effect\/Resource$.html#liftK[F[_]](implicitF:cats.Applicative[F]):F~>[β$0$]cats.effect.Resource[F,β$0$]", "kind" : "def"}, {"label" : "liftF", "tail" : "(fa: F[A])(F: Applicative[F]): Resource[F, A]", "member" : "cats.effect.Resource.liftF", "link" : "cats\/effect\/Resource$.html#liftF[F[_],A](fa:F[A])(implicitF:cats.Applicative[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "eval", "tail" : "(fa: F[A])(F: Applicative[F]): Resource[F, A]", "member" : "cats.effect.Resource.eval", "link" : "cats\/effect\/Resource$.html#eval[F[_],A](fa:F[A])(implicitF:cats.Applicative[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "pure", "tail" : "(a: A)(F: Applicative[F]): Resource[F, A]", "member" : "cats.effect.Resource.pure", "link" : "cats\/effect\/Resource$.html#pure[F[_],A](a:A)(implicitF:cats.Applicative[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "makeCase", "tail" : "(acquire: F[A])(release: (A, ExitCase[Throwable]) => F[Unit])(F: Functor[F]): Resource[F, A]", "member" : "cats.effect.Resource.makeCase", "link" : "cats\/effect\/Resource$.html#makeCase[F[_],A](acquire:F[A])(release:(A,cats.effect.ExitCase[Throwable])=>F[Unit])(implicitF:cats.Functor[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "make", "tail" : "(acquire: F[A])(release: (A) => F[Unit])(F: Functor[F]): Resource[F, A]", "member" : "cats.effect.Resource.make", "link" : "cats\/effect\/Resource$.html#make[F[_],A](acquire:F[A])(release:A=>F[Unit])(implicitF:cats.Functor[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(fr: F[Resource[F, A]]): Resource[F, A]", "member" : "cats.effect.Resource.suspend", "link" : "cats\/effect\/Resource$.html#suspend[F[_],A](fr:F[cats.effect.Resource[F,A]]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "applyCase", "tail" : "(resource: F[(A, (ExitCase[Throwable]) => F[Unit])]): Resource[F, A]", "member" : "cats.effect.Resource.applyCase", "link" : "cats\/effect\/Resource$.html#applyCase[F[_],A](resource:F[(A,cats.effect.ExitCase[Throwable]=>F[Unit])]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(resource: F[(A, F[Unit])])(F: Functor[F]): Resource[F, A]", "member" : "cats.effect.Resource.apply", "link" : "cats\/effect\/Resource$.html#apply[F[_],A](resource:F[(A,F[Unit])])(implicitF:cats.Functor[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "fromDestroyable", "tail" : "(acquire: F[A])(F: Sync[F]): Resource[F, A]", "member" : "cats.effect.internals.ResourcePlatform.fromDestroyable", "link" : "cats\/effect\/Resource$.html#fromDestroyable[F[_],A<:javax.security.auth.Destroyable](acquire:F[A])(implicitF:cats.effect.Sync[F]):cats.effect.Resource[F,A]", "kind" : "def"}, {"label" : "catsEffectParallelForResource", "tail" : "(arg0: Sync[F0], arg1: Parallel[F0]): Aux[[β$5$]Resource[F0, β$5$], [β$6$]Type[F0, β$6$]]", "member" : "cats.effect.ResourceInstances.catsEffectParallelForResource", "link" : "cats\/effect\/Resource$.html#catsEffectParallelForResource[F0[_]](implicitevidence$5:cats.effect.Sync[F0],implicitevidence$6:cats.Parallel[F0]):cats.Parallel.Aux[[β$5$]cats.effect.Resource[F0,β$5$],[β$6$]cats.effect.Resource.Par.Type[F0,β$6$]]", "kind" : "implicit def"}, {"label" : "catsEffectCommutativeApplicativeForResourcePar", "tail" : "(F: Sync[F], P: Parallel[F]): CommutativeApplicative[[β$4$]Type[F, β$4$]]", "member" : "cats.effect.ResourceInstances.catsEffectCommutativeApplicativeForResourcePar", "link" : "cats\/effect\/Resource$.html#catsEffectCommutativeApplicativeForResourcePar[F[_]](implicitF:cats.effect.Sync[F],implicitP:cats.Parallel[F]):cats.CommutativeApplicative[[β$4$]cats.effect.Resource.Par.Type[F,β$4$]]", "kind" : "implicit def"}, {"label" : "catsEffectLiftIOForResource", "tail" : "(F00: LiftIO[F], F10: Applicative[F]): LiftIO[[β$3$]Resource[F, β$3$]]", "member" : "cats.effect.ResourceInstances.catsEffectLiftIOForResource", "link" : "cats\/effect\/Resource$.html#catsEffectLiftIOForResource[F[_]](implicitF00:cats.effect.LiftIO[F],implicitF10:cats.Applicative[F]):cats.effect.LiftIO[[β$3$]cats.effect.Resource[F,β$3$]]", "kind" : "implicit def"}, {"label" : "catsEffectMonoidForResource", "tail" : "(F0: Monad[F], A0: Monoid[A]): Monoid[Resource[F, A]]", "member" : "cats.effect.ResourceInstances.catsEffectMonoidForResource", "link" : "cats\/effect\/Resource$.html#catsEffectMonoidForResource[F[_],A](implicitF0:cats.Monad[F],implicitA0:cats.Monoid[A]):cats.Monoid[cats.effect.Resource[F,A]]", "kind" : "implicit def"}, {"label" : "catsEffectMonadErrorForResource", "tail" : "(F0: MonadError[F, E]): MonadError[[β$2$]Resource[F, β$2$], E]", "member" : "cats.effect.ResourceInstances.catsEffectMonadErrorForResource", "link" : "cats\/effect\/Resource$.html#catsEffectMonadErrorForResource[F[_],E](implicitF0:cats.MonadError[F,E]):cats.MonadError[[β$2$]cats.effect.Resource[F,β$2$],E]", "kind" : "implicit def"}, {"label" : "catsEffectSemigroupKForResource", "tail" : "(F0: Monad[F], K0: SemigroupK[F]): ResourceSemigroupK[F]", "member" : "cats.effect.ResourceInstances0.catsEffectSemigroupKForResource", "link" : "cats\/effect\/Resource$.html#catsEffectSemigroupKForResource[F[_],A](implicitF0:cats.Monad[F],implicitK0:cats.SemigroupK[F]):cats.effect.ResourceSemigroupK[F]", "kind" : "def"}, {"label" : "catsEffectSemigroupKForResource2", "tail" : "(F0: Sync[F], K: SemigroupK[F]): SemigroupK[[β$8$]Resource[F, β$8$]]", "member" : "cats.effect.ResourceInstances0.catsEffectSemigroupKForResource2", "link" : "cats\/effect\/Resource$.html#catsEffectSemigroupKForResource2[F[_]](implicitF0:cats.effect.Sync[F],implicitK:cats.SemigroupK[F]):cats.SemigroupK[[β$8$]cats.effect.Resource[F,β$8$]]", "kind" : "implicit def"}, {"label" : "catsEffectSemigroupForResource", "tail" : "(F0: Monad[F], A0: Semigroup[A]): ResourceSemigroup[F, A]", "member" : "cats.effect.ResourceInstances0.catsEffectSemigroupForResource", "link" : "cats\/effect\/Resource$.html#catsEffectSemigroupForResource[F[_],A](implicitF0:cats.Monad[F],implicitA0:cats.Semigroup[A]):cats.effect.ResourceSemigroup[F,A]", "kind" : "implicit def"}, {"label" : "catsEffectMonadForResource", "tail" : "(F0: Monad[F]): Monad[[β$7$]Resource[F, β$7$]]", "member" : "cats.effect.ResourceInstances0.catsEffectMonadForResource", "link" : "cats\/effect\/Resource$.html#catsEffectMonadForResource[F[_]](implicitF0:cats.Monad[F]):cats.Monad[[β$7$]cats.effect.Resource[F,β$7$]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Resource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Resource$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Resource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Resource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Resource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Resource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Resource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Resource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Resource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Resource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Resource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Resource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Resource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Resource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Resource$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Resource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Resource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Resource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Resource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/Resource.html", "kind" : "class"}, {"name" : "cats.effect.Sync", "object" : "cats\/effect\/Sync$.html", "members_object" : [{"label" : "ops", "tail" : ": ops$", "member" : "cats.effect.Sync.ops", "link" : "cats\/effect\/Sync$.html#ops:cats.effect.Sync.ops$", "kind" : "val"}, {"label" : "ops$", "tail" : "", "member" : "cats.effect.Sync.ops$", "link" : "cats\/effect\/Sync$.html#ops$extendsAnyRef", "kind" : "class"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.Sync.nonInheritedOps", "link" : "cats\/effect\/Sync$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToSyncOps", "tail" : "", "member" : "cats.effect.Sync.ToSyncOps", "link" : "cats\/effect\/Sync$.html#ToSyncOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.Sync.AllOps", "link" : "cats\/effect\/Sync$.html#AllOps[F[_],A]extendsSync.Ops[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.Sync.Ops", "link" : "cats\/effect\/Sync$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: Sync[F]): Sync[F]", "member" : "cats.effect.Sync.apply", "link" : "cats\/effect\/Sync$.html#apply[F[_]](implicitinstance:cats.effect.Sync[F]):cats.effect.Sync[F]", "kind" : "def"}, {"label" : "catsReaderWriteStateTSync", "tail" : "(arg0: Sync[F], arg1: Monoid[L]): Sync[[ε$6$]IndexedReaderWriterStateT[F, E, L, S, S, ε$6$]]", "member" : "cats.effect.Sync.catsReaderWriteStateTSync", "link" : "cats\/effect\/Sync$.html#catsReaderWriteStateTSync[F[_],E,L,S](implicitevidence$9:cats.effect.Sync[F],implicitevidence$10:cats.Monoid[L]):cats.effect.Sync[[ε$6$]cats.data.IndexedReaderWriterStateT[F,E,L,S,S,ε$6$]]", "kind" : "implicit def"}, {"label" : "catsIorTSync", "tail" : "(arg0: Sync[F], arg1: Semigroup[L]): Sync[[γ$5$]IorT[F, L, γ$5$]]", "member" : "cats.effect.Sync.catsIorTSync", "link" : "cats\/effect\/Sync$.html#catsIorTSync[F[_],L](implicitevidence$7:cats.effect.Sync[F],implicitevidence$8:cats.Semigroup[L]):cats.effect.Sync[[γ$5$]cats.data.IorT[F,L,γ$5$]]", "kind" : "implicit def"}, {"label" : "catsKleisliSync", "tail" : "(arg0: Sync[F]): Sync[[γ$4$]Kleisli[F, R, γ$4$]]", "member" : "cats.effect.Sync.catsKleisliSync", "link" : "cats\/effect\/Sync$.html#catsKleisliSync[F[_],R](implicitevidence$6:cats.effect.Sync[F]):cats.effect.Sync[[γ$4$]cats.data.Kleisli[F,R,γ$4$]]", "kind" : "implicit def"}, {"label" : "catsWriterTSync", "tail" : "(arg0: Sync[F], arg1: Monoid[L]): Sync[[γ$3$]WriterT[F, L, γ$3$]]", "member" : "cats.effect.Sync.catsWriterTSync", "link" : "cats\/effect\/Sync$.html#catsWriterTSync[F[_],L](implicitevidence$4:cats.effect.Sync[F],implicitevidence$5:cats.Monoid[L]):cats.effect.Sync[[γ$3$]cats.data.WriterT[F,L,γ$3$]]", "kind" : "implicit def"}, {"label" : "catsStateTSync", "tail" : "(arg0: Sync[F]): Sync[[γ$2$]IndexedStateT[F, S, S, γ$2$]]", "member" : "cats.effect.Sync.catsStateTSync", "link" : "cats\/effect\/Sync$.html#catsStateTSync[F[_],S](implicitevidence$3:cats.effect.Sync[F]):cats.effect.Sync[[γ$2$]cats.data.IndexedStateT[F,S,S,γ$2$]]", "kind" : "implicit def"}, {"label" : "catsOptionTSync", "tail" : "(arg0: Sync[F]): Sync[[β$1$]OptionT[F, β$1$]]", "member" : "cats.effect.Sync.catsOptionTSync", "link" : "cats\/effect\/Sync$.html#catsOptionTSync[F[_]](implicitevidence$2:cats.effect.Sync[F]):cats.effect.Sync[[β$1$]cats.data.OptionT[F,β$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTSync", "tail" : "(arg0: Sync[F]): Sync[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.Sync.catsEitherTSync", "link" : "cats\/effect\/Sync$.html#catsEitherTSync[F[_],L](implicitevidence$1:cats.effect.Sync[F]):cats.effect.Sync[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Sync$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Sync$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Sync$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Sync$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Sync$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Sync$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Sync$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Sync$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Sync$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Sync$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Sync$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Sync$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Sync$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Sync$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Sync$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Sync$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Sync$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Sync$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Sync$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Sync.html", "kind" : "trait", "members_trait" : [{"label" : "delay", "tail" : "(thunk: => A): F[A]", "member" : "cats.effect.Sync.delay", "link" : "cats\/effect\/Sync.html#delay[A](thunk:=>A):F[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: => F[A]): F[A]", "member" : "cats.effect.Sync.defer", "link" : "cats\/effect\/Sync.html#defer[A](fa:=>F[A]):F[A]", "kind" : "final def"}, {"label" : "fix", "tail" : "(fn: (F[A]) => F[A]): F[A]", "member" : "cats.Defer.fix", "link" : "cats\/effect\/Sync.html#fix[A](fn:F[A]=>F[A]):F[A]", "kind" : "def"}, {"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/Sync.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[Throwable]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/Sync.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/Sync.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/Sync.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/Sync.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, Throwable]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/Sync.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/Sync.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (Throwable) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/Sync.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/Sync.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/Sync.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/Sync.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/Sync.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/Sync.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/Sync.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/Sync.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/Sync.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/Sync.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/Sync.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/Sync.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/Sync.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/Sync.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/Sync.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/Sync.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/Sync.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/Sync.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/Sync.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/Sync.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/Sync.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/Sync.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/Sync.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/Sync.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/Sync.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/Sync.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/Sync.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/Sync.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/Sync.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/Sync.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => Throwable): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/Sync.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/Sync.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/Sync.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, Throwable]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/Sync.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/Sync.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/Sync.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/Sync.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (Throwable) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/Sync.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/Sync.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/Sync.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, Throwable]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/Sync.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, Throwable, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/Sync.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[Throwable, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/Sync.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (Throwable) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/Sync.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/Sync.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/Sync.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/Sync.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/Sync.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/Sync.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/Sync.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/Sync.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/Sync.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/Sync.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/Sync.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/Sync.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/Sync.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/Sync.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/Sync.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/Sync.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/Sync.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/Sync.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/Sync.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/Sync.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/Sync.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/Sync.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/Sync.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/Sync.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/Sync.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/Sync.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/Sync.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/Sync.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/Sync.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/Sync.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/Sync.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/Sync.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/Sync.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/Sync.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/Sync.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/Sync.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/Sync.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/Sync.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/Sync.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/Sync.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/Sync.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/Sync.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/Sync.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/Sync.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/Sync.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/Sync.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/Sync.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/Sync.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/Sync.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/Sync.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/Sync.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/Sync.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/Sync.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/Sync.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/Sync.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/Sync.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/Sync.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/Sync.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/Sync.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/Sync.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/Sync.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/Sync.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/Sync.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/Sync.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/Sync.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/Sync.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/Sync.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/Sync.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/Sync.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/Sync.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/Sync.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/Sync.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/Sync.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/Sync.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/Sync.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/Sync.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/Sync.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/Sync.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/Sync.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/Sync.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/Sync.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/Sync.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/Sync.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/Sync.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/Sync.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/Sync.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/Sync.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/Sync.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/Sync.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/Sync.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/Sync.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/Sync.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Sync.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Sync.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Sync.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Sync.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Sync.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Sync.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Sync.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Sync.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Sync.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Sync.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Sync.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Sync.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Sync.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Sync.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Sync.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Sync.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Sync.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Sync.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Sync.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "suspend", "tail" : "(thunk: => F[A]): F[A]", "member" : "cats.effect.Sync.suspend", "link" : "cats\/effect\/Sync.html#suspend[A](thunk:=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[Throwable]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/Sync.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/Sync.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/Sync.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (Throwable) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/Sync.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: Throwable): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/Sync.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/Sync.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "A monad that can suspend the execution of side effectsin the F[_] context."}, {"name" : "cats.effect.SyncEffect", "object" : "cats\/effect\/SyncEffect$.html", "members_object" : [{"label" : "ops", "tail" : "", "member" : "cats.effect.SyncEffect.ops", "link" : "cats\/effect\/SyncEffect$.html#ops", "kind" : "object"}, {"label" : "nonInheritedOps", "tail" : "", "member" : "cats.effect.SyncEffect.nonInheritedOps", "link" : "cats\/effect\/SyncEffect$.html#nonInheritedOps", "kind" : "object"}, {"label" : "ToSyncEffectOps", "tail" : "", "member" : "cats.effect.SyncEffect.ToSyncEffectOps", "link" : "cats\/effect\/SyncEffect$.html#ToSyncEffectOpsextendsAnyRef", "kind" : "trait"}, {"label" : "AllOps", "tail" : "", "member" : "cats.effect.SyncEffect.AllOps", "link" : "cats\/effect\/SyncEffect$.html#AllOps[F[_],A]extendsSyncEffect.Ops[F,A]withSync.AllOps[F,A]", "kind" : "trait"}, {"label" : "Ops", "tail" : "", "member" : "cats.effect.SyncEffect.Ops", "link" : "cats\/effect\/SyncEffect$.html#Ops[F[_],A]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(instance: SyncEffect[F]): SyncEffect[F]", "member" : "cats.effect.SyncEffect.apply", "link" : "cats\/effect\/SyncEffect$.html#apply[F[_]](implicitinstance:cats.effect.SyncEffect[F]):cats.effect.SyncEffect[F]", "kind" : "def"}, {"label" : "catsWriterTSyncEffect", "tail" : "(arg0: SyncEffect[F], arg1: Monoid[L]): SyncEffect[[γ$1$]WriterT[F, L, γ$1$]]", "member" : "cats.effect.SyncEffect.catsWriterTSyncEffect", "link" : "cats\/effect\/SyncEffect$.html#catsWriterTSyncEffect[F[_],L](implicitevidence$2:cats.effect.SyncEffect[F],implicitevidence$3:cats.Monoid[L]):cats.effect.SyncEffect[[γ$1$]cats.data.WriterT[F,L,γ$1$]]", "kind" : "implicit def"}, {"label" : "catsEitherTSyncEffect", "tail" : "(arg0: SyncEffect[F]): SyncEffect[[γ$0$]EitherT[F, Throwable, γ$0$]]", "member" : "cats.effect.SyncEffect.catsEitherTSyncEffect", "link" : "cats\/effect\/SyncEffect$.html#catsEitherTSyncEffect[F[_]](implicitevidence$1:cats.effect.SyncEffect[F]):cats.effect.SyncEffect[[γ$0$]cats.data.EitherT[F,Throwable,γ$0$]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/SyncEffect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/SyncEffect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/SyncEffect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/SyncEffect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/SyncEffect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/SyncEffect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/SyncEffect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncEffect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncEffect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncEffect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/SyncEffect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/SyncEffect$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/SyncEffect$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/SyncEffect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/SyncEffect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/SyncEffect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/SyncEffect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/SyncEffect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/SyncEffect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/SyncEffect.html", "kind" : "trait", "members_trait" : [{"label" : "runSyncK", "tail" : "(G: Sync[G]): ~>[F, G]", "member" : "cats.effect.SyncEffect.runSyncK", "link" : "cats\/effect\/SyncEffect.html#runSyncK[G[_]](implicitG:cats.effect.Sync[G]):F~>G", "kind" : "def"}, {"label" : "delay", "tail" : "(thunk: => A): F[A]", "member" : "cats.effect.Sync.delay", "link" : "cats\/effect\/SyncEffect.html#delay[A](thunk:=>A):F[A]", "kind" : "def"}, {"label" : "defer", "tail" : "(fa: => F[A]): F[A]", "member" : "cats.effect.Sync.defer", "link" : "cats\/effect\/SyncEffect.html#defer[A](fa:=>F[A]):F[A]", "kind" : "final def"}, {"label" : "fix", "tail" : "(fn: (F[A]) => F[A]): F[A]", "member" : "cats.Defer.fix", "link" : "cats\/effect\/SyncEffect.html#fix[A](fn:F[A]=>F[A]):F[A]", "kind" : "def"}, {"label" : "onCancel", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.onCancel", "link" : "cats\/effect\/SyncEffect.html#onCancel[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(fa: F[A])(finalizer: (ExitCase[Throwable]) => F[Unit]): F[A]", "member" : "cats.effect.Bracket.guaranteeCase", "link" : "cats\/effect\/SyncEffect.html#guaranteeCase[A](fa:F[A])(finalizer:cats.effect.ExitCase[E]=>F[Unit]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(fa: F[A])(finalizer: F[Unit]): F[A]", "member" : "cats.effect.Bracket.guarantee", "link" : "cats\/effect\/SyncEffect.html#guarantee[A](fa:F[A])(finalizer:F[Unit]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(fa: F[A]): F[A]", "member" : "cats.effect.Bracket.uncancelable", "link" : "cats\/effect\/SyncEffect.html#uncancelable[A](fa:F[A]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracket", "link" : "cats\/effect\/SyncEffect.html#bracket[A,B](acquire:F[A])(use:A=>F[B])(release:A=>F[Unit]):F[B]", "kind" : "def"}, {"label" : "adaptError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, Throwable]): F[A]", "member" : "cats.MonadError.adaptError", "link" : "cats\/effect\/SyncEffect.html#adaptError[A](fa:F[A])(pf:PartialFunction[E,E]):F[A]", "kind" : "def"}, {"label" : "attemptTap", "tail" : "(fa: F[A])(f: (Either[Throwable, A]) => F[B]): F[A]", "member" : "cats.MonadError.attemptTap", "link" : "cats\/effect\/SyncEffect.html#attemptTap[A,B](fa:F[A])(f:Either[E,A]=>F[B]):F[A]", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(fa: F[A])(recover: (Throwable) => F[B], bind: (A) => F[B]): F[B]", "member" : "cats.MonadError.redeemWith", "link" : "cats\/effect\/SyncEffect.html#redeemWith[A,B](fa:F[A])(recover:E=>F[B],bind:A=>F[B]):F[B]", "kind" : "def"}, {"label" : "rethrow", "tail" : "(fa: F[Either[EE, A]]): F[A]", "member" : "cats.MonadError.rethrow", "link" : "cats\/effect\/SyncEffect.html#rethrow[A,EE<:E](fa:F[Either[EE,A]]):F[A]", "kind" : "def"}, {"label" : "ensureOr", "tail" : "(fa: F[A])(error: (A) => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensureOr", "link" : "cats\/effect\/SyncEffect.html#ensureOr[A](fa:F[A])(error:A=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ensure", "tail" : "(fa: F[A])(error: => Throwable)(predicate: (A) => Boolean): F[A]", "member" : "cats.MonadError.ensure", "link" : "cats\/effect\/SyncEffect.html#ensure[A](fa:F[A])(error:=>E)(predicate:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "ifElseM", "tail" : "(branches: (F[Boolean], F[A])*)(els: F[A]): F[A]", "member" : "cats.Monad.ifElseM", "link" : "cats\/effect\/SyncEffect.html#ifElseM[A](branches:(F[Boolean],F[A])*)(els:F[A]):F[A]", "kind" : "def"}, {"label" : "iterateUntilM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntilM", "link" : "cats\/effect\/SyncEffect.html#iterateUntilM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhileM", "tail" : "(init: A)(f: (A) => F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhileM", "link" : "cats\/effect\/SyncEffect.html#iterateWhileM[A](init:A)(f:A=>F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateUntil", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateUntil", "link" : "cats\/effect\/SyncEffect.html#iterateUntil[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "iterateWhile", "tail" : "(f: F[A])(p: (A) => Boolean): F[A]", "member" : "cats.Monad.iterateWhile", "link" : "cats\/effect\/SyncEffect.html#iterateWhile[A](f:F[A])(p:A=>Boolean):F[A]", "kind" : "def"}, {"label" : "untilM_", "tail" : "(f: F[A])(cond: => F[Boolean]): F[Unit]", "member" : "cats.Monad.untilM_", "link" : "cats\/effect\/SyncEffect.html#untilM_[A](f:F[A])(cond:=>F[Boolean]):F[Unit]", "kind" : "def"}, {"label" : "untilM", "tail" : "(f: F[A])(cond: => F[Boolean])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.untilM", "link" : "cats\/effect\/SyncEffect.html#untilM[G[_<:<?>],A](f:F[A])(cond:=>F[Boolean])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "whileM_", "tail" : "(p: F[Boolean])(body: => F[A]): F[Unit]", "member" : "cats.Monad.whileM_", "link" : "cats\/effect\/SyncEffect.html#whileM_[A](p:F[Boolean])(body:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "whileM", "tail" : "(p: F[Boolean])(body: => F[A])(G: Alternative[G]): F[G[A]]", "member" : "cats.Monad.whileM", "link" : "cats\/effect\/SyncEffect.html#whileM[G[_<:<?>],A](p:F[Boolean])(body:=>F[A])(implicitG:cats.Alternative[G]):F[G[A]]", "kind" : "def"}, {"label" : "map", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Monad.map", "link" : "cats\/effect\/SyncEffect.html#map[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "def"}, {"label" : "untilDefinedM", "tail" : "(foa: F[Option[A]]): F[A]", "member" : "cats.FlatMap.untilDefinedM", "link" : "cats\/effect\/SyncEffect.html#untilDefinedM[A](foa:F[Option[A]]):F[A]", "kind" : "def"}, {"label" : "iterateForeverM", "tail" : "(a: A)(f: (A) => F[A]): F[B]", "member" : "cats.FlatMap.iterateForeverM", "link" : "cats\/effect\/SyncEffect.html#iterateForeverM[A,B](a:A)(f:A=>F[A]):F[B]", "kind" : "def"}, {"label" : "foreverM", "tail" : "(fa: F[A]): F[B]", "member" : "cats.FlatMap.foreverM", "link" : "cats\/effect\/SyncEffect.html#foreverM[A,B](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "flatTap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[A]", "member" : "cats.FlatMap.flatTap", "link" : "cats\/effect\/SyncEffect.html#flatTap[A,B](fa:F[A])(f:A=>F[B]):F[A]", "kind" : "def"}, {"label" : "ifM", "tail" : "(fa: F[Boolean])(ifTrue: => F[B], ifFalse: => F[B]): F[B]", "member" : "cats.FlatMap.ifM", "link" : "cats\/effect\/SyncEffect.html#ifM[B](fa:F[Boolean])(ifTrue:=>F[B],ifFalse:=>F[B]):F[B]", "kind" : "def"}, {"label" : "mproduct", "tail" : "(fa: F[A])(f: (A) => F[B]): F[(A, B)]", "member" : "cats.FlatMap.mproduct", "link" : "cats\/effect\/SyncEffect.html#mproduct[A,B](fa:F[A])(f:A=>F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "productL", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.FlatMap.productL", "link" : "cats\/effect\/SyncEffect.html#productL[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "def"}, {"label" : "productR", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.FlatMap.productR", "link" : "cats\/effect\/SyncEffect.html#productR[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "def"}, {"label" : "map2", "tail" : "(fa: F[A], fb: F[B])(f: (A, B) => Z): F[Z]", "member" : "cats.FlatMap.map2", "link" : "cats\/effect\/SyncEffect.html#map2[A,B,Z](fa:F[A],fb:F[B])(f:(A,B)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap2", "tail" : "(ff: F[(A, B) => Z])(fa: F[A], fb: F[B]): F[Z]", "member" : "cats.FlatMap.ap2", "link" : "cats\/effect\/SyncEffect.html#ap2[A,B,Z](ff:F[(A,B)=>Z])(fa:F[A],fb:F[B]):F[Z]", "kind" : "def"}, {"label" : "product", "tail" : "(fa: F[A], fb: F[B]): F[(A, B)]", "member" : "cats.FlatMap.product", "link" : "cats\/effect\/SyncEffect.html#product[A,B](fa:F[A],fb:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "ap", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.FlatMap.ap", "link" : "cats\/effect\/SyncEffect.html#ap[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "def"}, {"label" : "productLEval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[A]", "member" : "cats.FlatMap.productLEval", "link" : "cats\/effect\/SyncEffect.html#productLEval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[A]", "kind" : "def"}, {"label" : "productREval", "tail" : "(fa: F[A])(fb: Eval[F[B]]): F[B]", "member" : "cats.FlatMap.productREval", "link" : "cats\/effect\/SyncEffect.html#productREval[A,B](fa:F[A])(fb:cats.Eval[F[B]]):F[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ffa: F[F[A]]): F[A]", "member" : "cats.FlatMap.flatten", "link" : "cats\/effect\/SyncEffect.html#flatten[A](ffa:F[F[A]]):F[A]", "kind" : "def"}, {"label" : "fromValidated", "tail" : "(x: Validated[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromValidated", "link" : "cats\/effect\/SyncEffect.html#fromValidated[A](x:cats.data.Validated[E,A]):F[A]", "kind" : "def"}, {"label" : "fromOption", "tail" : "(oa: Option[A], ifEmpty: => Throwable): F[A]", "member" : "cats.ApplicativeError.fromOption", "link" : "cats\/effect\/SyncEffect.html#fromOption[A](oa:Option[A],ifEmpty:=>E):F[A]", "kind" : "def"}, {"label" : "fromEither", "tail" : "(x: Either[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.fromEither", "link" : "cats\/effect\/SyncEffect.html#fromEither[A](x:Either[E,A]):F[A]", "kind" : "def"}, {"label" : "fromTry", "tail" : "(t: Try[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.fromTry", "link" : "cats\/effect\/SyncEffect.html#fromTry[A](t:scala.util.Try[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchOnly", "tail" : "(): CatchOnlyPartiallyApplied[T, F, Throwable]", "member" : "cats.ApplicativeError.catchOnly", "link" : "cats\/effect\/SyncEffect.html#catchOnly[T>:Null<:Throwable]:cats.ApplicativeError.CatchOnlyPartiallyApplied[T,F,E]", "kind" : "def"}, {"label" : "catchNonFatalEval", "tail" : "(a: Eval[A])(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatalEval", "link" : "cats\/effect\/SyncEffect.html#catchNonFatalEval[A](a:cats.Eval[A])(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "catchNonFatal", "tail" : "(a: => A)(ev: <:<[Throwable, Throwable]): F[A]", "member" : "cats.ApplicativeError.catchNonFatal", "link" : "cats\/effect\/SyncEffect.html#catchNonFatal[A](a:=>A)(implicitev:Throwable<:<E):F[A]", "kind" : "def"}, {"label" : "onError", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[Unit]]): F[A]", "member" : "cats.ApplicativeError.onError", "link" : "cats\/effect\/SyncEffect.html#onError[A](fa:F[A])(pf:PartialFunction[E,F[Unit]]):F[A]", "kind" : "def"}, {"label" : "redeem", "tail" : "(fa: F[A])(recover: (Throwable) => B, f: (A) => B): F[B]", "member" : "cats.ApplicativeError.redeem", "link" : "cats\/effect\/SyncEffect.html#redeem[A,B](fa:F[A])(recover:E=>B,f:A=>B):F[B]", "kind" : "def"}, {"label" : "recoverWith", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, F[A]]): F[A]", "member" : "cats.ApplicativeError.recoverWith", "link" : "cats\/effect\/SyncEffect.html#recoverWith[A](fa:F[A])(pf:PartialFunction[E,F[A]]):F[A]", "kind" : "def"}, {"label" : "recover", "tail" : "(fa: F[A])(pf: PartialFunction[Throwable, A]): F[A]", "member" : "cats.ApplicativeError.recover", "link" : "cats\/effect\/SyncEffect.html#recover[A](fa:F[A])(pf:PartialFunction[E,A]):F[A]", "kind" : "def"}, {"label" : "attemptNarrow", "tail" : "(fa: F[A])(tag: ClassTag[EE], ev: <:<[EE, Throwable]): F[Either[EE, A]]", "member" : "cats.ApplicativeError.attemptNarrow", "link" : "cats\/effect\/SyncEffect.html#attemptNarrow[EE<:Throwable,A](fa:F[A])(implicittag:scala.reflect.ClassTag[EE],implicitev:EE<:<E):F[Either[EE,A]]", "kind" : "def"}, {"label" : "attemptT", "tail" : "(fa: F[A]): EitherT[F, Throwable, A]", "member" : "cats.ApplicativeError.attemptT", "link" : "cats\/effect\/SyncEffect.html#attemptT[A](fa:F[A]):cats.data.EitherT[F,E,A]", "kind" : "def"}, {"label" : "attempt", "tail" : "(fa: F[A]): F[Either[Throwable, A]]", "member" : "cats.ApplicativeError.attempt", "link" : "cats\/effect\/SyncEffect.html#attempt[A](fa:F[A]):F[Either[E,A]]", "kind" : "def"}, {"label" : "handleError", "tail" : "(fa: F[A])(f: (Throwable) => A): F[A]", "member" : "cats.ApplicativeError.handleError", "link" : "cats\/effect\/SyncEffect.html#handleError[A](fa:F[A])(f:E=>A):F[A]", "kind" : "def"}, {"label" : "whenA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.whenA", "link" : "cats\/effect\/SyncEffect.html#whenA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "unlessA", "tail" : "(cond: Boolean)(f: => F[A]): F[Unit]", "member" : "cats.Applicative.unlessA", "link" : "cats\/effect\/SyncEffect.html#unlessA[A](cond:Boolean)(f:=>F[A]):F[Unit]", "kind" : "def"}, {"label" : "composeContravariantMonoidal", "tail" : "(arg0: ContravariantMonoidal[G]): ContravariantMonoidal[[α]F[G[α]]]", "member" : "cats.Applicative.composeContravariantMonoidal", "link" : "cats\/effect\/SyncEffect.html#composeContravariantMonoidal[G[_<:<?>]](implicitevidence$2:cats.ContravariantMonoidal[G]):cats.ContravariantMonoidal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Applicative[G]): Applicative[[α]F[G[α]]]", "member" : "cats.Applicative.compose", "link" : "cats\/effect\/SyncEffect.html#compose[G[_]](implicitevidence$1:cats.Applicative[G]):cats.Applicative[[α]F[G[α]]]", "kind" : "def"}, {"label" : "replicateA", "tail" : "(n: Int, fa: F[A]): F[List[A]]", "member" : "cats.Applicative.replicateA", "link" : "cats\/effect\/SyncEffect.html#replicateA[A](n:Int,fa:F[A]):F[List[A]]", "kind" : "def"}, {"label" : "unit", "tail" : "(): F[Unit]", "member" : "cats.Applicative.unit", "link" : "cats\/effect\/SyncEffect.html#unit:F[Unit]", "kind" : "def"}, {"label" : "point", "tail" : "(a: A): F[A]", "member" : "cats.InvariantMonoidal.point", "link" : "cats\/effect\/SyncEffect.html#point[A](a:A):F[A]", "kind" : "def"}, {"label" : "ifA", "tail" : "(fcond: F[Boolean])(ifTrue: F[A], ifFalse: F[A]): F[A]", "member" : "cats.Apply.ifA", "link" : "cats\/effect\/SyncEffect.html#ifA[A](fcond:F[Boolean])(ifTrue:F[A],ifFalse:F[A]):F[A]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Apply[G]): Apply[[α]F[G[α]]]", "member" : "cats.Apply.compose", "link" : "cats\/effect\/SyncEffect.html#compose[G[_]](implicitevidence$1:cats.Apply[G]):cats.Apply[[α]F[G[α]]]", "kind" : "def"}, {"label" : "map2Eval", "tail" : "(fa: F[A], fb: Eval[F[B]])(f: (A, B) => Z): Eval[F[Z]]", "member" : "cats.Apply.map2Eval", "link" : "cats\/effect\/SyncEffect.html#map2Eval[A,B,Z](fa:F[A],fb:cats.Eval[F[B]])(f:(A,B)=>Z):cats.Eval[F[Z]]", "kind" : "def"}, {"label" : "<*", "tail" : "(fa: F[A])(fb: F[B]): F[A]", "member" : "cats.Apply.<*", "link" : "cats\/effect\/SyncEffect.html#<*[A,B](fa:F[A])(fb:F[B]):F[A]", "kind" : "final def"}, {"label" : "*>", "tail" : "(fa: F[A])(fb: F[B]): F[B]", "member" : "cats.Apply.*>", "link" : "cats\/effect\/SyncEffect.html#*>[A,B](fa:F[A])(fb:F[B]):F[B]", "kind" : "final def"}, {"label" : "<*>", "tail" : "(ff: F[(A) => B])(fa: F[A]): F[B]", "member" : "cats.Apply.<*>", "link" : "cats\/effect\/SyncEffect.html#<*>[A,B](ff:F[A=>B])(fa:F[A]):F[B]", "kind" : "final def"}, {"label" : "tuple22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "cats.ApplyArityFunctions.tuple22", "link" : "cats\/effect\/SyncEffect.html#tuple22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "def"}, {"label" : "map22", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map22", "link" : "cats\/effect\/SyncEffect.html#map22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap22", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20], f21: F[A21]): F[Z]", "member" : "cats.ApplyArityFunctions.ap22", "link" : "cats\/effect\/SyncEffect.html#ap22[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20],f21:F[A21]):F[Z]", "kind" : "def"}, {"label" : "tuple21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "cats.ApplyArityFunctions.tuple21", "link" : "cats\/effect\/SyncEffect.html#tuple21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "def"}, {"label" : "map21", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map21", "link" : "cats\/effect\/SyncEffect.html#map21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap21", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19], f20: F[A20]): F[Z]", "member" : "cats.ApplyArityFunctions.ap21", "link" : "cats\/effect\/SyncEffect.html#ap21[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19],f20:F[A20]):F[Z]", "kind" : "def"}, {"label" : "tuple20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "cats.ApplyArityFunctions.tuple20", "link" : "cats\/effect\/SyncEffect.html#tuple20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "def"}, {"label" : "map20", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map20", "link" : "cats\/effect\/SyncEffect.html#map20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap20", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18], f19: F[A19]): F[Z]", "member" : "cats.ApplyArityFunctions.ap20", "link" : "cats\/effect\/SyncEffect.html#ap20[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18],f19:F[A19]):F[Z]", "kind" : "def"}, {"label" : "tuple19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "cats.ApplyArityFunctions.tuple19", "link" : "cats\/effect\/SyncEffect.html#tuple19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "def"}, {"label" : "map19", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map19", "link" : "cats\/effect\/SyncEffect.html#map19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap19", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17], f18: F[A18]): F[Z]", "member" : "cats.ApplyArityFunctions.ap19", "link" : "cats\/effect\/SyncEffect.html#ap19[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17],f18:F[A18]):F[Z]", "kind" : "def"}, {"label" : "tuple18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "cats.ApplyArityFunctions.tuple18", "link" : "cats\/effect\/SyncEffect.html#tuple18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "def"}, {"label" : "map18", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map18", "link" : "cats\/effect\/SyncEffect.html#map18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap18", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16], f17: F[A17]): F[Z]", "member" : "cats.ApplyArityFunctions.ap18", "link" : "cats\/effect\/SyncEffect.html#ap18[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16],f17:F[A17]):F[Z]", "kind" : "def"}, {"label" : "tuple17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "cats.ApplyArityFunctions.tuple17", "link" : "cats\/effect\/SyncEffect.html#tuple17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "def"}, {"label" : "map17", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map17", "link" : "cats\/effect\/SyncEffect.html#map17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap17", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15], f16: F[A16]): F[Z]", "member" : "cats.ApplyArityFunctions.ap17", "link" : "cats\/effect\/SyncEffect.html#ap17[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15],f16:F[A16]):F[Z]", "kind" : "def"}, {"label" : "tuple16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "cats.ApplyArityFunctions.tuple16", "link" : "cats\/effect\/SyncEffect.html#tuple16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "def"}, {"label" : "map16", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map16", "link" : "cats\/effect\/SyncEffect.html#map16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap16", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14], f15: F[A15]): F[Z]", "member" : "cats.ApplyArityFunctions.ap16", "link" : "cats\/effect\/SyncEffect.html#ap16[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14],f15:F[A15]):F[Z]", "kind" : "def"}, {"label" : "tuple15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "cats.ApplyArityFunctions.tuple15", "link" : "cats\/effect\/SyncEffect.html#tuple15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "def"}, {"label" : "map15", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map15", "link" : "cats\/effect\/SyncEffect.html#map15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap15", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13], f14: F[A14]): F[Z]", "member" : "cats.ApplyArityFunctions.ap15", "link" : "cats\/effect\/SyncEffect.html#ap15[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13],f14:F[A14]):F[Z]", "kind" : "def"}, {"label" : "tuple14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "cats.ApplyArityFunctions.tuple14", "link" : "cats\/effect\/SyncEffect.html#tuple14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "def"}, {"label" : "map14", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map14", "link" : "cats\/effect\/SyncEffect.html#map14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap14", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12], f13: F[A13]): F[Z]", "member" : "cats.ApplyArityFunctions.ap14", "link" : "cats\/effect\/SyncEffect.html#ap14[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12],f13:F[A13]):F[Z]", "kind" : "def"}, {"label" : "tuple13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "cats.ApplyArityFunctions.tuple13", "link" : "cats\/effect\/SyncEffect.html#tuple13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "def"}, {"label" : "map13", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map13", "link" : "cats\/effect\/SyncEffect.html#map13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap13", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11], f12: F[A12]): F[Z]", "member" : "cats.ApplyArityFunctions.ap13", "link" : "cats\/effect\/SyncEffect.html#ap13[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11],f12:F[A12]):F[Z]", "kind" : "def"}, {"label" : "tuple12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "cats.ApplyArityFunctions.tuple12", "link" : "cats\/effect\/SyncEffect.html#tuple12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "def"}, {"label" : "map12", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map12", "link" : "cats\/effect\/SyncEffect.html#map12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap12", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10], f11: F[A11]): F[Z]", "member" : "cats.ApplyArityFunctions.ap12", "link" : "cats\/effect\/SyncEffect.html#ap12[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10],f11:F[A11]):F[Z]", "kind" : "def"}, {"label" : "tuple11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "cats.ApplyArityFunctions.tuple11", "link" : "cats\/effect\/SyncEffect.html#tuple11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "def"}, {"label" : "map11", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map11", "link" : "cats\/effect\/SyncEffect.html#map11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap11", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9], f10: F[A10]): F[Z]", "member" : "cats.ApplyArityFunctions.ap11", "link" : "cats\/effect\/SyncEffect.html#ap11[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9],f10:F[A10]):F[Z]", "kind" : "def"}, {"label" : "tuple10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "cats.ApplyArityFunctions.tuple10", "link" : "cats\/effect\/SyncEffect.html#tuple10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "def"}, {"label" : "map10", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map10", "link" : "cats\/effect\/SyncEffect.html#map10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap10", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8], f9: F[A9]): F[Z]", "member" : "cats.ApplyArityFunctions.ap10", "link" : "cats\/effect\/SyncEffect.html#ap10[A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8,A9)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8],f9:F[A9]):F[Z]", "kind" : "def"}, {"label" : "tuple9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[(A0, A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "cats.ApplyArityFunctions.tuple9", "link" : "cats\/effect\/SyncEffect.html#tuple9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "def"}, {"label" : "map9", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8])(f: (A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map9", "link" : "cats\/effect\/SyncEffect.html#map9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8])(f:(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap9", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7, A8) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7], f8: F[A8]): F[Z]", "member" : "cats.ApplyArityFunctions.ap9", "link" : "cats\/effect\/SyncEffect.html#ap9[A0,A1,A2,A3,A4,A5,A6,A7,A8,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7,A8)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7],f8:F[A8]):F[Z]", "kind" : "def"}, {"label" : "tuple8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[(A0, A1, A2, A3, A4, A5, A6, A7)]", "member" : "cats.ApplyArityFunctions.tuple8", "link" : "cats\/effect\/SyncEffect.html#tuple8[A0,A1,A2,A3,A4,A5,A6,A7,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[(A0,A1,A2,A3,A4,A5,A6,A7)]", "kind" : "def"}, {"label" : "map8", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7])(f: (A0, A1, A2, A3, A4, A5, A6, A7) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map8", "link" : "cats\/effect\/SyncEffect.html#map8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7])(f:(A0,A1,A2,A3,A4,A5,A6,A7)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap8", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6, A7) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6], f7: F[A7]): F[Z]", "member" : "cats.ApplyArityFunctions.ap8", "link" : "cats\/effect\/SyncEffect.html#ap8[A0,A1,A2,A3,A4,A5,A6,A7,Z](f:F[(A0,A1,A2,A3,A4,A5,A6,A7)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6],f7:F[A7]):F[Z]", "kind" : "def"}, {"label" : "tuple7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[(A0, A1, A2, A3, A4, A5, A6)]", "member" : "cats.ApplyArityFunctions.tuple7", "link" : "cats\/effect\/SyncEffect.html#tuple7[A0,A1,A2,A3,A4,A5,A6,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[(A0,A1,A2,A3,A4,A5,A6)]", "kind" : "def"}, {"label" : "map7", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6])(f: (A0, A1, A2, A3, A4, A5, A6) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map7", "link" : "cats\/effect\/SyncEffect.html#map7[A0,A1,A2,A3,A4,A5,A6,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6])(f:(A0,A1,A2,A3,A4,A5,A6)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap7", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5, A6) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5], f6: F[A6]): F[Z]", "member" : "cats.ApplyArityFunctions.ap7", "link" : "cats\/effect\/SyncEffect.html#ap7[A0,A1,A2,A3,A4,A5,A6,Z](f:F[(A0,A1,A2,A3,A4,A5,A6)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5],f6:F[A6]):F[Z]", "kind" : "def"}, {"label" : "tuple6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[(A0, A1, A2, A3, A4, A5)]", "member" : "cats.ApplyArityFunctions.tuple6", "link" : "cats\/effect\/SyncEffect.html#tuple6[A0,A1,A2,A3,A4,A5,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[(A0,A1,A2,A3,A4,A5)]", "kind" : "def"}, {"label" : "map6", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5])(f: (A0, A1, A2, A3, A4, A5) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map6", "link" : "cats\/effect\/SyncEffect.html#map6[A0,A1,A2,A3,A4,A5,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5])(f:(A0,A1,A2,A3,A4,A5)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap6", "tail" : "(f: F[(A0, A1, A2, A3, A4, A5) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4], f5: F[A5]): F[Z]", "member" : "cats.ApplyArityFunctions.ap6", "link" : "cats\/effect\/SyncEffect.html#ap6[A0,A1,A2,A3,A4,A5,Z](f:F[(A0,A1,A2,A3,A4,A5)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4],f5:F[A5]):F[Z]", "kind" : "def"}, {"label" : "tuple5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[(A0, A1, A2, A3, A4)]", "member" : "cats.ApplyArityFunctions.tuple5", "link" : "cats\/effect\/SyncEffect.html#tuple5[A0,A1,A2,A3,A4,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[(A0,A1,A2,A3,A4)]", "kind" : "def"}, {"label" : "map5", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4])(f: (A0, A1, A2, A3, A4) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map5", "link" : "cats\/effect\/SyncEffect.html#map5[A0,A1,A2,A3,A4,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4])(f:(A0,A1,A2,A3,A4)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap5", "tail" : "(f: F[(A0, A1, A2, A3, A4) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3], f4: F[A4]): F[Z]", "member" : "cats.ApplyArityFunctions.ap5", "link" : "cats\/effect\/SyncEffect.html#ap5[A0,A1,A2,A3,A4,Z](f:F[(A0,A1,A2,A3,A4)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3],f4:F[A4]):F[Z]", "kind" : "def"}, {"label" : "tuple4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[(A0, A1, A2, A3)]", "member" : "cats.ApplyArityFunctions.tuple4", "link" : "cats\/effect\/SyncEffect.html#tuple4[A0,A1,A2,A3,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[(A0,A1,A2,A3)]", "kind" : "def"}, {"label" : "map4", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3])(f: (A0, A1, A2, A3) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map4", "link" : "cats\/effect\/SyncEffect.html#map4[A0,A1,A2,A3,Z](f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3])(f:(A0,A1,A2,A3)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap4", "tail" : "(f: F[(A0, A1, A2, A3) => Z])(f0: F[A0], f1: F[A1], f2: F[A2], f3: F[A3]): F[Z]", "member" : "cats.ApplyArityFunctions.ap4", "link" : "cats\/effect\/SyncEffect.html#ap4[A0,A1,A2,A3,Z](f:F[(A0,A1,A2,A3)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2],f3:F[A3]):F[Z]", "kind" : "def"}, {"label" : "tuple3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2]): F[(A0, A1, A2)]", "member" : "cats.ApplyArityFunctions.tuple3", "link" : "cats\/effect\/SyncEffect.html#tuple3[A0,A1,A2,Z<:<?>](f0:F[A0],f1:F[A1],f2:F[A2]):F[(A0,A1,A2)]", "kind" : "def"}, {"label" : "map3", "tail" : "(f0: F[A0], f1: F[A1], f2: F[A2])(f: (A0, A1, A2) => Z): F[Z]", "member" : "cats.ApplyArityFunctions.map3", "link" : "cats\/effect\/SyncEffect.html#map3[A0,A1,A2,Z](f0:F[A0],f1:F[A1],f2:F[A2])(f:(A0,A1,A2)=>Z):F[Z]", "kind" : "def"}, {"label" : "ap3", "tail" : "(f: F[(A0, A1, A2) => Z])(f0: F[A0], f1: F[A1], f2: F[A2]): F[Z]", "member" : "cats.ApplyArityFunctions.ap3", "link" : "cats\/effect\/SyncEffect.html#ap3[A0,A1,A2,Z](f:F[(A0,A1,A2)=>Z])(f0:F[A0],f1:F[A1],f2:F[A2]):F[Z]", "kind" : "def"}, {"label" : "tuple2", "tail" : "(f1: F[A], f2: F[B]): F[(A, B)]", "member" : "cats.ApplyArityFunctions.tuple2", "link" : "cats\/effect\/SyncEffect.html#tuple2[A,B](f1:F[A],f2:F[B]):F[(A,B)]", "kind" : "def"}, {"label" : "composeApply", "tail" : "(arg0: Apply[G]): InvariantSemigroupal[[α]F[G[α]]]", "member" : "cats.InvariantSemigroupal.composeApply", "link" : "cats\/effect\/SyncEffect.html#composeApply[G[_<:<?>]](implicitevidence$1:cats.Apply[G]):cats.InvariantSemigroupal[[α]F[G[α]]]", "kind" : "def"}, {"label" : "composeContravariant", "tail" : "(arg0: Contravariant[G]): Contravariant[[α]F[G[α]]]", "member" : "cats.Functor.composeContravariant", "link" : "cats\/effect\/SyncEffect.html#composeContravariant[G[_]](implicitevidence$2:cats.Contravariant[G]):cats.Contravariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Functor[G]): Functor[[α]F[G[α]]]", "member" : "cats.Functor.compose", "link" : "cats\/effect\/SyncEffect.html#compose[G[_]](implicitevidence$1:cats.Functor[G]):cats.Functor[[α]F[G[α]]]", "kind" : "def"}, {"label" : "ifF", "tail" : "(fb: F[Boolean])(ifTrue: => A, ifFalse: => A): F[A]", "member" : "cats.Functor.ifF", "link" : "cats\/effect\/SyncEffect.html#ifF[A](fb:F[Boolean])(ifTrue:=>A,ifFalse:=>A):F[A]", "kind" : "def"}, {"label" : "unzip", "tail" : "(fab: F[(A, B)]): (F[A], F[B])", "member" : "cats.Functor.unzip", "link" : "cats\/effect\/SyncEffect.html#unzip[A,B](fab:F[(A,B)]):(F[A],F[B])", "kind" : "def"}, {"label" : "tupleRight", "tail" : "(fa: F[A], b: B): F[(A, B)]", "member" : "cats.Functor.tupleRight", "link" : "cats\/effect\/SyncEffect.html#tupleRight[A,B](fa:F[A],b:B):F[(A,B)]", "kind" : "def"}, {"label" : "tupleLeft", "tail" : "(fa: F[A], b: B): F[(B, A)]", "member" : "cats.Functor.tupleLeft", "link" : "cats\/effect\/SyncEffect.html#tupleLeft[A,B](fa:F[A],b:B):F[(B,A)]", "kind" : "def"}, {"label" : "as", "tail" : "(fa: F[A], b: B): F[B]", "member" : "cats.Functor.as", "link" : "cats\/effect\/SyncEffect.html#as[A,B](fa:F[A],b:B):F[B]", "kind" : "def"}, {"label" : "fproductLeft", "tail" : "(fa: F[A])(f: (A) => B): F[(B, A)]", "member" : "cats.Functor.fproductLeft", "link" : "cats\/effect\/SyncEffect.html#fproductLeft[A,B](fa:F[A])(f:A=>B):F[(B,A)]", "kind" : "def"}, {"label" : "fproduct", "tail" : "(fa: F[A])(f: (A) => B): F[(A, B)]", "member" : "cats.Functor.fproduct", "link" : "cats\/effect\/SyncEffect.html#fproduct[A,B](fa:F[A])(f:A=>B):F[(A,B)]", "kind" : "def"}, {"label" : "void", "tail" : "(fa: F[A]): F[Unit]", "member" : "cats.Functor.void", "link" : "cats\/effect\/SyncEffect.html#void[A](fa:F[A]):F[Unit]", "kind" : "def"}, {"label" : "lift", "tail" : "(f: (A) => B): (F[A]) => F[B]", "member" : "cats.Functor.lift", "link" : "cats\/effect\/SyncEffect.html#lift[A,B](f:A=>B):F[A]=>F[B]", "kind" : "def"}, {"label" : "widen", "tail" : "(fa: F[A]): F[B]", "member" : "cats.Functor.widen", "link" : "cats\/effect\/SyncEffect.html#widen[A,B>:A](fa:F[A]):F[B]", "kind" : "def"}, {"label" : "fmap", "tail" : "(fa: F[A])(f: (A) => B): F[B]", "member" : "cats.Functor.fmap", "link" : "cats\/effect\/SyncEffect.html#fmap[A,B](fa:F[A])(f:A=>B):F[B]", "kind" : "final def"}, {"label" : "imap", "tail" : "(fa: F[A])(f: (A) => B)(g: (B) => A): F[B]", "member" : "cats.Functor.imap", "link" : "cats\/effect\/SyncEffect.html#imap[A,B](fa:F[A])(f:A=>B)(g:B=>A):F[B]", "kind" : "def"}, {"label" : "composeFunctor", "tail" : "(arg0: Functor[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.composeFunctor", "link" : "cats\/effect\/SyncEffect.html#composeFunctor[G[_<:<?>]](implicitevidence$2:cats.Functor[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "compose", "tail" : "(arg0: Invariant[G]): Invariant[[α]F[G[α]]]", "member" : "cats.Invariant.compose", "link" : "cats\/effect\/SyncEffect.html#compose[G[_]](implicitevidence$1:cats.Invariant[G]):cats.Invariant[[α]F[G[α]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/SyncEffect.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/SyncEffect.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/SyncEffect.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/SyncEffect.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/SyncEffect.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/SyncEffect.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/SyncEffect.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncEffect.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncEffect.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncEffect.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/SyncEffect.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/SyncEffect.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/SyncEffect.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/SyncEffect.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/SyncEffect.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/SyncEffect.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/SyncEffect.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/SyncEffect.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/SyncEffect.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "runSync", "tail" : "(fa: F[A])(G: Sync[G]): G[A]", "member" : "cats.effect.SyncEffect.runSync", "link" : "cats\/effect\/SyncEffect.html#runSync[G[_],A](fa:F[A])(implicitG:cats.effect.Sync[G]):G[A]", "kind" : "abstract def"}, {"label" : "suspend", "tail" : "(thunk: => F[A]): F[A]", "member" : "cats.effect.Sync.suspend", "link" : "cats\/effect\/SyncEffect.html#suspend[A](thunk:=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "bracketCase", "tail" : "(acquire: F[A])(use: (A) => F[B])(release: (A, ExitCase[Throwable]) => F[Unit]): F[B]", "member" : "cats.effect.Bracket.bracketCase", "link" : "cats\/effect\/SyncEffect.html#bracketCase[A,B](acquire:F[A])(use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit]):F[B]", "kind" : "abstract def"}, {"label" : "tailRecM", "tail" : "(a: A)(f: (A) => F[Either[A, B]]): F[B]", "member" : "cats.FlatMap.tailRecM", "link" : "cats\/effect\/SyncEffect.html#tailRecM[A,B](a:A)(f:A=>F[Either[A,B]]):F[B]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(fa: F[A])(f: (A) => F[B]): F[B]", "member" : "cats.FlatMap.flatMap", "link" : "cats\/effect\/SyncEffect.html#flatMap[A,B](fa:F[A])(f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "handleErrorWith", "tail" : "(fa: F[A])(f: (Throwable) => F[A]): F[A]", "member" : "cats.ApplicativeError.handleErrorWith", "link" : "cats\/effect\/SyncEffect.html#handleErrorWith[A](fa:F[A])(f:E=>F[A]):F[A]", "kind" : "abstract def"}, {"label" : "raiseError", "tail" : "(e: Throwable): F[A]", "member" : "cats.ApplicativeError.raiseError", "link" : "cats\/effect\/SyncEffect.html#raiseError[A](e:E):F[A]", "kind" : "abstract def"}, {"label" : "pure", "tail" : "(x: A): F[A]", "member" : "cats.Applicative.pure", "link" : "cats\/effect\/SyncEffect.html#pure[A](x:A):F[A]", "kind" : "abstract def"}], "shortDescription" : "A monad that can suspend side effects into the F context andthat supports only synchronous lazy evaluation of these effects."}, {"name" : "cats.effect.SyncIO", "shortDescription" : "A pure abstraction representing the intention to perform aside effect, where the result of that side effect is obtainedsynchronously.", "object" : "cats\/effect\/SyncIO$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "cats.effect.SyncIO.toString", "link" : "cats\/effect\/SyncIO.html#toString():String", "kind" : "def"}, {"label" : "redeemWith", "tail" : "(recover: (Throwable) => SyncIO[B], bind: (A) => SyncIO[B]): SyncIO[B]", "member" : "cats.effect.SyncIO.redeemWith", "link" : "cats\/effect\/SyncIO.html#redeemWith[B](recover:Throwable=>cats.effect.SyncIO[B],bind:A=>cats.effect.SyncIO[B]):cats.effect.SyncIO[B]", "kind" : "def"}, {"label" : "redeem", "tail" : "(recover: (Throwable) => B, map: (A) => B): SyncIO[B]", "member" : "cats.effect.SyncIO.redeem", "link" : "cats\/effect\/SyncIO.html#redeem[B](recover:Throwable=>B,map:A=>B):cats.effect.SyncIO[B]", "kind" : "def"}, {"label" : "handleErrorWith", "tail" : "(f: (Throwable) => SyncIO[AA]): SyncIO[AA]", "member" : "cats.effect.SyncIO.handleErrorWith", "link" : "cats\/effect\/SyncIO.html#handleErrorWith[AA>:A](f:Throwable=>cats.effect.SyncIO[AA]):cats.effect.SyncIO[AA]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(finalizer: (ExitCase[Throwable]) => SyncIO[Unit]): SyncIO[A]", "member" : "cats.effect.SyncIO.guaranteeCase", "link" : "cats\/effect\/SyncIO.html#guaranteeCase(finalizer:cats.effect.ExitCase[Throwable]=>cats.effect.SyncIO[Unit]):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(finalizer: SyncIO[Unit]): SyncIO[A]", "member" : "cats.effect.SyncIO.guarantee", "link" : "cats\/effect\/SyncIO.html#guarantee(finalizer:cats.effect.SyncIO[Unit]):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "bracketCase", "tail" : "(use: (A) => SyncIO[B])(release: (A, ExitCase[Throwable]) => SyncIO[Unit]): SyncIO[B]", "member" : "cats.effect.SyncIO.bracketCase", "link" : "cats\/effect\/SyncIO.html#bracketCase[B](use:A=>cats.effect.SyncIO[B])(release:(A,cats.effect.ExitCase[Throwable])=>cats.effect.SyncIO[Unit]):cats.effect.SyncIO[B]", "kind" : "def"}, {"label" : "bracket", "tail" : "(use: (A) => SyncIO[B])(release: (A) => SyncIO[Unit]): SyncIO[B]", "member" : "cats.effect.SyncIO.bracket", "link" : "cats\/effect\/SyncIO.html#bracket[B](use:A=>cats.effect.SyncIO[B])(release:A=>cats.effect.SyncIO[Unit]):cats.effect.SyncIO[B]", "kind" : "def"}, {"label" : "to", "tail" : "(F: LiftIO[F]): F[A]", "member" : "cats.effect.SyncIO.to", "link" : "cats\/effect\/SyncIO.html#to[F[_]](implicitF:cats.effect.LiftIO[F]):F[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "attempt", "tail" : "(): SyncIO[Either[Throwable, A]]", "member" : "cats.effect.SyncIO.attempt", "link" : "cats\/effect\/SyncIO.html#attempt:cats.effect.SyncIO[Either[Throwable,A]]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (A) => SyncIO[B]): SyncIO[B]", "member" : "cats.effect.SyncIO.flatMap", "link" : "cats\/effect\/SyncIO.html#flatMap[B](f:A=>cats.effect.SyncIO[B]):cats.effect.SyncIO[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): SyncIO[B]", "member" : "cats.effect.SyncIO.map", "link" : "cats\/effect\/SyncIO.html#map[B](f:A=>B):cats.effect.SyncIO[B]", "kind" : "def"}, {"label" : "unsafeRunSync", "tail" : "(): A", "member" : "cats.effect.SyncIO.unsafeRunSync", "link" : "cats\/effect\/SyncIO.html#unsafeRunSync():A", "kind" : "def"}, {"label" : "toIO", "tail" : "(): IO[A]", "member" : "cats.effect.SyncIO.toIO", "link" : "cats\/effect\/SyncIO.html#toIO:cats.effect.IO[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/SyncIO.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/SyncIO.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/SyncIO.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/SyncIO.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/SyncIO.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/SyncIO.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/SyncIO.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncIO.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncIO.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncIO.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/SyncIO.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/SyncIO.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/SyncIO.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/SyncIO.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/SyncIO.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/SyncIO.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/SyncIO.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/SyncIO.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromEither", "tail" : "(e: Either[Throwable, A]): SyncIO[A]", "member" : "cats.effect.SyncIO.fromEither", "link" : "cats\/effect\/SyncIO$.html#fromEither[A](e:Either[Throwable,A]):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "raiseError", "tail" : "(e: Throwable): SyncIO[A]", "member" : "cats.effect.SyncIO.raiseError", "link" : "cats\/effect\/SyncIO$.html#raiseError[A](e:Throwable):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "eval", "tail" : "(fa: Eval[A]): SyncIO[A]", "member" : "cats.effect.SyncIO.eval", "link" : "cats\/effect\/SyncIO$.html#eval[A](fa:cats.Eval[A]):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "unit", "tail" : ": SyncIO[Unit]", "member" : "cats.effect.SyncIO.unit", "link" : "cats\/effect\/SyncIO$.html#unit:cats.effect.SyncIO[Unit]", "kind" : "val"}, {"label" : "pure", "tail" : "(a: A): SyncIO[A]", "member" : "cats.effect.SyncIO.pure", "link" : "cats\/effect\/SyncIO$.html#pure[A](a:A):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "suspend", "tail" : "(thunk: => SyncIO[A]): SyncIO[A]", "member" : "cats.effect.SyncIO.suspend", "link" : "cats\/effect\/SyncIO$.html#suspend[A](thunk:=>cats.effect.SyncIO[A]):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(thunk: => A): SyncIO[A]", "member" : "cats.effect.SyncIO.apply", "link" : "cats\/effect\/SyncIO$.html#apply[A](thunk:=>A):cats.effect.SyncIO[A]", "kind" : "def"}, {"label" : "syncIoSemigroupK", "tail" : ": SemigroupK[SyncIO]", "member" : "cats.effect.SyncIOInstances.syncIoSemigroupK", "link" : "cats\/effect\/SyncIO$.html#syncIoSemigroupK:cats.SemigroupK[cats.effect.SyncIO]", "kind" : "implicit val"}, {"label" : "syncIoMonoid", "tail" : "(arg0: Monoid[A]): Monoid[SyncIO[A]]", "member" : "cats.effect.SyncIOInstances.syncIoMonoid", "link" : "cats\/effect\/SyncIO$.html#syncIoMonoid[A](implicitevidence$1:cats.Monoid[A]):cats.Monoid[cats.effect.SyncIO[A]]", "kind" : "implicit def"}, {"label" : "syncIoSync", "tail" : ": Sync[SyncIO]", "member" : "cats.effect.SyncIOInstances.syncIoSync", "link" : "cats\/effect\/SyncIO$.html#syncIoSync:cats.effect.Sync[cats.effect.SyncIO]", "kind" : "val"}, {"label" : "syncIOalign", "tail" : ": Align[SyncIO]", "member" : "cats.effect.SyncIOInstances.syncIOalign", "link" : "cats\/effect\/SyncIO$.html#syncIOalign:cats.Align[cats.effect.SyncIO]", "kind" : "implicit val"}, {"label" : "syncIOsyncEffect", "tail" : ": SyncEffect[SyncIO]", "member" : "cats.effect.SyncIOInstances.syncIOsyncEffect", "link" : "cats\/effect\/SyncIO$.html#syncIOsyncEffect:cats.effect.SyncEffect[cats.effect.SyncIO]", "kind" : "implicit val"}, {"label" : "syncIoSemigroup", "tail" : "(arg0: Semigroup[A]): Semigroup[SyncIO[A]]", "member" : "cats.effect.SyncIOLowPriorityInstances.syncIoSemigroup", "link" : "cats\/effect\/SyncIO$.html#syncIoSemigroup[A](implicitevidence$3:cats.Semigroup[A]):cats.Semigroup[cats.effect.SyncIO[A]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/SyncIO$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/SyncIO$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/SyncIO$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/SyncIO$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/SyncIO$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/SyncIO$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/SyncIO$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncIO$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncIO$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/SyncIO$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/SyncIO$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/SyncIO$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/SyncIO$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/SyncIO$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/SyncIO$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/SyncIO$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/SyncIO$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/SyncIO$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/SyncIO$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/SyncIO.html", "kind" : "class"}, {"name" : "cats.effect.Timer", "object" : "cats\/effect\/Timer$.html", "members_object" : [{"label" : "TimerOps", "tail" : "", "member" : "cats.effect.Timer.TimerOps", "link" : "cats\/effect\/Timer$.html#TimerOps[F[_]]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "deriveResource", "tail" : "(F: Applicative[F], timer: Timer[F]): Timer[[β$18$]Resource[F, β$18$]]", "member" : "cats.effect.Timer.deriveResource", "link" : "cats\/effect\/Timer$.html#deriveResource[F[_]](implicitF:cats.Applicative[F],implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[β$18$]cats.effect.Resource[F,β$18$]]", "kind" : "implicit def"}, {"label" : "deriveIorT", "tail" : "(F: Applicative[F], timer: Timer[F]): Timer[[γ$15$]IorT[F, L, γ$15$]]", "member" : "cats.effect.Timer.deriveIorT", "link" : "cats\/effect\/Timer$.html#deriveIorT[F[_],L](implicitF:cats.Applicative[F],implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[γ$15$]cats.data.IorT[F,L,γ$15$]]", "kind" : "implicit def"}, {"label" : "deriveKleisli", "tail" : "(timer: Timer[F]): Timer[[γ$12$]Kleisli[F, R, γ$12$]]", "member" : "cats.effect.Timer.deriveKleisli", "link" : "cats\/effect\/Timer$.html#deriveKleisli[F[_],R](implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[γ$12$]cats.data.Kleisli[F,R,γ$12$]]", "kind" : "implicit def"}, {"label" : "deriveStateT", "tail" : "(F: Applicative[F], timer: Timer[F]): Timer[[γ$9$]IndexedStateT[F, S, S, γ$9$]]", "member" : "cats.effect.Timer.deriveStateT", "link" : "cats\/effect\/Timer$.html#deriveStateT[F[_],S](implicitF:cats.Applicative[F],implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[γ$9$]cats.data.IndexedStateT[F,S,S,γ$9$]]", "kind" : "implicit def"}, {"label" : "deriveWriterT", "tail" : "(F: Applicative[F], L: Monoid[L], timer: Timer[F]): Timer[[γ$6$]WriterT[F, L, γ$6$]]", "member" : "cats.effect.Timer.deriveWriterT", "link" : "cats\/effect\/Timer$.html#deriveWriterT[F[_],L](implicitF:cats.Applicative[F],implicitL:cats.Monoid[L],implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[γ$6$]cats.data.WriterT[F,L,γ$6$]]", "kind" : "implicit def"}, {"label" : "deriveOptionT", "tail" : "(F: Functor[F], timer: Timer[F]): Timer[[β$3$]OptionT[F, β$3$]]", "member" : "cats.effect.Timer.deriveOptionT", "link" : "cats\/effect\/Timer$.html#deriveOptionT[F[_]](implicitF:cats.Functor[F],implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[β$3$]cats.data.OptionT[F,β$3$]]", "kind" : "implicit def"}, {"label" : "deriveEitherT", "tail" : "(F: Functor[F], timer: Timer[F]): Timer[[γ$0$]EitherT[F, L, γ$0$]]", "member" : "cats.effect.Timer.deriveEitherT", "link" : "cats\/effect\/Timer$.html#deriveEitherT[F[_],L](implicitF:cats.Functor[F],implicittimer:cats.effect.Timer[F]):cats.effect.Timer[[γ$0$]cats.data.EitherT[F,L,γ$0$]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(ev: Timer[F]): Timer[F]", "member" : "cats.effect.Timer.apply", "link" : "cats\/effect\/Timer$.html#apply[F[_]](implicitev:cats.effect.Timer[F]):cats.effect.Timer[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Timer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Timer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Timer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Timer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Timer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Timer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Timer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Timer$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Timer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Timer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Timer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Timer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Timer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Timer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Timer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Timer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Timer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Timer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Timer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/Timer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/Timer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/Timer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/Timer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/Timer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/Timer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/Timer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/Timer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Timer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Timer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/Timer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/Timer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/Timer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/Timer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/Timer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/Timer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/Timer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/Timer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/Timer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/Timer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sleep", "tail" : "(duration: FiniteDuration): F[Unit]", "member" : "cats.effect.Timer.sleep", "link" : "cats\/effect\/Timer.html#sleep(duration:scala.concurrent.duration.FiniteDuration):F[Unit]", "kind" : "abstract def"}, {"label" : "clock", "tail" : "(): Clock[F]", "member" : "cats.effect.Timer.clock", "link" : "cats\/effect\/Timer.html#clock:cats.effect.Clock[F]", "kind" : "abstract def"}], "shortDescription" : "Timer is a scheduler of tasks."}], "cats.effect.syntax" : [{"name" : "cats.effect.syntax.all", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$all$.html", "members_object" : [{"label" : "toSyncEffectOps", "tail" : "(target: F[A])(tc: SyncEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.SyncEffect[F] }", "member" : "cats.effect.SyncEffect.ToSyncEffectOps.toSyncEffectOps", "link" : "cats\/effect\/syntax\/package$$all$.html#toSyncEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.SyncEffect[F]):cats.effect.SyncEffect.Ops[F,A]{typeTypeClassType=cats.effect.SyncEffect[F]}", "kind" : "implicit def"}, {"label" : "catsSyntaxParallelSequenceNConcurrent", "tail" : "(tma: T[M[A]])(arg0: Traverse[T], arg1: Monad[M]): ParallelSequenceNConcurrentOps[T, M, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelSequenceNConcurrent", "link" : "cats\/effect\/syntax\/package$$all$.html#catsSyntaxParallelSequenceNConcurrent[T[_],M[_],A](tma:T[M[A]])(implicitevidence$2:cats.Traverse[T],implicitevidence$3:cats.Monad[M]):cats.effect.syntax.ParallelSequenceNConcurrentOps[T,M,A]", "kind" : "implicit final def"}, {"label" : "catsSyntaxParallelTraverseNConcurrent", "tail" : "(ta: T[A])(arg0: Traverse[T]): ParallelTraversableNConcurrentOps[T, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelTraverseNConcurrent", "link" : "cats\/effect\/syntax\/package$$all$.html#catsSyntaxParallelTraverseNConcurrent[T[_],A](ta:T[A])(implicitevidence$1:cats.Traverse[T]):cats.effect.syntax.ParallelTraversableNConcurrentOps[T,A]", "kind" : "implicit final def"}, {"label" : "toConcurrentEffectOps", "tail" : "(target: F[A])(tc: ConcurrentEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.ConcurrentEffect[F] }", "member" : "cats.effect.ConcurrentEffect.ToConcurrentEffectOps.toConcurrentEffectOps", "link" : "cats\/effect\/syntax\/package$$all$.html#toConcurrentEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.ConcurrentEffect[F]):cats.effect.ConcurrentEffect.Ops[F,A]{typeTypeClassType=cats.effect.ConcurrentEffect[F]}", "kind" : "implicit def"}, {"label" : "toEffectOps", "tail" : "(target: F[A])(tc: Effect[F]): Ops[F, A] { type TypeClassType = cats.effect.Effect[F] }", "member" : "cats.effect.Effect.ToEffectOps.toEffectOps", "link" : "cats\/effect\/syntax\/package$$all$.html#toEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.Effect[F]):cats.effect.Effect.Ops[F,A]{typeTypeClassType=cats.effect.Effect[F]}", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxConcurrentObj", "tail" : "(F: Concurrent[F]): ConcurrentObjOps[F]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrentObj", "link" : "cats\/effect\/syntax\/package$$all$.html#catsEffectSyntaxConcurrentObj[F[_]](F:cats.effect.Concurrent[F]):cats.effect.syntax.ConcurrentObjOps[F]", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxConcurrent", "tail" : "(fa: F[A]): ConcurrentOps[F, A]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrent", "link" : "cats\/effect\/syntax\/package$$all$.html#catsEffectSyntaxConcurrent[F[_],A](fa:F[A]):cats.effect.syntax.ConcurrentOps[F,A]", "kind" : "implicit def"}, {"label" : "toConcurrentOps", "tail" : "(target: F[A])(tc: Concurrent[F]): Ops[F, A] { type TypeClassType = cats.effect.Concurrent[F] }", "member" : "cats.effect.Concurrent.ToConcurrentOps.toConcurrentOps", "link" : "cats\/effect\/syntax\/package$$all$.html#toConcurrentOps[F[_],A](target:F[A])(implicittc:cats.effect.Concurrent[F]):cats.effect.Concurrent.Ops[F,A]{typeTypeClassType=cats.effect.Concurrent[F]}", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxAsyncObj", "tail" : "(F: Async[F]): AsyncObjOps[F]", "member" : "cats.effect.syntax.AsyncSyntax.catsEffectSyntaxAsyncObj", "link" : "cats\/effect\/syntax\/package$$all$.html#catsEffectSyntaxAsyncObj[F[_]](F:cats.effect.Async[F]):cats.effect.syntax.AsyncObjOps[F]", "kind" : "implicit def"}, {"label" : "toAsyncOps", "tail" : "(target: F[A])(tc: Async[F]): Ops[F, A] { type TypeClassType = cats.effect.Async[F] }", "member" : "cats.effect.Async.ToAsyncOps.toAsyncOps", "link" : "cats\/effect\/syntax\/package$$all$.html#toAsyncOps[F[_],A](target:F[A])(implicittc:cats.effect.Async[F]):cats.effect.Async.Ops[F,A]{typeTypeClassType=cats.effect.Async[F]}", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxBracket", "tail" : "(fa: F[A])(bracket: Bracket[F, E]): BracketOps[F, E, A]", "member" : "cats.effect.syntax.BracketSyntax.catsEffectSyntaxBracket", "link" : "cats\/effect\/syntax\/package$$all$.html#catsEffectSyntaxBracket[F[_],A,E](fa:F[A])(implicitbracket:cats.effect.Bracket[F,E]):cats.effect.syntax.BracketOps[F,E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$all$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$all$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$all$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$all$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$all$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$all$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$all$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$all$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$all$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$all$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$all$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$all$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$all$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$all$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$all$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$all$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$all$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$all$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$all$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.AllCatsEffectSyntax", "trait" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toSyncEffectOps", "tail" : "(target: F[A])(tc: SyncEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.SyncEffect[F] }", "member" : "cats.effect.SyncEffect.ToSyncEffectOps.toSyncEffectOps", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#toSyncEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.SyncEffect[F]):cats.effect.SyncEffect.Ops[F,A]{typeTypeClassType=cats.effect.SyncEffect[F]}", "kind" : "implicit def"}, {"label" : "catsSyntaxParallelSequenceNConcurrent", "tail" : "(tma: T[M[A]])(arg0: Traverse[T], arg1: Monad[M]): ParallelSequenceNConcurrentOps[T, M, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelSequenceNConcurrent", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#catsSyntaxParallelSequenceNConcurrent[T[_],M[_],A](tma:T[M[A]])(implicitevidence$2:cats.Traverse[T],implicitevidence$3:cats.Monad[M]):cats.effect.syntax.ParallelSequenceNConcurrentOps[T,M,A]", "kind" : "implicit final def"}, {"label" : "catsSyntaxParallelTraverseNConcurrent", "tail" : "(ta: T[A])(arg0: Traverse[T]): ParallelTraversableNConcurrentOps[T, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelTraverseNConcurrent", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#catsSyntaxParallelTraverseNConcurrent[T[_],A](ta:T[A])(implicitevidence$1:cats.Traverse[T]):cats.effect.syntax.ParallelTraversableNConcurrentOps[T,A]", "kind" : "implicit final def"}, {"label" : "toConcurrentEffectOps", "tail" : "(target: F[A])(tc: ConcurrentEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.ConcurrentEffect[F] }", "member" : "cats.effect.ConcurrentEffect.ToConcurrentEffectOps.toConcurrentEffectOps", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#toConcurrentEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.ConcurrentEffect[F]):cats.effect.ConcurrentEffect.Ops[F,A]{typeTypeClassType=cats.effect.ConcurrentEffect[F]}", "kind" : "implicit def"}, {"label" : "toEffectOps", "tail" : "(target: F[A])(tc: Effect[F]): Ops[F, A] { type TypeClassType = cats.effect.Effect[F] }", "member" : "cats.effect.Effect.ToEffectOps.toEffectOps", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#toEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.Effect[F]):cats.effect.Effect.Ops[F,A]{typeTypeClassType=cats.effect.Effect[F]}", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxConcurrentObj", "tail" : "(F: Concurrent[F]): ConcurrentObjOps[F]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrentObj", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#catsEffectSyntaxConcurrentObj[F[_]](F:cats.effect.Concurrent[F]):cats.effect.syntax.ConcurrentObjOps[F]", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxConcurrent", "tail" : "(fa: F[A]): ConcurrentOps[F, A]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrent", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#catsEffectSyntaxConcurrent[F[_],A](fa:F[A]):cats.effect.syntax.ConcurrentOps[F,A]", "kind" : "implicit def"}, {"label" : "toConcurrentOps", "tail" : "(target: F[A])(tc: Concurrent[F]): Ops[F, A] { type TypeClassType = cats.effect.Concurrent[F] }", "member" : "cats.effect.Concurrent.ToConcurrentOps.toConcurrentOps", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#toConcurrentOps[F[_],A](target:F[A])(implicittc:cats.effect.Concurrent[F]):cats.effect.Concurrent.Ops[F,A]{typeTypeClassType=cats.effect.Concurrent[F]}", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxAsyncObj", "tail" : "(F: Async[F]): AsyncObjOps[F]", "member" : "cats.effect.syntax.AsyncSyntax.catsEffectSyntaxAsyncObj", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#catsEffectSyntaxAsyncObj[F[_]](F:cats.effect.Async[F]):cats.effect.syntax.AsyncObjOps[F]", "kind" : "implicit def"}, {"label" : "toAsyncOps", "tail" : "(target: F[A])(tc: Async[F]): Ops[F, A] { type TypeClassType = cats.effect.Async[F] }", "member" : "cats.effect.Async.ToAsyncOps.toAsyncOps", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#toAsyncOps[F[_],A](target:F[A])(implicittc:cats.effect.Async[F]):cats.effect.Async.Ops[F,A]{typeTypeClassType=cats.effect.Async[F]}", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxBracket", "tail" : "(fa: F[A])(bracket: Bracket[F, E]): BracketOps[F, E, A]", "member" : "cats.effect.syntax.BracketSyntax.catsEffectSyntaxBracket", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#catsEffectSyntaxBracket[F[_],A,E](fa:F[A])(implicitbracket:cats.effect.Bracket[F,E]):cats.effect.syntax.BracketOps[F,E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/AllCatsEffectSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.async", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$async$.html", "members_object" : [{"label" : "catsEffectSyntaxAsyncObj", "tail" : "(F: Async[F]): AsyncObjOps[F]", "member" : "cats.effect.syntax.AsyncSyntax.catsEffectSyntaxAsyncObj", "link" : "cats\/effect\/syntax\/package$$async$.html#catsEffectSyntaxAsyncObj[F[_]](F:cats.effect.Async[F]):cats.effect.syntax.AsyncObjOps[F]", "kind" : "implicit def"}, {"label" : "toAsyncOps", "tail" : "(target: F[A])(tc: Async[F]): Ops[F, A] { type TypeClassType = cats.effect.Async[F] }", "member" : "cats.effect.Async.ToAsyncOps.toAsyncOps", "link" : "cats\/effect\/syntax\/package$$async$.html#toAsyncOps[F[_],A](target:F[A])(implicittc:cats.effect.Async[F]):cats.effect.Async.Ops[F,A]{typeTypeClassType=cats.effect.Async[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$async$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$async$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$async$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$async$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$async$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$async$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$async$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$async$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$async$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$async$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$async$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$async$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$async$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$async$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$async$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$async$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$async$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$async$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$async$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.AsyncObjOps", "shortDescription" : "", "members_class" : [{"label" : "parSequenceN", "tail" : "(n: Long)(tma: T[F[A]])(T: Traverse[T], P: Parallel[F]): F[T[A]]", "member" : "cats.effect.syntax.AsyncObjOps.parSequenceN", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#parSequenceN[T[_],A](n:Long)(tma:T[F[A]])(implicitT:cats.Traverse[T],implicitP:cats.Parallel[F]):F[T[A]]", "kind" : "def"}, {"label" : "parTraverseN", "tail" : "(n: Long)(ta: T[A])(f: (A) => F[B])(T: Traverse[T], P: Parallel[F]): F[T[B]]", "member" : "cats.effect.syntax.AsyncObjOps.parTraverseN", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#parTraverseN[T[_],A,B](n:Long)(ta:T[A])(f:A=>F[B])(implicitT:cats.Traverse[T],implicitP:cats.Parallel[F]):F[T[B]]", "kind" : "def"}, {"member" : "cats.effect.syntax.AsyncObjOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/syntax\/AsyncObjOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/syntax\/AsyncObjOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/effect\/syntax\/AsyncObjOps.html", "kind" : "class"}, {"name" : "cats.effect.syntax.AsyncSyntax", "trait" : "cats\/effect\/syntax\/AsyncSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "catsEffectSyntaxAsyncObj", "tail" : "(F: Async[F]): AsyncObjOps[F]", "member" : "cats.effect.syntax.AsyncSyntax.catsEffectSyntaxAsyncObj", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#catsEffectSyntaxAsyncObj[F[_]](F:cats.effect.Async[F]):cats.effect.syntax.AsyncObjOps[F]", "kind" : "implicit def"}, {"label" : "toAsyncOps", "tail" : "(target: F[A])(tc: Async[F]): Ops[F, A] { type TypeClassType = cats.effect.Async[F] }", "member" : "cats.effect.Async.ToAsyncOps.toAsyncOps", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#toAsyncOps[F[_],A](target:F[A])(implicittc:cats.effect.Async[F]):cats.effect.Async.Ops[F,A]{typeTypeClassType=cats.effect.Async[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/AsyncSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/AsyncSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.bracket", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$bracket$.html", "members_object" : [{"label" : "catsEffectSyntaxBracket", "tail" : "(fa: F[A])(bracket: Bracket[F, E]): BracketOps[F, E, A]", "member" : "cats.effect.syntax.BracketSyntax.catsEffectSyntaxBracket", "link" : "cats\/effect\/syntax\/package$$bracket$.html#catsEffectSyntaxBracket[F[_],A,E](fa:F[A])(implicitbracket:cats.effect.Bracket[F,E]):cats.effect.syntax.BracketOps[F,E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$bracket$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$bracket$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$bracket$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$bracket$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$bracket$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$bracket$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$bracket$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$bracket$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$bracket$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$bracket$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$bracket$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$bracket$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$bracket$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$bracket$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$bracket$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$bracket$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$bracket$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$bracket$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$bracket$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.BracketOps", "shortDescription" : "", "members_class" : [{"label" : "onCancel", "tail" : "(finalizer: F[Unit])(F: Bracket[F, E]): F[A]", "member" : "cats.effect.syntax.BracketOps.onCancel", "link" : "cats\/effect\/syntax\/BracketOps.html#onCancel(finalizer:F[Unit])(implicitF:cats.effect.Bracket[F,E]):F[A]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(F: Bracket[F, E]): F[A]", "member" : "cats.effect.syntax.BracketOps.uncancelable", "link" : "cats\/effect\/syntax\/BracketOps.html#uncancelable(implicitF:cats.effect.Bracket[F,E]):F[A]", "kind" : "def"}, {"label" : "guaranteeCase", "tail" : "(finalizer: (ExitCase[E]) => F[Unit])(F: Bracket[F, E]): F[A]", "member" : "cats.effect.syntax.BracketOps.guaranteeCase", "link" : "cats\/effect\/syntax\/BracketOps.html#guaranteeCase(finalizer:cats.effect.ExitCase[E]=>F[Unit])(implicitF:cats.effect.Bracket[F,E]):F[A]", "kind" : "def"}, {"label" : "guarantee", "tail" : "(finalizer: F[Unit])(F: Bracket[F, E]): F[A]", "member" : "cats.effect.syntax.BracketOps.guarantee", "link" : "cats\/effect\/syntax\/BracketOps.html#guarantee(finalizer:F[Unit])(implicitF:cats.effect.Bracket[F,E]):F[A]", "kind" : "def"}, {"label" : "bracket", "tail" : "(use: (A) => F[B])(release: (A) => F[Unit])(F: Bracket[F, E]): F[B]", "member" : "cats.effect.syntax.BracketOps.bracket", "link" : "cats\/effect\/syntax\/BracketOps.html#bracket[B](use:A=>F[B])(release:A=>F[Unit])(implicitF:cats.effect.Bracket[F,E]):F[B]", "kind" : "def"}, {"label" : "bracketCase", "tail" : "(use: (A) => F[B])(release: (A, ExitCase[E]) => F[Unit])(F: Bracket[F, E]): F[B]", "member" : "cats.effect.syntax.BracketOps.bracketCase", "link" : "cats\/effect\/syntax\/BracketOps.html#bracketCase[B](use:A=>F[B])(release:(A,cats.effect.ExitCase[E])=>F[Unit])(implicitF:cats.effect.Bracket[F,E]):F[B]", "kind" : "def"}, {"member" : "cats.effect.syntax.BracketOps#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": F[A]", "member" : "cats.effect.syntax.BracketOps.self", "link" : "cats\/effect\/syntax\/BracketOps.html#self:F[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/syntax\/BracketOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/syntax\/BracketOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/BracketOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/BracketOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/syntax\/BracketOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/syntax\/BracketOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/syntax\/BracketOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/effect\/syntax\/BracketOps.html", "kind" : "class"}, {"name" : "cats.effect.syntax.BracketSyntax", "trait" : "cats\/effect\/syntax\/BracketSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "catsEffectSyntaxBracket", "tail" : "(fa: F[A])(bracket: Bracket[F, E]): BracketOps[F, E, A]", "member" : "cats.effect.syntax.BracketSyntax.catsEffectSyntaxBracket", "link" : "cats\/effect\/syntax\/BracketSyntax.html#catsEffectSyntaxBracket[F[_],A,E](fa:F[A])(implicitbracket:cats.effect.Bracket[F,E]):cats.effect.syntax.BracketOps[F,E,A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/BracketSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/BracketSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/BracketSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/BracketSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/BracketSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/BracketSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/BracketSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/BracketSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/BracketSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/BracketSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/BracketSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/BracketSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/BracketSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/BracketSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/BracketSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/BracketSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/BracketSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/BracketSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/BracketSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.concurrent", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$concurrent$.html", "members_object" : [{"label" : "catsEffectSyntaxConcurrentObj", "tail" : "(F: Concurrent[F]): ConcurrentObjOps[F]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrentObj", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#catsEffectSyntaxConcurrentObj[F[_]](F:cats.effect.Concurrent[F]):cats.effect.syntax.ConcurrentObjOps[F]", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxConcurrent", "tail" : "(fa: F[A]): ConcurrentOps[F, A]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrent", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#catsEffectSyntaxConcurrent[F[_],A](fa:F[A]):cats.effect.syntax.ConcurrentOps[F,A]", "kind" : "implicit def"}, {"label" : "toConcurrentOps", "tail" : "(target: F[A])(tc: Concurrent[F]): Ops[F, A] { type TypeClassType = cats.effect.Concurrent[F] }", "member" : "cats.effect.Concurrent.ToConcurrentOps.toConcurrentOps", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#toConcurrentOps[F[_],A](target:F[A])(implicittc:cats.effect.Concurrent[F]):cats.effect.Concurrent.Ops[F,A]{typeTypeClassType=cats.effect.Concurrent[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$concurrent$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$concurrent$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.concurrentEffect", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$concurrentEffect$.html", "members_object" : [{"label" : "toConcurrentEffectOps", "tail" : "(target: F[A])(tc: ConcurrentEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.ConcurrentEffect[F] }", "member" : "cats.effect.ConcurrentEffect.ToConcurrentEffectOps.toConcurrentEffectOps", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#toConcurrentEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.ConcurrentEffect[F]):cats.effect.ConcurrentEffect.Ops[F,A]{typeTypeClassType=cats.effect.ConcurrentEffect[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$concurrentEffect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.ConcurrentEffectSyntax", "trait" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toConcurrentEffectOps", "tail" : "(target: F[A])(tc: ConcurrentEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.ConcurrentEffect[F] }", "member" : "cats.effect.ConcurrentEffect.ToConcurrentEffectOps.toConcurrentEffectOps", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#toConcurrentEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.ConcurrentEffect[F]):cats.effect.ConcurrentEffect.Ops[F,A]{typeTypeClassType=cats.effect.ConcurrentEffect[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentEffectSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.ConcurrentObjOps", "shortDescription" : "", "members_class" : [{"label" : "parSequenceN", "tail" : "(n: Long)(tma: T[F[A]])(T: Traverse[T], P: Parallel[F]): F[T[A]]", "member" : "cats.effect.syntax.ConcurrentObjOps.parSequenceN", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#parSequenceN[T[_],A](n:Long)(tma:T[F[A]])(implicitT:cats.Traverse[T],implicitP:cats.Parallel[F]):F[T[A]]", "kind" : "def"}, {"label" : "parTraverseN", "tail" : "(n: Long)(ta: T[A])(f: (A) => F[B])(T: Traverse[T], P: Parallel[F]): F[T[B]]", "member" : "cats.effect.syntax.ConcurrentObjOps.parTraverseN", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#parTraverseN[T[_],A,B](n:Long)(ta:T[A])(f:A=>F[B])(implicitT:cats.Traverse[T],implicitP:cats.Parallel[F]):F[T[B]]", "kind" : "def"}, {"member" : "cats.effect.syntax.ConcurrentObjOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/syntax\/ConcurrentObjOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/effect\/syntax\/ConcurrentObjOps.html", "kind" : "class"}, {"name" : "cats.effect.syntax.ConcurrentOps", "shortDescription" : "", "members_class" : [{"label" : "timeoutTo", "tail" : "(duration: FiniteDuration, fallback: F[A])(F: Concurrent[F], timer: Timer[F]): F[A]", "member" : "cats.effect.syntax.ConcurrentOps.timeoutTo", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#timeoutTo(duration:scala.concurrent.duration.FiniteDuration,fallback:F[A])(implicitF:cats.effect.Concurrent[F],implicittimer:cats.effect.Timer[F]):F[A]", "kind" : "def"}, {"label" : "timeout", "tail" : "(duration: FiniteDuration)(F: Concurrent[F], timer: Timer[F]): F[A]", "member" : "cats.effect.syntax.ConcurrentOps.timeout", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#timeout(duration:scala.concurrent.duration.FiniteDuration)(implicitF:cats.effect.Concurrent[F],implicittimer:cats.effect.Timer[F]):F[A]", "kind" : "def"}, {"member" : "cats.effect.syntax.ConcurrentOps#<init>", "error" : "unsupported entity"}, {"label" : "self", "tail" : ": F[A]", "member" : "cats.effect.syntax.ConcurrentOps.self", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#self:F[A]", "kind" : "val"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/syntax\/ConcurrentOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/syntax\/ConcurrentOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/effect\/syntax\/ConcurrentOps.html", "kind" : "class"}, {"name" : "cats.effect.syntax.ConcurrentSyntax", "trait" : "cats\/effect\/syntax\/ConcurrentSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "catsEffectSyntaxConcurrentObj", "tail" : "(F: Concurrent[F]): ConcurrentObjOps[F]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrentObj", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#catsEffectSyntaxConcurrentObj[F[_]](F:cats.effect.Concurrent[F]):cats.effect.syntax.ConcurrentObjOps[F]", "kind" : "implicit def"}, {"label" : "catsEffectSyntaxConcurrent", "tail" : "(fa: F[A]): ConcurrentOps[F, A]", "member" : "cats.effect.syntax.ConcurrentSyntax.catsEffectSyntaxConcurrent", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#catsEffectSyntaxConcurrent[F[_],A](fa:F[A]):cats.effect.syntax.ConcurrentOps[F,A]", "kind" : "implicit def"}, {"label" : "toConcurrentOps", "tail" : "(target: F[A])(tc: Concurrent[F]): Ops[F, A] { type TypeClassType = cats.effect.Concurrent[F] }", "member" : "cats.effect.Concurrent.ToConcurrentOps.toConcurrentOps", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#toConcurrentOps[F[_],A](target:F[A])(implicittc:cats.effect.Concurrent[F]):cats.effect.Concurrent.Ops[F,A]{typeTypeClassType=cats.effect.Concurrent[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ConcurrentSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.effect", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$effect$.html", "members_object" : [{"label" : "toEffectOps", "tail" : "(target: F[A])(tc: Effect[F]): Ops[F, A] { type TypeClassType = cats.effect.Effect[F] }", "member" : "cats.effect.Effect.ToEffectOps.toEffectOps", "link" : "cats\/effect\/syntax\/package$$effect$.html#toEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.Effect[F]):cats.effect.Effect.Ops[F,A]{typeTypeClassType=cats.effect.Effect[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$effect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$effect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$effect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$effect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$effect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$effect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$effect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$effect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$effect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$effect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$effect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$effect$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$effect$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$effect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$effect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$effect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$effect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$effect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$effect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.EffectSyntax", "trait" : "cats\/effect\/syntax\/EffectSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toEffectOps", "tail" : "(target: F[A])(tc: Effect[F]): Ops[F, A] { type TypeClassType = cats.effect.Effect[F] }", "member" : "cats.effect.Effect.ToEffectOps.toEffectOps", "link" : "cats\/effect\/syntax\/EffectSyntax.html#toEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.Effect[F]):cats.effect.Effect.Ops[F,A]{typeTypeClassType=cats.effect.Effect[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/EffectSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/EffectSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/EffectSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/EffectSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/EffectSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/EffectSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/EffectSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/EffectSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/EffectSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/EffectSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/EffectSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/EffectSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/EffectSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/EffectSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/EffectSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/EffectSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/EffectSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/EffectSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/EffectSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.paralleln", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$paralleln$.html", "members_object" : [{"label" : "catsSyntaxParallelSequenceNConcurrent", "tail" : "(tma: T[M[A]])(arg0: Traverse[T], arg1: Monad[M]): ParallelSequenceNConcurrentOps[T, M, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelSequenceNConcurrent", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#catsSyntaxParallelSequenceNConcurrent[T[_],M[_],A](tma:T[M[A]])(implicitevidence$2:cats.Traverse[T],implicitevidence$3:cats.Monad[M]):cats.effect.syntax.ParallelSequenceNConcurrentOps[T,M,A]", "kind" : "implicit final def"}, {"label" : "catsSyntaxParallelTraverseNConcurrent", "tail" : "(ta: T[A])(arg0: Traverse[T]): ParallelTraversableNConcurrentOps[T, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelTraverseNConcurrent", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#catsSyntaxParallelTraverseNConcurrent[T[_],A](ta:T[A])(implicitevidence$1:cats.Traverse[T]):cats.effect.syntax.ParallelTraversableNConcurrentOps[T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$paralleln$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$paralleln$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.ParallelNSyntax", "trait" : "cats\/effect\/syntax\/ParallelNSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "catsSyntaxParallelSequenceNConcurrent", "tail" : "(tma: T[M[A]])(arg0: Traverse[T], arg1: Monad[M]): ParallelSequenceNConcurrentOps[T, M, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelSequenceNConcurrent", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#catsSyntaxParallelSequenceNConcurrent[T[_],M[_],A](tma:T[M[A]])(implicitevidence$2:cats.Traverse[T],implicitevidence$3:cats.Monad[M]):cats.effect.syntax.ParallelSequenceNConcurrentOps[T,M,A]", "kind" : "implicit final def"}, {"label" : "catsSyntaxParallelTraverseNConcurrent", "tail" : "(ta: T[A])(arg0: Traverse[T]): ParallelTraversableNConcurrentOps[T, A]", "member" : "cats.effect.syntax.ParallelNSyntax.catsSyntaxParallelTraverseNConcurrent", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#catsSyntaxParallelTraverseNConcurrent[T[_],A](ta:T[A])(implicitevidence$1:cats.Traverse[T]):cats.effect.syntax.ParallelTraversableNConcurrentOps[T,A]", "kind" : "implicit final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ParallelNSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "cats.effect.syntax.ParallelSequenceNConcurrentOps", "shortDescription" : "", "members_class" : [{"label" : "parSequenceN", "tail" : "(n: Long)(M: Concurrent[M], T: Traverse[T], P: Parallel[M]): M[T[A]]", "member" : "cats.effect.syntax.ParallelSequenceNConcurrentOps.parSequenceN", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#parSequenceN(n:Long)(implicitM:cats.effect.Concurrent[M],implicitT:cats.Traverse[T],implicitP:cats.Parallel[M]):M[T[A]]", "kind" : "def"}, {"member" : "cats.effect.syntax.ParallelSequenceNConcurrentOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/effect\/syntax\/ParallelSequenceNConcurrentOps.html", "kind" : "class"}, {"name" : "cats.effect.syntax.ParallelTraversableNConcurrentOps", "shortDescription" : "", "members_class" : [{"label" : "parTraverseN", "tail" : "(n: Long)(f: (A) => M[B])(M: Concurrent[M], T: Traverse[T], P: Parallel[M]): M[T[B]]", "member" : "cats.effect.syntax.ParallelTraversableNConcurrentOps.parTraverseN", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#parTraverseN[M[_],B](n:Long)(f:A=>M[B])(implicitM:cats.effect.Concurrent[M],implicitT:cats.Traverse[T],implicitP:cats.Parallel[M]):M[T[B]]", "kind" : "def"}, {"member" : "cats.effect.syntax.ParallelTraversableNConcurrentOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "cats\/effect\/syntax\/ParallelTraversableNConcurrentOps.html", "kind" : "class"}, {"name" : "cats.effect.syntax.syncEffect", "shortDescription" : "", "object" : "cats\/effect\/syntax\/package$$syncEffect$.html", "members_object" : [{"label" : "toSyncEffectOps", "tail" : "(target: F[A])(tc: SyncEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.SyncEffect[F] }", "member" : "cats.effect.SyncEffect.ToSyncEffectOps.toSyncEffectOps", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#toSyncEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.SyncEffect[F]):cats.effect.SyncEffect.Ops[F,A]{typeTypeClassType=cats.effect.SyncEffect[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/package$$syncEffect$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "cats.effect.syntax.SyncEffectSyntax", "trait" : "cats\/effect\/syntax\/SyncEffectSyntax.html", "kind" : "trait", "members_trait" : [{"label" : "toSyncEffectOps", "tail" : "(target: F[A])(tc: SyncEffect[F]): Ops[F, A] { type TypeClassType = cats.effect.SyncEffect[F] }", "member" : "cats.effect.SyncEffect.ToSyncEffectOps.toSyncEffectOps", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#toSyncEffectOps[F[_],A](target:F[A])(implicittc:cats.effect.SyncEffect[F]):cats.effect.SyncEffect.Ops[F,A]{typeTypeClassType=cats.effect.SyncEffect[F]}", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/syntax\/SyncEffectSyntax.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "cats.effect.concurrent" : [{"name" : "cats.effect.concurrent.Backpressure", "object" : "cats\/effect\/concurrent\/Backpressure$.html", "members_object" : [{"label" : "Strategy", "tail" : "", "member" : "cats.effect.concurrent.Backpressure.Strategy", "link" : "cats\/effect\/concurrent\/Backpressure$.html#Strategy", "kind" : "object"}, {"label" : "Strategy", "tail" : "", "member" : "cats.effect.concurrent.Backpressure.Strategy", "link" : "cats\/effect\/concurrent\/Backpressure$.html#StrategyextendsAnyRef", "kind" : "sealed trait"}, {"label" : "apply", "tail" : "(strategy: Strategy, bound: Int)(arg0: Concurrent[F]): F[Backpressure[F]]", "member" : "cats.effect.concurrent.Backpressure.apply", "link" : "cats\/effect\/concurrent\/Backpressure$.html#apply[F[_]](strategy:cats.effect.concurrent.Backpressure.Strategy,bound:Int)(implicitevidence$1:cats.effect.Concurrent[F]):F[cats.effect.concurrent.Backpressure[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Backpressure$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Backpressure$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Backpressure$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Backpressure$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Backpressure$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Backpressure$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Backpressure$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Backpressure$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Backpressure$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Backpressure$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Backpressure$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Backpressure$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Backpressure$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Backpressure$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Backpressure$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Backpressure$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Backpressure$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Backpressure$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Backpressure$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/concurrent\/Backpressure.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Backpressure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Backpressure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Backpressure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Backpressure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Backpressure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Backpressure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Backpressure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Backpressure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Backpressure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Backpressure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Backpressure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Backpressure.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Backpressure.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Backpressure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Backpressure.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Backpressure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Backpressure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Backpressure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Backpressure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "metered", "tail" : "(f: F[A]): F[Option[A]]", "member" : "cats.effect.concurrent.Backpressure.metered", "link" : "cats\/effect\/concurrent\/Backpressure.html#metered[A](f:F[A]):F[Option[A]]", "kind" : "abstract def"}], "shortDescription" : "Utility to apply backpressure semantics to the execution of an Effect."}, {"name" : "cats.effect.concurrent.Deferred", "shortDescription" : "A purely functional synchronization primitive which represents a single valuewhich may not yet be available.", "object" : "cats\/effect\/concurrent\/Deferred$.html", "members_class" : [{"label" : "mapK", "tail" : "(f: ~>[F, G]): Deferred[G, A]", "member" : "cats.effect.concurrent.Deferred.mapK", "link" : "cats\/effect\/concurrent\/Deferred.html#mapK[G[_]](f:F~>G):cats.effect.concurrent.Deferred[G,A]", "kind" : "def"}, {"member" : "cats.effect.concurrent.Deferred#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Deferred.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Deferred.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Deferred.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Deferred.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Deferred.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Deferred.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Deferred.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Deferred.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Deferred.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Deferred.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Deferred.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Deferred.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Deferred.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Deferred.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Deferred.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Deferred.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Deferred.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Deferred.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Deferred.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "complete", "tail" : "(a: A): F[Unit]", "member" : "cats.effect.concurrent.Deferred.complete", "link" : "cats\/effect\/concurrent\/Deferred.html#complete(a:A):F[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.Deferred.get", "link" : "cats\/effect\/concurrent\/Deferred.html#get:F[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "unsafeUncancelable", "tail" : "(arg0: Async[F]): Deferred[F, A]", "member" : "cats.effect.concurrent.Deferred.unsafeUncancelable", "link" : "cats\/effect\/concurrent\/Deferred$.html#unsafeUncancelable[F[_],A](implicitevidence$2:cats.effect.Async[F]):cats.effect.concurrent.Deferred[F,A]", "kind" : "def"}, {"label" : "tryableUncancelable", "tail" : "(F: Async[F]): F[TryableDeferred[F, A]]", "member" : "cats.effect.concurrent.Deferred.tryableUncancelable", "link" : "cats\/effect\/concurrent\/Deferred$.html#tryableUncancelable[F[_],A](implicitF:cats.effect.Async[F]):F[cats.effect.concurrent.TryableDeferred[F,A]]", "kind" : "def"}, {"label" : "uncancelableIn", "tail" : "(F: Sync[F], G: Async[G]): F[Deferred[G, A]]", "member" : "cats.effect.concurrent.Deferred.uncancelableIn", "link" : "cats\/effect\/concurrent\/Deferred$.html#uncancelableIn[F[_],G[_],A](implicitF:cats.effect.Sync[F],implicitG:cats.effect.Async[G]):F[cats.effect.concurrent.Deferred[G,A]]", "kind" : "def"}, {"label" : "in", "tail" : "(F: Sync[F], G: Concurrent[G]): F[Deferred[G, A]]", "member" : "cats.effect.concurrent.Deferred.in", "link" : "cats\/effect\/concurrent\/Deferred$.html#in[F[_],G[_],A](implicitF:cats.effect.Sync[F],implicitG:cats.effect.Concurrent[G]):F[cats.effect.concurrent.Deferred[G,A]]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(F: Async[F]): F[Deferred[F, A]]", "member" : "cats.effect.concurrent.Deferred.uncancelable", "link" : "cats\/effect\/concurrent\/Deferred$.html#uncancelable[F[_],A](implicitF:cats.effect.Async[F]):F[cats.effect.concurrent.Deferred[F,A]]", "kind" : "def"}, {"label" : "unsafe", "tail" : "(arg0: Concurrent[F]): Deferred[F, A]", "member" : "cats.effect.concurrent.Deferred.unsafe", "link" : "cats\/effect\/concurrent\/Deferred$.html#unsafe[F[_],A](implicitevidence$1:cats.effect.Concurrent[F]):cats.effect.concurrent.Deferred[F,A]", "kind" : "def"}, {"label" : "tryable", "tail" : "(F: Concurrent[F]): F[TryableDeferred[F, A]]", "member" : "cats.effect.concurrent.Deferred.tryable", "link" : "cats\/effect\/concurrent\/Deferred$.html#tryable[F[_],A](implicitF:cats.effect.Concurrent[F]):F[cats.effect.concurrent.TryableDeferred[F,A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(F: Concurrent[F]): F[Deferred[F, A]]", "member" : "cats.effect.concurrent.Deferred.apply", "link" : "cats\/effect\/concurrent\/Deferred$.html#apply[F[_],A](implicitF:cats.effect.Concurrent[F]):F[cats.effect.concurrent.Deferred[F,A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Deferred$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Deferred$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Deferred$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Deferred$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Deferred$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Deferred$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Deferred$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Deferred$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Deferred$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Deferred$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Deferred$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Deferred$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Deferred$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Deferred$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Deferred$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Deferred$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Deferred$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Deferred$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Deferred$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/concurrent\/Deferred.html", "kind" : "class"}, {"name" : "cats.effect.concurrent.MVar", "shortDescription" : "A mutable location, that is either empty or contains a value of type A.", "object" : "cats\/effect\/concurrent\/MVar$.html", "members_class" : [{"label" : "mapK", "tail" : "(f: ~>[F, G]): MVar[G, A]", "member" : "cats.effect.concurrent.MVar.mapK", "link" : "cats\/effect\/concurrent\/MVar.html#mapK[G[_]](f:F~>G):cats.effect.concurrent.MVar[G,A]", "kind" : "def"}, {"member" : "cats.effect.concurrent.MVar#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/MVar.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/MVar.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/MVar.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/MVar.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/MVar.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/MVar.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/MVar.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/MVar.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/MVar.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/MVar.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/MVar.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/MVar.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/MVar.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/MVar.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/MVar.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/MVar.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "read", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.MVar.read", "link" : "cats\/effect\/concurrent\/MVar.html#read:F[A]", "kind" : "abstract def"}, {"label" : "tryTake", "tail" : "(): F[Option[A]]", "member" : "cats.effect.concurrent.MVar.tryTake", "link" : "cats\/effect\/concurrent\/MVar.html#tryTake:F[Option[A]]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.MVar.take", "link" : "cats\/effect\/concurrent\/MVar.html#take:F[A]", "kind" : "abstract def"}, {"label" : "tryPut", "tail" : "(a: A): F[Boolean]", "member" : "cats.effect.concurrent.MVar.tryPut", "link" : "cats\/effect\/concurrent\/MVar.html#tryPut(a:A):F[Boolean]", "kind" : "abstract def"}, {"label" : "put", "tail" : "(a: A): F[Unit]", "member" : "cats.effect.concurrent.MVar.put", "link" : "cats\/effect\/concurrent\/MVar.html#put(a:A):F[Unit]", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): F[Boolean]", "member" : "cats.effect.concurrent.MVar.isEmpty", "link" : "cats\/effect\/concurrent\/MVar.html#isEmpty:F[Boolean]", "kind" : "abstract def"}], "members_object" : [{"label" : "ApplyBuilders", "tail" : "", "member" : "cats.effect.concurrent.MVar.ApplyBuilders", "link" : "cats\/effect\/concurrent\/MVar$.html#ApplyBuilders[F[_]]extendsAnyVal", "kind" : "final class"}, {"label" : "uncancelableEmptyIn", "tail" : "(F: Sync[F], G: Async[G]): F[MVar2[G, A]]", "member" : "cats.effect.concurrent.MVar.uncancelableEmptyIn", "link" : "cats\/effect\/concurrent\/MVar$.html#uncancelableEmptyIn[F[_],G[_],A](implicitF:cats.effect.Sync[F],implicitG:cats.effect.Async[G]):F[cats.effect.concurrent.MVar2[G,A]]", "kind" : "def"}, {"label" : "uncancelableIn", "tail" : "(initial: A)(F: Sync[F], G: Async[G]): F[MVar2[G, A]]", "member" : "cats.effect.concurrent.MVar.uncancelableIn", "link" : "cats\/effect\/concurrent\/MVar$.html#uncancelableIn[F[_],G[_],A](initial:A)(implicitF:cats.effect.Sync[F],implicitG:cats.effect.Async[G]):F[cats.effect.concurrent.MVar2[G,A]]", "kind" : "def"}, {"label" : "emptyIn", "tail" : "(F: Sync[F], G: Concurrent[G]): F[MVar2[G, A]]", "member" : "cats.effect.concurrent.MVar.emptyIn", "link" : "cats\/effect\/concurrent\/MVar$.html#emptyIn[F[_],G[_],A](implicitF:cats.effect.Sync[F],implicitG:cats.effect.Concurrent[G]):F[cats.effect.concurrent.MVar2[G,A]]", "kind" : "def"}, {"label" : "in", "tail" : "(initial: A)(F: Sync[F], G: Concurrent[G]): F[MVar2[G, A]]", "member" : "cats.effect.concurrent.MVar.in", "link" : "cats\/effect\/concurrent\/MVar$.html#in[F[_],G[_],A](initial:A)(implicitF:cats.effect.Sync[F],implicitG:cats.effect.Concurrent[G]):F[cats.effect.concurrent.MVar2[G,A]]", "kind" : "def"}, {"label" : "uncancelableOf", "tail" : "(initial: A)(F: Async[F]): F[MVar2[F, A]]", "member" : "cats.effect.concurrent.MVar.uncancelableOf", "link" : "cats\/effect\/concurrent\/MVar$.html#uncancelableOf[F[_],A](initial:A)(implicitF:cats.effect.Async[F]):F[cats.effect.concurrent.MVar2[F,A]]", "kind" : "def"}, {"label" : "of", "tail" : "(initial: A)(F: Concurrent[F]): F[MVar2[F, A]]", "member" : "cats.effect.concurrent.MVar.of", "link" : "cats\/effect\/concurrent\/MVar$.html#of[F[_],A](initial:A)(implicitF:cats.effect.Concurrent[F]):F[cats.effect.concurrent.MVar2[F,A]]", "kind" : "def"}, {"label" : "uncancelableEmpty", "tail" : "(F: Async[F]): F[MVar2[F, A]]", "member" : "cats.effect.concurrent.MVar.uncancelableEmpty", "link" : "cats\/effect\/concurrent\/MVar$.html#uncancelableEmpty[F[_],A](implicitF:cats.effect.Async[F]):F[cats.effect.concurrent.MVar2[F,A]]", "kind" : "def"}, {"label" : "empty", "tail" : "(F: Concurrent[F]): F[MVar2[F, A]]", "member" : "cats.effect.concurrent.MVar.empty", "link" : "cats\/effect\/concurrent\/MVar$.html#empty[F[_],A](implicitF:cats.effect.Concurrent[F]):F[cats.effect.concurrent.MVar2[F,A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(F: Concurrent[F]): ApplyBuilders[F]", "member" : "cats.effect.concurrent.MVar.apply", "link" : "cats\/effect\/concurrent\/MVar$.html#apply[F[_]](implicitF:cats.effect.Concurrent[F]):cats.effect.concurrent.MVar.ApplyBuilders[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/MVar$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/MVar$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/MVar$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/MVar$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/MVar$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/MVar$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/MVar$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/MVar$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/MVar$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/MVar$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/MVar$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/MVar$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/MVar$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/MVar$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/MVar$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/MVar$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/concurrent\/MVar.html", "kind" : "class"}, {"name" : "cats.effect.concurrent.MVar2", "shortDescription" : "A mutable location, that is either empty or contains a value of type A.", "members_class" : [{"label" : "imapK", "tail" : "(f: ~>[F, G], g: ~>[G, F]): MVar2[G, A]", "member" : "cats.effect.concurrent.MVar2.imapK", "link" : "cats\/effect\/concurrent\/MVar2.html#imapK[G[_]](f:F~>G,g:G~>F):cats.effect.concurrent.MVar2[G,A]", "kind" : "def"}, {"member" : "cats.effect.concurrent.MVar2#<init>", "error" : "unsupported entity"}, {"label" : "mapK", "tail" : "(f: ~>[F, G]): MVar[G, A]", "member" : "cats.effect.concurrent.MVar.mapK", "link" : "cats\/effect\/concurrent\/MVar2.html#mapK[G[_]](f:F~>G):cats.effect.concurrent.MVar[G,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/MVar2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/MVar2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/MVar2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/MVar2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/MVar2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/MVar2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/MVar2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/MVar2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/MVar2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/MVar2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/MVar2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/MVar2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/MVar2.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/MVar2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/MVar2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/MVar2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/MVar2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "modify_", "tail" : "(f: (A) => F[A]): F[Unit]", "member" : "cats.effect.concurrent.MVar2.modify_", "link" : "cats\/effect\/concurrent\/MVar2.html#modify_(f:A=>F[A]):F[Unit]", "kind" : "abstract def"}, {"label" : "modify", "tail" : "(f: (A) => F[(A, B)]): F[B]", "member" : "cats.effect.concurrent.MVar2.modify", "link" : "cats\/effect\/concurrent\/MVar2.html#modify[B](f:A=>F[(A,B)]):F[B]", "kind" : "abstract def"}, {"label" : "use", "tail" : "(f: (A) => F[B]): F[B]", "member" : "cats.effect.concurrent.MVar2.use", "link" : "cats\/effect\/concurrent\/MVar2.html#use[B](f:A=>F[B]):F[B]", "kind" : "abstract def"}, {"label" : "tryRead", "tail" : "(): F[Option[A]]", "member" : "cats.effect.concurrent.MVar2.tryRead", "link" : "cats\/effect\/concurrent\/MVar2.html#tryRead:F[Option[A]]", "kind" : "abstract def"}, {"label" : "swap", "tail" : "(newValue: A): F[A]", "member" : "cats.effect.concurrent.MVar2.swap", "link" : "cats\/effect\/concurrent\/MVar2.html#swap(newValue:A):F[A]", "kind" : "abstract def"}, {"label" : "read", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.MVar.read", "link" : "cats\/effect\/concurrent\/MVar2.html#read:F[A]", "kind" : "abstract def"}, {"label" : "tryTake", "tail" : "(): F[Option[A]]", "member" : "cats.effect.concurrent.MVar.tryTake", "link" : "cats\/effect\/concurrent\/MVar2.html#tryTake:F[Option[A]]", "kind" : "abstract def"}, {"label" : "take", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.MVar.take", "link" : "cats\/effect\/concurrent\/MVar2.html#take:F[A]", "kind" : "abstract def"}, {"label" : "tryPut", "tail" : "(a: A): F[Boolean]", "member" : "cats.effect.concurrent.MVar.tryPut", "link" : "cats\/effect\/concurrent\/MVar2.html#tryPut(a:A):F[Boolean]", "kind" : "abstract def"}, {"label" : "put", "tail" : "(a: A): F[Unit]", "member" : "cats.effect.concurrent.MVar.put", "link" : "cats\/effect\/concurrent\/MVar2.html#put(a:A):F[Unit]", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): F[Boolean]", "member" : "cats.effect.concurrent.MVar.isEmpty", "link" : "cats\/effect\/concurrent\/MVar2.html#isEmpty:F[Boolean]", "kind" : "abstract def"}], "class" : "cats\/effect\/concurrent\/MVar2.html", "kind" : "class"}, {"name" : "cats.effect.concurrent.Ref", "shortDescription" : "An asynchronous, concurrent mutable reference.", "object" : "cats\/effect\/concurrent\/Ref$.html", "members_class" : [{"label" : "mapK", "tail" : "(f: ~>[F, G])(F: Functor[F]): Ref[G, A]", "member" : "cats.effect.concurrent.Ref.mapK", "link" : "cats\/effect\/concurrent\/Ref.html#mapK[G[_]](f:F~>G)(implicitF:cats.Functor[F]):cats.effect.concurrent.Ref[G,A]", "kind" : "def"}, {"label" : "updateAndGet", "tail" : "(f: (A) => A): F[A]", "member" : "cats.effect.concurrent.Ref.updateAndGet", "link" : "cats\/effect\/concurrent\/Ref.html#updateAndGet(f:A=>A):F[A]", "kind" : "def"}, {"label" : "getAndSet", "tail" : "(a: A): F[A]", "member" : "cats.effect.concurrent.Ref.getAndSet", "link" : "cats\/effect\/concurrent\/Ref.html#getAndSet(a:A):F[A]", "kind" : "def"}, {"label" : "getAndUpdate", "tail" : "(f: (A) => A): F[A]", "member" : "cats.effect.concurrent.Ref.getAndUpdate", "link" : "cats\/effect\/concurrent\/Ref.html#getAndUpdate(f:A=>A):F[A]", "kind" : "def"}, {"member" : "cats.effect.concurrent.Ref#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Ref.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Ref.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Ref.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Ref.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Ref.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Ref.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Ref.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Ref.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Ref.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Ref.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Ref.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Ref.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Ref.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Ref.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Ref.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Ref.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Ref.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Ref.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Ref.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "modifyState", "tail" : "(state: State[A, B]): F[B]", "member" : "cats.effect.concurrent.Ref.modifyState", "link" : "cats\/effect\/concurrent\/Ref.html#modifyState[B](state:cats.data.State[A,B]):F[B]", "kind" : "abstract def"}, {"label" : "tryModifyState", "tail" : "(state: State[A, B]): F[Option[B]]", "member" : "cats.effect.concurrent.Ref.tryModifyState", "link" : "cats\/effect\/concurrent\/Ref.html#tryModifyState[B](state:cats.data.State[A,B]):F[Option[B]]", "kind" : "abstract def"}, {"label" : "modify", "tail" : "(f: (A) => (A, B)): F[B]", "member" : "cats.effect.concurrent.Ref.modify", "link" : "cats\/effect\/concurrent\/Ref.html#modify[B](f:A=>(A,B)):F[B]", "kind" : "abstract def"}, {"label" : "update", "tail" : "(f: (A) => A): F[Unit]", "member" : "cats.effect.concurrent.Ref.update", "link" : "cats\/effect\/concurrent\/Ref.html#update(f:A=>A):F[Unit]", "kind" : "abstract def"}, {"label" : "tryModify", "tail" : "(f: (A) => (A, B)): F[Option[B]]", "member" : "cats.effect.concurrent.Ref.tryModify", "link" : "cats\/effect\/concurrent\/Ref.html#tryModify[B](f:A=>(A,B)):F[Option[B]]", "kind" : "abstract def"}, {"label" : "tryUpdate", "tail" : "(f: (A) => A): F[Boolean]", "member" : "cats.effect.concurrent.Ref.tryUpdate", "link" : "cats\/effect\/concurrent\/Ref.html#tryUpdate(f:A=>A):F[Boolean]", "kind" : "abstract def"}, {"label" : "access", "tail" : "(): F[(A, (A) => F[Boolean])]", "member" : "cats.effect.concurrent.Ref.access", "link" : "cats\/effect\/concurrent\/Ref.html#access:F[(A,A=>F[Boolean])]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(a: A): F[Unit]", "member" : "cats.effect.concurrent.Ref.set", "link" : "cats\/effect\/concurrent\/Ref.html#set(a:A):F[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.Ref.get", "link" : "cats\/effect\/concurrent\/Ref.html#get:F[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "catsInvariantForRef", "tail" : "(arg0: Functor[F]): Invariant[[β$2$]Ref[F, β$2$]]", "member" : "cats.effect.concurrent.Ref.catsInvariantForRef", "link" : "cats\/effect\/concurrent\/Ref$.html#catsInvariantForRef[F[_]](implicitevidence$1:cats.Functor[F]):cats.Invariant[[β$2$]cats.effect.concurrent.Ref[F,β$2$]]", "kind" : "implicit def"}, {"label" : "RefOps", "tail" : "", "member" : "cats.effect.concurrent.Ref.RefOps", "link" : "cats\/effect\/concurrent\/Ref$.html#RefOps[F[_],A]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "ApplyBuilders", "tail" : "", "member" : "cats.effect.concurrent.Ref.ApplyBuilders", "link" : "cats\/effect\/concurrent\/Ref$.html#ApplyBuilders[F[_]]extendsAnyVal", "kind" : "final class"}, {"label" : "lens", "tail" : "(ref: Ref[F, A])(get: (A) => B, set: (A) => (B) => A)(F: Sync[F]): Ref[F, B]", "member" : "cats.effect.concurrent.Ref.lens", "link" : "cats\/effect\/concurrent\/Ref$.html#lens[F[_],A,B<:AnyRef](ref:cats.effect.concurrent.Ref[F,A])(get:A=>B,set:A=>(B=>A))(implicitF:cats.effect.Sync[F]):cats.effect.concurrent.Ref[F,B]", "kind" : "def"}, {"label" : "unsafe", "tail" : "(a: A)(F: Sync[F]): Ref[F, A]", "member" : "cats.effect.concurrent.Ref.unsafe", "link" : "cats\/effect\/concurrent\/Ref$.html#unsafe[F[_],A](a:A)(implicitF:cats.effect.Sync[F]):cats.effect.concurrent.Ref[F,A]", "kind" : "def"}, {"label" : "in", "tail" : "(a: A)(F: Sync[F], G: Sync[G]): F[Ref[G, A]]", "member" : "cats.effect.concurrent.Ref.in", "link" : "cats\/effect\/concurrent\/Ref$.html#in[F[_],G[_],A](a:A)(implicitF:cats.effect.Sync[F],implicitG:cats.effect.Sync[G]):F[cats.effect.concurrent.Ref[G,A]]", "kind" : "def"}, {"label" : "of", "tail" : "(a: A)(F: Sync[F]): F[Ref[F, A]]", "member" : "cats.effect.concurrent.Ref.of", "link" : "cats\/effect\/concurrent\/Ref$.html#of[F[_],A](a:A)(implicitF:cats.effect.Sync[F]):F[cats.effect.concurrent.Ref[F,A]]", "kind" : "def"}, {"label" : "apply", "tail" : "(F: Sync[F]): ApplyBuilders[F]", "member" : "cats.effect.concurrent.Ref.apply", "link" : "cats\/effect\/concurrent\/Ref$.html#apply[F[_]](implicitF:cats.effect.Sync[F]):cats.effect.concurrent.Ref.ApplyBuilders[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Ref$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Ref$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Ref$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Ref$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Ref$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Ref$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Ref$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Ref$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Ref$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Ref$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Ref$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Ref$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Ref$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Ref$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Ref$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Ref$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Ref$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Ref$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Ref$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/concurrent\/Ref.html", "kind" : "class"}, {"name" : "cats.effect.concurrent.Semaphore", "shortDescription" : "A purely functional semaphore.", "object" : "cats\/effect\/concurrent\/Semaphore$.html", "members_class" : [{"label" : "imapK", "tail" : "(f: ~>[F, G], g: ~>[G, F]): Semaphore[G]", "member" : "cats.effect.concurrent.Semaphore.imapK", "link" : "cats\/effect\/concurrent\/Semaphore.html#imapK[G[_]](f:F~>G,g:G~>F):cats.effect.concurrent.Semaphore[G]", "kind" : "def"}, {"label" : "release", "tail" : "(): F[Unit]", "member" : "cats.effect.concurrent.Semaphore.release", "link" : "cats\/effect\/concurrent\/Semaphore.html#release:F[Unit]", "kind" : "def"}, {"label" : "tryAcquire", "tail" : "(): F[Boolean]", "member" : "cats.effect.concurrent.Semaphore.tryAcquire", "link" : "cats\/effect\/concurrent\/Semaphore.html#tryAcquire:F[Boolean]", "kind" : "def"}, {"label" : "acquire", "tail" : "(): F[Unit]", "member" : "cats.effect.concurrent.Semaphore.acquire", "link" : "cats\/effect\/concurrent\/Semaphore.html#acquire:F[Unit]", "kind" : "def"}, {"member" : "cats.effect.concurrent.Semaphore#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Semaphore.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Semaphore.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Semaphore.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Semaphore.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Semaphore.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Semaphore.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Semaphore.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Semaphore.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Semaphore.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Semaphore.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Semaphore.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Semaphore.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Semaphore.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Semaphore.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Semaphore.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Semaphore.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Semaphore.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Semaphore.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Semaphore.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withPermit", "tail" : "(t: F[A]): F[A]", "member" : "cats.effect.concurrent.Semaphore.withPermit", "link" : "cats\/effect\/concurrent\/Semaphore.html#withPermit[A](t:F[A]):F[A]", "kind" : "abstract def"}, {"label" : "releaseN", "tail" : "(n: Long): F[Unit]", "member" : "cats.effect.concurrent.Semaphore.releaseN", "link" : "cats\/effect\/concurrent\/Semaphore.html#releaseN(n:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "tryAcquireN", "tail" : "(n: Long): F[Boolean]", "member" : "cats.effect.concurrent.Semaphore.tryAcquireN", "link" : "cats\/effect\/concurrent\/Semaphore.html#tryAcquireN(n:Long):F[Boolean]", "kind" : "abstract def"}, {"label" : "acquireN", "tail" : "(n: Long): F[Unit]", "member" : "cats.effect.concurrent.Semaphore.acquireN", "link" : "cats\/effect\/concurrent\/Semaphore.html#acquireN(n:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "count", "tail" : "(): F[Long]", "member" : "cats.effect.concurrent.Semaphore.count", "link" : "cats\/effect\/concurrent\/Semaphore.html#count:F[Long]", "kind" : "abstract def"}, {"label" : "available", "tail" : "(): F[Long]", "member" : "cats.effect.concurrent.Semaphore.available", "link" : "cats\/effect\/concurrent\/Semaphore.html#available:F[Long]", "kind" : "abstract def"}], "members_object" : [{"label" : "uncancelableIn", "tail" : "(n: Long)(F: Sync[F], G: Async[G]): F[Semaphore[G]]", "member" : "cats.effect.concurrent.Semaphore.uncancelableIn", "link" : "cats\/effect\/concurrent\/Semaphore$.html#uncancelableIn[F[_],G[_]](n:Long)(implicitF:cats.effect.Sync[F],implicitG:cats.effect.Async[G]):F[cats.effect.concurrent.Semaphore[G]]", "kind" : "def"}, {"label" : "in", "tail" : "(n: Long)(F: Sync[F], G: Concurrent[G]): F[Semaphore[G]]", "member" : "cats.effect.concurrent.Semaphore.in", "link" : "cats\/effect\/concurrent\/Semaphore$.html#in[F[_],G[_]](n:Long)(implicitF:cats.effect.Sync[F],implicitG:cats.effect.Concurrent[G]):F[cats.effect.concurrent.Semaphore[G]]", "kind" : "def"}, {"label" : "uncancelable", "tail" : "(n: Long)(F: Async[F]): F[Semaphore[F]]", "member" : "cats.effect.concurrent.Semaphore.uncancelable", "link" : "cats\/effect\/concurrent\/Semaphore$.html#uncancelable[F[_]](n:Long)(implicitF:cats.effect.Async[F]):F[cats.effect.concurrent.Semaphore[F]]", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Long)(F: Concurrent[F]): F[Semaphore[F]]", "member" : "cats.effect.concurrent.Semaphore.apply", "link" : "cats\/effect\/concurrent\/Semaphore$.html#apply[F[_]](n:Long)(implicitF:cats.effect.Concurrent[F]):F[cats.effect.concurrent.Semaphore[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Semaphore$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Semaphore$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Semaphore$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Semaphore$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Semaphore$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Semaphore$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Semaphore$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Semaphore$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Semaphore$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Semaphore$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Semaphore$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Semaphore$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Semaphore$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Semaphore$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Semaphore$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Semaphore$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Semaphore$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Semaphore$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Semaphore$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "cats\/effect\/concurrent\/Semaphore.html", "kind" : "class"}, {"name" : "cats.effect.concurrent.Supervisor", "object" : "cats\/effect\/concurrent\/Supervisor$.html", "members_object" : [{"label" : "apply", "tail" : "(F: Concurrent[F], P: Parallel[F]): Resource[F, Supervisor[F]]", "member" : "cats.effect.concurrent.Supervisor.apply", "link" : "cats\/effect\/concurrent\/Supervisor$.html#apply[F[_]](implicitF:cats.effect.Concurrent[F],implicitP:cats.Parallel[F]):cats.effect.Resource[F,cats.effect.concurrent.Supervisor[F]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Supervisor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Supervisor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Supervisor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Supervisor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Supervisor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Supervisor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Supervisor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Supervisor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Supervisor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Supervisor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Supervisor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Supervisor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Supervisor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Supervisor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Supervisor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Supervisor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Supervisor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Supervisor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Supervisor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "cats\/effect\/concurrent\/Supervisor.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/Supervisor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/Supervisor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/Supervisor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/Supervisor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/Supervisor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/Supervisor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/Supervisor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Supervisor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Supervisor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/Supervisor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/Supervisor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/Supervisor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/Supervisor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/Supervisor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/Supervisor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/Supervisor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/Supervisor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/Supervisor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/Supervisor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "supervise", "tail" : "(fa: F[A]): F[Fiber[F, A]]", "member" : "cats.effect.concurrent.Supervisor.supervise", "link" : "cats\/effect\/concurrent\/Supervisor.html#supervise[A](fa:F[A]):F[cats.effect.Fiber[F,A]]", "kind" : "abstract def"}], "shortDescription" : "A fiber-based supervisor that monitors the lifecycle of all fibersthat are started via its interface."}, {"name" : "cats.effect.concurrent.TryableDeferred", "shortDescription" : "", "members_class" : [{"member" : "cats.effect.concurrent.TryableDeferred#<init>", "error" : "unsupported entity"}, {"label" : "mapK", "tail" : "(f: ~>[F, G]): Deferred[G, A]", "member" : "cats.effect.concurrent.Deferred.mapK", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#mapK[G[_]](f:F~>G):cats.effect.concurrent.Deferred[G,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "cats\/effect\/concurrent\/TryableDeferred.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "tryGet", "tail" : "(): F[Option[A]]", "member" : "cats.effect.concurrent.TryableDeferred.tryGet", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#tryGet:F[Option[A]]", "kind" : "abstract def"}, {"label" : "complete", "tail" : "(a: A): F[Unit]", "member" : "cats.effect.concurrent.Deferred.complete", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#complete(a:A):F[Unit]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): F[A]", "member" : "cats.effect.concurrent.Deferred.get", "link" : "cats\/effect\/concurrent\/TryableDeferred.html#get:F[A]", "kind" : "abstract def"}], "class" : "cats\/effect\/concurrent\/TryableDeferred.html", "kind" : "class"}]};